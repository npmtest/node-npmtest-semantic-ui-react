{"/home/travis/build/npmtest/node-npmtest-semantic-ui-react/test.js":"/* istanbul instrument in package npmtest_semantic_ui_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/lib.npmtest_semantic_ui_react.js":"/* istanbul instrument in package npmtest_semantic_ui_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_semantic_ui_react = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_semantic_ui_react = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-semantic-ui-react && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_semantic_ui_react */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_semantic_ui_react\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_semantic_ui_react.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_semantic_ui_react.rollup.js'] =\n            local.assetsDict['/assets.npmtest_semantic_ui_react.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_semantic_ui_react.__dirname + '/lib.npmtest_semantic_ui_react.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Confirm = require('./addons/Confirm');\n\nObject.defineProperty(exports, 'Confirm', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Confirm).default;\n  }\n});\n\nvar _Portal = require('./addons/Portal');\n\nObject.defineProperty(exports, 'Portal', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Portal).default;\n  }\n});\n\nvar _Radio = require('./addons/Radio');\n\nObject.defineProperty(exports, 'Radio', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Radio).default;\n  }\n});\n\nvar _Select = require('./addons/Select');\n\nObject.defineProperty(exports, 'Select', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Select).default;\n  }\n});\n\nvar _TextArea = require('./addons/TextArea');\n\nObject.defineProperty(exports, 'TextArea', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TextArea).default;\n  }\n});\n\nvar _Breadcrumb = require('./collections/Breadcrumb');\n\nObject.defineProperty(exports, 'Breadcrumb', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Breadcrumb).default;\n  }\n});\n\nvar _BreadcrumbDivider = require('./collections/Breadcrumb/BreadcrumbDivider');\n\nObject.defineProperty(exports, 'BreadcrumbDivider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BreadcrumbDivider).default;\n  }\n});\n\nvar _BreadcrumbSection = require('./collections/Breadcrumb/BreadcrumbSection');\n\nObject.defineProperty(exports, 'BreadcrumbSection', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BreadcrumbSection).default;\n  }\n});\n\nvar _Form = require('./collections/Form');\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Form).default;\n  }\n});\n\nvar _FormButton = require('./collections/Form/FormButton');\n\nObject.defineProperty(exports, 'FormButton', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormButton).default;\n  }\n});\n\nvar _FormCheckbox = require('./collections/Form/FormCheckbox');\n\nObject.defineProperty(exports, 'FormCheckbox', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormCheckbox).default;\n  }\n});\n\nvar _FormDropdown = require('./collections/Form/FormDropdown');\n\nObject.defineProperty(exports, 'FormDropdown', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormDropdown).default;\n  }\n});\n\nvar _FormField = require('./collections/Form/FormField');\n\nObject.defineProperty(exports, 'FormField', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormField).default;\n  }\n});\n\nvar _FormGroup = require('./collections/Form/FormGroup');\n\nObject.defineProperty(exports, 'FormGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormGroup).default;\n  }\n});\n\nvar _FormInput = require('./collections/Form/FormInput');\n\nObject.defineProperty(exports, 'FormInput', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormInput).default;\n  }\n});\n\nvar _FormRadio = require('./collections/Form/FormRadio');\n\nObject.defineProperty(exports, 'FormRadio', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormRadio).default;\n  }\n});\n\nvar _FormSelect = require('./collections/Form/FormSelect');\n\nObject.defineProperty(exports, 'FormSelect', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormSelect).default;\n  }\n});\n\nvar _FormTextArea = require('./collections/Form/FormTextArea');\n\nObject.defineProperty(exports, 'FormTextArea', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FormTextArea).default;\n  }\n});\n\nvar _Grid = require('./collections/Grid');\n\nObject.defineProperty(exports, 'Grid', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Grid).default;\n  }\n});\n\nvar _GridColumn = require('./collections/Grid/GridColumn');\n\nObject.defineProperty(exports, 'GridColumn', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GridColumn).default;\n  }\n});\n\nvar _GridRow = require('./collections/Grid/GridRow');\n\nObject.defineProperty(exports, 'GridRow', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GridRow).default;\n  }\n});\n\nvar _Menu = require('./collections/Menu');\n\nObject.defineProperty(exports, 'Menu', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Menu).default;\n  }\n});\n\nvar _MenuHeader = require('./collections/Menu/MenuHeader');\n\nObject.defineProperty(exports, 'MenuHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MenuHeader).default;\n  }\n});\n\nvar _MenuItem = require('./collections/Menu/MenuItem');\n\nObject.defineProperty(exports, 'MenuItem', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MenuItem).default;\n  }\n});\n\nvar _MenuMenu = require('./collections/Menu/MenuMenu');\n\nObject.defineProperty(exports, 'MenuMenu', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MenuMenu).default;\n  }\n});\n\nvar _Message = require('./collections/Message');\n\nObject.defineProperty(exports, 'Message', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Message).default;\n  }\n});\n\nvar _MessageContent = require('./collections/Message/MessageContent');\n\nObject.defineProperty(exports, 'MessageContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MessageContent).default;\n  }\n});\n\nvar _MessageHeader = require('./collections/Message/MessageHeader');\n\nObject.defineProperty(exports, 'MessageHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MessageHeader).default;\n  }\n});\n\nvar _MessageItem = require('./collections/Message/MessageItem');\n\nObject.defineProperty(exports, 'MessageItem', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MessageItem).default;\n  }\n});\n\nvar _MessageList = require('./collections/Message/MessageList');\n\nObject.defineProperty(exports, 'MessageList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MessageList).default;\n  }\n});\n\nvar _Table = require('./collections/Table');\n\nObject.defineProperty(exports, 'Table', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Table).default;\n  }\n});\n\nvar _TableBody = require('./collections/Table/TableBody');\n\nObject.defineProperty(exports, 'TableBody', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableBody).default;\n  }\n});\n\nvar _TableCell = require('./collections/Table/TableCell');\n\nObject.defineProperty(exports, 'TableCell', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableCell).default;\n  }\n});\n\nvar _TableFooter = require('./collections/Table/TableFooter');\n\nObject.defineProperty(exports, 'TableFooter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableFooter).default;\n  }\n});\n\nvar _TableHeader = require('./collections/Table/TableHeader');\n\nObject.defineProperty(exports, 'TableHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableHeader).default;\n  }\n});\n\nvar _TableHeaderCell = require('./collections/Table/TableHeaderCell');\n\nObject.defineProperty(exports, 'TableHeaderCell', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableHeaderCell).default;\n  }\n});\n\nvar _TableRow = require('./collections/Table/TableRow');\n\nObject.defineProperty(exports, 'TableRow', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TableRow).default;\n  }\n});\n\nvar _Button = require('./elements/Button/Button');\n\nObject.defineProperty(exports, 'Button', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Button).default;\n  }\n});\n\nvar _ButtonContent = require('./elements/Button/ButtonContent');\n\nObject.defineProperty(exports, 'ButtonContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ButtonContent).default;\n  }\n});\n\nvar _ButtonGroup = require('./elements/Button/ButtonGroup');\n\nObject.defineProperty(exports, 'ButtonGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ButtonGroup).default;\n  }\n});\n\nvar _ButtonOr = require('./elements/Button/ButtonOr');\n\nObject.defineProperty(exports, 'ButtonOr', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ButtonOr).default;\n  }\n});\n\nvar _Container = require('./elements/Container');\n\nObject.defineProperty(exports, 'Container', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Container).default;\n  }\n});\n\nvar _Divider = require('./elements/Divider');\n\nObject.defineProperty(exports, 'Divider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Divider).default;\n  }\n});\n\nvar _Flag = require('./elements/Flag');\n\nObject.defineProperty(exports, 'Flag', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Flag).default;\n  }\n});\n\nvar _Header = require('./elements/Header');\n\nObject.defineProperty(exports, 'Header', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Header).default;\n  }\n});\n\nvar _HeaderContent = require('./elements/Header/HeaderContent');\n\nObject.defineProperty(exports, 'HeaderContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_HeaderContent).default;\n  }\n});\n\nvar _HeaderSubheader = require('./elements/Header/HeaderSubheader');\n\nObject.defineProperty(exports, 'HeaderSubheader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_HeaderSubheader).default;\n  }\n});\n\nvar _Icon = require('./elements/Icon');\n\nObject.defineProperty(exports, 'Icon', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Icon).default;\n  }\n});\n\nvar _IconGroup = require('./elements/Icon/IconGroup');\n\nObject.defineProperty(exports, 'IconGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IconGroup).default;\n  }\n});\n\nvar _Image = require('./elements/Image');\n\nObject.defineProperty(exports, 'Image', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Image).default;\n  }\n});\n\nvar _ImageGroup = require('./elements/Image/ImageGroup');\n\nObject.defineProperty(exports, 'ImageGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ImageGroup).default;\n  }\n});\n\nvar _Input = require('./elements/Input');\n\nObject.defineProperty(exports, 'Input', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Input).default;\n  }\n});\n\nvar _Label = require('./elements/Label');\n\nObject.defineProperty(exports, 'Label', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Label).default;\n  }\n});\n\nvar _LabelDetail = require('./elements/Label/LabelDetail');\n\nObject.defineProperty(exports, 'LabelDetail', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_LabelDetail).default;\n  }\n});\n\nvar _LabelGroup = require('./elements/Label/LabelGroup');\n\nObject.defineProperty(exports, 'LabelGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_LabelGroup).default;\n  }\n});\n\nvar _List = require('./elements/List');\n\nObject.defineProperty(exports, 'List', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_List).default;\n  }\n});\n\nvar _ListContent = require('./elements/List/ListContent');\n\nObject.defineProperty(exports, 'ListContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListContent).default;\n  }\n});\n\nvar _ListDescription = require('./elements/List/ListDescription');\n\nObject.defineProperty(exports, 'ListDescription', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListDescription).default;\n  }\n});\n\nvar _ListHeader = require('./elements/List/ListHeader');\n\nObject.defineProperty(exports, 'ListHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListHeader).default;\n  }\n});\n\nvar _ListIcon = require('./elements/List/ListIcon');\n\nObject.defineProperty(exports, 'ListIcon', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListIcon).default;\n  }\n});\n\nvar _ListItem = require('./elements/List/ListItem');\n\nObject.defineProperty(exports, 'ListItem', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListItem).default;\n  }\n});\n\nvar _ListList = require('./elements/List/ListList');\n\nObject.defineProperty(exports, 'ListList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ListList).default;\n  }\n});\n\nvar _Loader = require('./elements/Loader');\n\nObject.defineProperty(exports, 'Loader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Loader).default;\n  }\n});\n\nvar _Rail = require('./elements/Rail');\n\nObject.defineProperty(exports, 'Rail', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rail).default;\n  }\n});\n\nvar _Reveal = require('./elements/Reveal');\n\nObject.defineProperty(exports, 'Reveal', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Reveal).default;\n  }\n});\n\nvar _RevealContent = require('./elements/Reveal/RevealContent');\n\nObject.defineProperty(exports, 'RevealContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RevealContent).default;\n  }\n});\n\nvar _Segment = require('./elements/Segment');\n\nObject.defineProperty(exports, 'Segment', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Segment).default;\n  }\n});\n\nvar _SegmentGroup = require('./elements/Segment/SegmentGroup');\n\nObject.defineProperty(exports, 'SegmentGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SegmentGroup).default;\n  }\n});\n\nvar _Step = require('./elements/Step');\n\nObject.defineProperty(exports, 'Step', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Step).default;\n  }\n});\n\nvar _StepContent = require('./elements/Step/StepContent');\n\nObject.defineProperty(exports, 'StepContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StepContent).default;\n  }\n});\n\nvar _StepDescription = require('./elements/Step/StepDescription');\n\nObject.defineProperty(exports, 'StepDescription', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StepDescription).default;\n  }\n});\n\nvar _StepGroup = require('./elements/Step/StepGroup');\n\nObject.defineProperty(exports, 'StepGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StepGroup).default;\n  }\n});\n\nvar _StepTitle = require('./elements/Step/StepTitle');\n\nObject.defineProperty(exports, 'StepTitle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StepTitle).default;\n  }\n});\n\nvar _Accordion = require('./modules/Accordion/Accordion');\n\nObject.defineProperty(exports, 'Accordion', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Accordion).default;\n  }\n});\n\nvar _AccordionContent = require('./modules/Accordion/AccordionContent');\n\nObject.defineProperty(exports, 'AccordionContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AccordionContent).default;\n  }\n});\n\nvar _AccordionTitle = require('./modules/Accordion/AccordionTitle');\n\nObject.defineProperty(exports, 'AccordionTitle', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AccordionTitle).default;\n  }\n});\n\nvar _Checkbox = require('./modules/Checkbox');\n\nObject.defineProperty(exports, 'Checkbox', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Checkbox).default;\n  }\n});\n\nvar _Dimmer = require('./modules/Dimmer');\n\nObject.defineProperty(exports, 'Dimmer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Dimmer).default;\n  }\n});\n\nvar _DimmerDimmable = require('./modules/Dimmer/DimmerDimmable');\n\nObject.defineProperty(exports, 'DimmerDimmable', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DimmerDimmable).default;\n  }\n});\n\nvar _Dropdown = require('./modules/Dropdown');\n\nObject.defineProperty(exports, 'Dropdown', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Dropdown).default;\n  }\n});\n\nvar _DropdownDivider = require('./modules/Dropdown/DropdownDivider');\n\nObject.defineProperty(exports, 'DropdownDivider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DropdownDivider).default;\n  }\n});\n\nvar _DropdownHeader = require('./modules/Dropdown/DropdownHeader');\n\nObject.defineProperty(exports, 'DropdownHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DropdownHeader).default;\n  }\n});\n\nvar _DropdownItem = require('./modules/Dropdown/DropdownItem');\n\nObject.defineProperty(exports, 'DropdownItem', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DropdownItem).default;\n  }\n});\n\nvar _DropdownMenu = require('./modules/Dropdown/DropdownMenu');\n\nObject.defineProperty(exports, 'DropdownMenu', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_DropdownMenu).default;\n  }\n});\n\nvar _Embed = require('./modules/Embed');\n\nObject.defineProperty(exports, 'Embed', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Embed).default;\n  }\n});\n\nvar _Modal = require('./modules/Modal');\n\nObject.defineProperty(exports, 'Modal', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Modal).default;\n  }\n});\n\nvar _ModalActions = require('./modules/Modal/ModalActions');\n\nObject.defineProperty(exports, 'ModalActions', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ModalActions).default;\n  }\n});\n\nvar _ModalContent = require('./modules/Modal/ModalContent');\n\nObject.defineProperty(exports, 'ModalContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ModalContent).default;\n  }\n});\n\nvar _ModalDescription = require('./modules/Modal/ModalDescription');\n\nObject.defineProperty(exports, 'ModalDescription', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ModalDescription).default;\n  }\n});\n\nvar _ModalHeader = require('./modules/Modal/ModalHeader');\n\nObject.defineProperty(exports, 'ModalHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ModalHeader).default;\n  }\n});\n\nvar _Popup = require('./modules/Popup');\n\nObject.defineProperty(exports, 'Popup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Popup).default;\n  }\n});\n\nvar _PopupContent = require('./modules/Popup/PopupContent');\n\nObject.defineProperty(exports, 'PopupContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_PopupContent).default;\n  }\n});\n\nvar _PopupHeader = require('./modules/Popup/PopupHeader');\n\nObject.defineProperty(exports, 'PopupHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_PopupHeader).default;\n  }\n});\n\nvar _Progress = require('./modules/Progress');\n\nObject.defineProperty(exports, 'Progress', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Progress).default;\n  }\n});\n\nvar _Rating = require('./modules/Rating');\n\nObject.defineProperty(exports, 'Rating', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Rating).default;\n  }\n});\n\nvar _RatingIcon = require('./modules/Rating/RatingIcon');\n\nObject.defineProperty(exports, 'RatingIcon', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_RatingIcon).default;\n  }\n});\n\nvar _Search = require('./modules/Search');\n\nObject.defineProperty(exports, 'Search', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Search).default;\n  }\n});\n\nvar _SearchCategory = require('./modules/Search/SearchCategory');\n\nObject.defineProperty(exports, 'SearchCategory', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SearchCategory).default;\n  }\n});\n\nvar _SearchResult = require('./modules/Search/SearchResult');\n\nObject.defineProperty(exports, 'SearchResult', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SearchResult).default;\n  }\n});\n\nvar _SearchResults = require('./modules/Search/SearchResults');\n\nObject.defineProperty(exports, 'SearchResults', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SearchResults).default;\n  }\n});\n\nvar _Sidebar = require('./modules/Sidebar');\n\nObject.defineProperty(exports, 'Sidebar', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Sidebar).default;\n  }\n});\n\nvar _SidebarPushable = require('./modules/Sidebar/SidebarPushable');\n\nObject.defineProperty(exports, 'SidebarPushable', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SidebarPushable).default;\n  }\n});\n\nvar _SidebarPusher = require('./modules/Sidebar/SidebarPusher');\n\nObject.defineProperty(exports, 'SidebarPusher', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SidebarPusher).default;\n  }\n});\n\nvar _Advertisement = require('./views/Advertisement');\n\nObject.defineProperty(exports, 'Advertisement', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Advertisement).default;\n  }\n});\n\nvar _Card = require('./views/Card/Card');\n\nObject.defineProperty(exports, 'Card', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Card).default;\n  }\n});\n\nvar _CardContent = require('./views/Card/CardContent');\n\nObject.defineProperty(exports, 'CardContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CardContent).default;\n  }\n});\n\nvar _CardDescription = require('./views/Card/CardDescription');\n\nObject.defineProperty(exports, 'CardDescription', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CardDescription).default;\n  }\n});\n\nvar _CardGroup = require('./views/Card/CardGroup');\n\nObject.defineProperty(exports, 'CardGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CardGroup).default;\n  }\n});\n\nvar _CardHeader = require('./views/Card/CardHeader');\n\nObject.defineProperty(exports, 'CardHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CardHeader).default;\n  }\n});\n\nvar _CardMeta = require('./views/Card/CardMeta');\n\nObject.defineProperty(exports, 'CardMeta', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CardMeta).default;\n  }\n});\n\nvar _Comment = require('./views/Comment');\n\nObject.defineProperty(exports, 'Comment', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Comment).default;\n  }\n});\n\nvar _CommentAction = require('./views/Comment/CommentAction');\n\nObject.defineProperty(exports, 'CommentAction', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentAction).default;\n  }\n});\n\nvar _CommentActions = require('./views/Comment/CommentActions');\n\nObject.defineProperty(exports, 'CommentActions', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentActions).default;\n  }\n});\n\nvar _CommentAuthor = require('./views/Comment/CommentAuthor');\n\nObject.defineProperty(exports, 'CommentAuthor', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentAuthor).default;\n  }\n});\n\nvar _CommentAvatar = require('./views/Comment/CommentAvatar');\n\nObject.defineProperty(exports, 'CommentAvatar', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentAvatar).default;\n  }\n});\n\nvar _CommentContent = require('./views/Comment/CommentContent');\n\nObject.defineProperty(exports, 'CommentContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentContent).default;\n  }\n});\n\nvar _CommentGroup = require('./views/Comment/CommentGroup');\n\nObject.defineProperty(exports, 'CommentGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentGroup).default;\n  }\n});\n\nvar _CommentMetadata = require('./views/Comment/CommentMetadata');\n\nObject.defineProperty(exports, 'CommentMetadata', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentMetadata).default;\n  }\n});\n\nvar _CommentText = require('./views/Comment/CommentText');\n\nObject.defineProperty(exports, 'CommentText', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CommentText).default;\n  }\n});\n\nvar _Feed = require('./views/Feed');\n\nObject.defineProperty(exports, 'Feed', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Feed).default;\n  }\n});\n\nvar _FeedContent = require('./views/Feed/FeedContent');\n\nObject.defineProperty(exports, 'FeedContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedContent).default;\n  }\n});\n\nvar _FeedDate = require('./views/Feed/FeedDate');\n\nObject.defineProperty(exports, 'FeedDate', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedDate).default;\n  }\n});\n\nvar _FeedEvent = require('./views/Feed/FeedEvent');\n\nObject.defineProperty(exports, 'FeedEvent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedEvent).default;\n  }\n});\n\nvar _FeedExtra = require('./views/Feed/FeedExtra');\n\nObject.defineProperty(exports, 'FeedExtra', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedExtra).default;\n  }\n});\n\nvar _FeedLabel = require('./views/Feed/FeedLabel');\n\nObject.defineProperty(exports, 'FeedLabel', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedLabel).default;\n  }\n});\n\nvar _FeedLike = require('./views/Feed/FeedLike');\n\nObject.defineProperty(exports, 'FeedLike', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedLike).default;\n  }\n});\n\nvar _FeedMeta = require('./views/Feed/FeedMeta');\n\nObject.defineProperty(exports, 'FeedMeta', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedMeta).default;\n  }\n});\n\nvar _FeedSummary = require('./views/Feed/FeedSummary');\n\nObject.defineProperty(exports, 'FeedSummary', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedSummary).default;\n  }\n});\n\nvar _FeedUser = require('./views/Feed/FeedUser');\n\nObject.defineProperty(exports, 'FeedUser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FeedUser).default;\n  }\n});\n\nvar _Item = require('./views/Item');\n\nObject.defineProperty(exports, 'Item', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Item).default;\n  }\n});\n\nvar _ItemContent = require('./views/Item/ItemContent');\n\nObject.defineProperty(exports, 'ItemContent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemContent).default;\n  }\n});\n\nvar _ItemDescription = require('./views/Item/ItemDescription');\n\nObject.defineProperty(exports, 'ItemDescription', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemDescription).default;\n  }\n});\n\nvar _ItemExtra = require('./views/Item/ItemExtra');\n\nObject.defineProperty(exports, 'ItemExtra', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemExtra).default;\n  }\n});\n\nvar _ItemGroup = require('./views/Item/ItemGroup');\n\nObject.defineProperty(exports, 'ItemGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemGroup).default;\n  }\n});\n\nvar _ItemHeader = require('./views/Item/ItemHeader');\n\nObject.defineProperty(exports, 'ItemHeader', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemHeader).default;\n  }\n});\n\nvar _ItemImage = require('./views/Item/ItemImage');\n\nObject.defineProperty(exports, 'ItemImage', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemImage).default;\n  }\n});\n\nvar _ItemMeta = require('./views/Item/ItemMeta');\n\nObject.defineProperty(exports, 'ItemMeta', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ItemMeta).default;\n  }\n});\n\nvar _Statistic = require('./views/Statistic');\n\nObject.defineProperty(exports, 'Statistic', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Statistic).default;\n  }\n});\n\nvar _StatisticGroup = require('./views/Statistic/StatisticGroup');\n\nObject.defineProperty(exports, 'StatisticGroup', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StatisticGroup).default;\n  }\n});\n\nvar _StatisticLabel = require('./views/Statistic/StatisticLabel');\n\nObject.defineProperty(exports, 'StatisticLabel', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StatisticLabel).default;\n  }\n});\n\nvar _StatisticValue = require('./views/Statistic/StatisticValue');\n\nObject.defineProperty(exports, 'StatisticValue', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StatisticValue).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Confirm/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Confirm = require('./Confirm');\n\nvar _Confirm2 = _interopRequireDefault(_Confirm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Confirm2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Confirm/Confirm.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Button = require('../../elements/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Modal = require('../../modules/Modal');\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A Confirm modal gives the user a choice to confirm or cancel an action/\n * @see Modal\n */\nvar Confirm = function (_Component) {\n  (0, _inherits3.default)(Confirm, _Component);\n\n  function Confirm() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Confirm);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Confirm.__proto__ || Object.getPrototypeOf(Confirm)).call.apply(_ref, [this].concat(args))), _this), _this.handleCancel = function (e) {\n      (0, _invoke3.default)(_this.props, 'onCancel', e, _this.props);\n    }, _this.handleCancelOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          (0, _invoke3.default)(predefinedProps, 'onClick', e, buttonProps);\n          _this.handleCancel(e);\n        }\n      };\n    }, _this.handleConfirmOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          (0, _invoke3.default)(predefinedProps, 'onClick', e, buttonProps);\n          (0, _invoke3.default)(_this.props, 'onConfirm', e, _this.props);\n        }\n      };\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Confirm, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          cancelButton = _props.cancelButton,\n          confirmButton = _props.confirmButton,\n          content = _props.content,\n          header = _props.header,\n          open = _props.open;\n\n      var rest = (0, _lib.getUnhandledProps)(Confirm, this.props);\n\n      // `open` is auto controlled by the Modal\n      // It cannot be present (even undefined) with `defaultOpen`\n      // only apply it if the user provided an open prop\n      var openProp = {};\n      if ((0, _has3.default)(this.props, 'open')) openProp.open = open;\n\n      return _react2.default.createElement(\n        _Modal2.default,\n        (0, _extends3.default)({}, rest, openProp, { size: 'small', onClose: this.handleCancel }),\n        _Modal2.default.Header.create(header),\n        _Modal2.default.Content.create(content),\n        _react2.default.createElement(\n          _Modal2.default.Actions,\n          null,\n          _Button2.default.create(cancelButton, { overrideProps: this.handleCancelOverrides }),\n          _Button2.default.create(confirmButton, {\n            defaultProps: { primary: true },\n            overrideProps: this.handleConfirmOverrides\n          })\n        )\n      );\n    }\n  }]);\n  return Confirm;\n}(_react.Component);\n\nConfirm.defaultProps = {\n  cancelButton: 'Cancel',\n  confirmButton: 'OK',\n  content: 'Are you sure?'\n};\nConfirm._meta = {\n  name: 'Confirm',\n  type: _lib.META.TYPES.ADDON\n};\nprocess.env.NODE_ENV !== \"production\" ? Confirm.propTypes = {\n  /** The cancel button text. */\n  cancelButton: _lib.customPropTypes.itemShorthand,\n\n  /** The OK button text. */\n  confirmButton: _lib.customPropTypes.itemShorthand,\n\n  /** The ModalContent text. */\n  content: _lib.customPropTypes.itemShorthand,\n\n  /** The ModalHeader text. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /**\n   * Called when the Modal is closed without clicking confirm.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onCancel: _propTypes2.default.func,\n\n  /**\n   * Called when the OK button is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onConfirm: _propTypes2.default.func,\n\n  /** Whether or not the modal is visible. */\n  open: _propTypes2.default.bool\n} : void 0;\nConfirm.handledProps = ['cancelButton', 'confirmButton', 'content', 'header', 'onCancel', 'onConfirm', 'open'];\nexports.default = Confirm;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.objectDiff = exports.numberToWord = exports.numberToWordMap = exports.keyboardKey = exports.SUI = exports.META = exports.leven = exports.isBrowser = exports.partitionHTMLInputProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = exports.getElementType = exports.getUnhandledProps = exports.makeDebugger = exports.debug = exports.customPropTypes = exports.useWidthProp = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useOnlyProp = exports.useValueAndKey = exports.useKeyOrValueAndKey = exports.useKeyOnly = exports.childrenUtils = exports.AutoControlledComponent = undefined;\n\nvar _AutoControlledComponent = require('./AutoControlledComponent');\n\nObject.defineProperty(exports, 'AutoControlledComponent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AutoControlledComponent).default;\n  }\n});\n\nvar _classNameBuilders = require('./classNameBuilders');\n\nObject.defineProperty(exports, 'useKeyOnly', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useKeyOnly;\n  }\n});\nObject.defineProperty(exports, 'useKeyOrValueAndKey', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useKeyOrValueAndKey;\n  }\n});\nObject.defineProperty(exports, 'useValueAndKey', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useValueAndKey;\n  }\n});\nObject.defineProperty(exports, 'useOnlyProp', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useOnlyProp;\n  }\n});\nObject.defineProperty(exports, 'useTextAlignProp', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useTextAlignProp;\n  }\n});\nObject.defineProperty(exports, 'useVerticalAlignProp', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useVerticalAlignProp;\n  }\n});\nObject.defineProperty(exports, 'useWidthProp', {\n  enumerable: true,\n  get: function get() {\n    return _classNameBuilders.useWidthProp;\n  }\n});\n\nvar _debug = require('./debug');\n\nObject.defineProperty(exports, 'debug', {\n  enumerable: true,\n  get: function get() {\n    return _debug.debug;\n  }\n});\nObject.defineProperty(exports, 'makeDebugger', {\n  enumerable: true,\n  get: function get() {\n    return _debug.makeDebugger;\n  }\n});\n\nvar _factories = require('./factories');\n\nObject.keys(_factories).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _factories[key];\n    }\n  });\n});\n\nvar _getUnhandledProps = require('./getUnhandledProps');\n\nObject.defineProperty(exports, 'getUnhandledProps', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getUnhandledProps).default;\n  }\n});\n\nvar _getElementType = require('./getElementType');\n\nObject.defineProperty(exports, 'getElementType', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getElementType).default;\n  }\n});\n\nvar _htmlInputPropsUtils = require('./htmlInputPropsUtils');\n\nObject.defineProperty(exports, 'htmlInputAttrs', {\n  enumerable: true,\n  get: function get() {\n    return _htmlInputPropsUtils.htmlInputAttrs;\n  }\n});\nObject.defineProperty(exports, 'htmlInputEvents', {\n  enumerable: true,\n  get: function get() {\n    return _htmlInputPropsUtils.htmlInputEvents;\n  }\n});\nObject.defineProperty(exports, 'htmlInputProps', {\n  enumerable: true,\n  get: function get() {\n    return _htmlInputPropsUtils.htmlInputProps;\n  }\n});\nObject.defineProperty(exports, 'partitionHTMLInputProps', {\n  enumerable: true,\n  get: function get() {\n    return _htmlInputPropsUtils.partitionHTMLInputProps;\n  }\n});\n\nvar _isBrowser = require('./isBrowser');\n\nObject.defineProperty(exports, 'isBrowser', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_isBrowser).default;\n  }\n});\n\nvar _leven = require('./leven');\n\nObject.defineProperty(exports, 'leven', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_leven).default;\n  }\n});\n\nvar _keyboardKey = require('./keyboardKey');\n\nObject.defineProperty(exports, 'keyboardKey', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_keyboardKey).default;\n  }\n});\n\nvar _numberToWord = require('./numberToWord');\n\nObject.defineProperty(exports, 'numberToWordMap', {\n  enumerable: true,\n  get: function get() {\n    return _numberToWord.numberToWordMap;\n  }\n});\nObject.defineProperty(exports, 'numberToWord', {\n  enumerable: true,\n  get: function get() {\n    return _numberToWord.numberToWord;\n  }\n});\n\nvar _objectDiff = require('./objectDiff');\n\nObject.defineProperty(exports, 'objectDiff', {\n  enumerable: true,\n  get: function get() {\n    return _objectDiff.objectDiff;\n  }\n});\n\nvar _childrenUtils2 = require('./childrenUtils');\n\nvar _childrenUtils = _interopRequireWildcard(_childrenUtils2);\n\nvar _customPropTypes2 = require('./customPropTypes');\n\nvar _customPropTypes = _interopRequireWildcard(_customPropTypes2);\n\nvar _META2 = require('./META');\n\nvar _META = _interopRequireWildcard(_META2);\n\nvar _SUI2 = require('./SUI');\n\nvar _SUI = _interopRequireWildcard(_SUI2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.childrenUtils = _childrenUtils;\nexports.customPropTypes = _customPropTypes;\nexports.META = _META;\nexports.SUI = _SUI;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/AutoControlledComponent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAutoControlledStateValue = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _difference2 = require('lodash/difference');\n\nvar _difference3 = _interopRequireDefault(_difference2);\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _startsWith2 = require('lodash/startsWith');\n\nvar _startsWith3 = _interopRequireDefault(_startsWith2);\n\nvar _filter2 = require('lodash/filter');\n\nvar _filter3 = _interopRequireDefault(_filter2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _keys2 = require('lodash/keys');\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _intersection2 = require('lodash/intersection');\n\nvar _intersection3 = _interopRequireDefault(_intersection2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return 'default' + (prop[0].toUpperCase() + prop.slice(1));\n};\n\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\n/* eslint-disable no-console */\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\nvar getAutoControlledStateValue = exports.getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp;\n\n    // initial state - state may be null or undefined\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  }\n\n  // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : '';\n\n  // otherwise, undefined\n};\n\nvar AutoControlledComponent = function (_Component) {\n  (0, _inherits3.default)(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args))), _this), _this.trySetState = function (maybeState, state) {\n      var autoControlledProps = _this.constructor.autoControlledProps;\n\n      if (process.env.NODE_ENV !== 'production') {\n        var name = _this.constructor.name;\n        // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n        var illegalKeys = (0, _difference3.default)((0, _keys3.default)(maybeState), autoControlledProps);\n        if (!(0, _isEmpty3.default)(illegalKeys)) {\n          console.error([name + ' called trySetState() with controlled props: \"' + illegalKeys + '\".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n        }\n      }\n\n      var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n        // ignore props defined by the parent\n        if (_this.props[prop] !== undefined) return acc;\n\n        // ignore props not listed in auto controlled props\n        if (autoControlledProps.indexOf(prop) === -1) return acc;\n\n        acc[prop] = maybeState[prop];\n        return acc;\n      }, {});\n\n      if (state) newState = (0, _extends3.default)({}, newState, state);\n\n      if (Object.keys(newState).length > 0) _this.setState(newState);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(AutoControlledComponent, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var autoControlledProps = this.constructor.autoControlledProps;\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        var _constructor = this.constructor,\n            defaultProps = _constructor.defaultProps,\n            name = _constructor.name,\n            propTypes = _constructor.propTypes;\n        // require static autoControlledProps\n\n        if (!autoControlledProps) {\n          console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');\n        }\n\n        // require propTypes\n        (0, _each3.default)(autoControlledProps, function (prop) {\n          var defaultProp = getDefaultPropName(prop);\n          // regular prop\n          if (!(0, _has3.default)(propTypes, defaultProp)) {\n            console.error(name + ' is missing \"' + defaultProp + '\" propTypes validation for auto controlled prop \"' + prop + '\".');\n          }\n          // its default prop\n          if (!(0, _has3.default)(propTypes, prop)) {\n            console.error(name + ' is missing propTypes validation for auto controlled prop \"' + prop + '\".');\n          }\n        });\n\n        // prevent autoControlledProps in defaultProps\n        //\n        // When setting state, auto controlled props values always win (so the parent can manage them).\n        // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n        // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n        // Auto controlled props also listed in defaultProps can never be updated.\n        //\n        // To set defaults for an AutoControlled prop, you can set the initial state in the\n        // constructor or by using an ES7 property initializer:\n        // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n        var illegalDefaults = (0, _intersection3.default)(autoControlledProps, (0, _keys3.default)(defaultProps));\n        if (!(0, _isEmpty3.default)(illegalDefaults)) {\n          console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: \"' + illegalDefaults + '\".'].join(' '));\n        }\n\n        // prevent listing defaultProps in autoControlledProps\n        //\n        // Default props are automatically handled.\n        // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n        var illegalAutoControlled = (0, _filter3.default)(autoControlledProps, function (prop) {\n          return (0, _startsWith3.default)(prop, 'default');\n        });\n        if (!(0, _isEmpty3.default)(illegalAutoControlled)) {\n          console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: \"' + illegalAutoControlled + '\".'].join(' '));\n        }\n      }\n\n      // Auto controlled props are copied to state.\n      // Set initial state by copying auto controlled props to state.\n      // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n      // so we can set initial values from defaults.\n      var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n        acc[prop] = getAutoControlledStateValue(prop, _this2.props, _this2.state, true);\n\n        if (process.env.NODE_ENV !== 'production') {\n          var defaultPropName = getDefaultPropName(prop);\n          var _name = _this2.constructor.name;\n          // prevent defaultFoo={} along side foo={}\n\n          if (defaultPropName in _this2.props && prop in _this2.props) {\n            console.error(_name + ' prop \"' + prop + '\" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');\n          }\n        }\n\n        return acc;\n      }, {});\n\n      this.state = (0, _extends3.default)({}, this.state, initialAutoControlledState);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      var autoControlledProps = this.constructor.autoControlledProps;\n\n      // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextUndefined = (0, _isUndefined3.default)(nextProps[prop]);\n        var propWasRemoved = !(0, _isUndefined3.default)(_this3.props[prop]) && isNextUndefined;\n\n        // if next is defined then use its value\n        if (!isNextUndefined) acc[prop] = nextProps[prop];\n\n        // reinitialize state for props just removed / set undefined\n        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);\n\n        return acc;\n      }, {});\n\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n  return AutoControlledComponent;\n}(_react.Component);\n\nexports.default = AutoControlledComponent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/classNameBuilders.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useWidthProp = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useOnlyProp = exports.useKeyOrValueAndKey = exports.useValueAndKey = exports.useKeyOnly = undefined;\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _numberToWord = require('./numberToWord');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * There are 3 prop patterns used to build up the className for a component.\n * Each utility here is meant for use in a classnames() argument.\n *\n * There is no util for valueOnly() because it would simply return val.\n * Use the prop value inline instead.\n *   <Label size='big' />\n *   <div class=\"ui big label\"></div>\n */\n\n/**\n * Props where only the prop key is used in the className.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example\n * <Label tag />\n * <div class=\"ui tag label\"></div>\n */\nvar useKeyOnly = exports.useKeyOnly = function useKeyOnly(val, key) {\n  return val && key;\n};\n\n/**\n * Props that require both a key and value to create a className.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example\n * <Label corner='left' />\n * <div class=\"ui left corner label\"></div>\n */\nvar useValueAndKey = exports.useValueAndKey = function useValueAndKey(val, key) {\n  return val && val !== true && val + ' ' + key;\n};\n\n/**\n * Props whose key will be used in className, or value and key.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example Key Only\n * <Label pointing />\n * <div class=\"ui pointing label\"></div>\n *\n * @example Key and Value\n * <Label pointing='left' />\n * <div class=\"ui left pointing label\"></div>\n */\nvar useKeyOrValueAndKey = exports.useKeyOrValueAndKey = function useKeyOrValueAndKey(val, key) {\n  return val && (val === true ? key : val + ' ' + key);\n};\n\n//\n// Prop to className exceptions\n//\n\n/**\n * The \"only\" prop implements control of visibility classes for Grid subcomponents.\n *\n * @param {*} val The value of the \"only\" prop\n *\n * @example\n * <Grid.Row only='mobile' />\n * <Grid.Row only='mobile tablet' />\n * <div class=\"mobile only row\"></div>\n * <div class=\"mobile only tablet only row\"></div>\n */\nvar useOnlyProp = exports.useOnlyProp = function useOnlyProp(val) {\n  if (!val || val === true) return null;\n\n  return val.replace('large screen', 'large-screen').split(' ').map(function (prop) {\n    return prop.replace('-', ' ') + ' only';\n  }).join(' ');\n};\n\n/**\n * The \"textAlign\" prop follows the useValueAndKey except when the value is \"justified'.\n * In this case, only the class \"justified\" is used, ignoring the \"aligned\" class.\n * @param {*} val The value of the \"textAlign\" prop\n *\n * @example\n * <Container textAlign='justified' />\n * <div class=\"ui justified container\"></div>\n *\n * @example\n * <Container textAlign='left' />\n * <div class=\"ui left aligned container\"></div>\n */\nvar useTextAlignProp = exports.useTextAlignProp = function useTextAlignProp(val) {\n  return val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned');\n};\n\n/**\n * The \"verticalAlign\" prop follows the useValueAndKey.\n *\n * @param {*} val The value of the \"verticalAlign\" prop\n *\n * @example\n * <Grid verticalAlign='middle' />\n * <div class=\"ui middle aligned grid\"></div>\n */\nvar useVerticalAlignProp = exports.useVerticalAlignProp = function useVerticalAlignProp(val) {\n  return useValueAndKey(val, 'aligned');\n};\n\n/**\n * Create \"X\", \"X wide\" and \"equal width\" classNames.\n * \"X\" is a numberToWord value and \"wide\" is configurable.\n * @param {*} val The prop value\n * @param {string} [widthClass=''] The class\n * @param {boolean} [canEqual=false] Flag that indicates possibility of \"equal\" value\n *\n * @example\n * <Grid columns='equal' />\n * <div class=\"ui equal width grid\"></div>\n *\n * <Form widths='equal' />\n * <div class=\"ui equal width form\"></div>\n *\n * <FieldGroup widths='equal' />\n * <div class=\"equal width fields\"></div>\n *\n * @example\n * <Grid columns={4} />\n * <div class=\"ui four column grid\"></div>\n */\nvar useWidthProp = exports.useWidthProp = function useWidthProp(val) {\n  var widthClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var canEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (canEqual && val === 'equal') {\n    return 'equal width';\n  }\n  var valType = typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val);\n  if ((valType === 'string' || valType === 'number') && widthClass) {\n    return (0, _numberToWord.numberToWord)(val) + ' ' + widthClass;\n  }\n  return (0, _numberToWord.numberToWord)(val);\n};","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/numberToWord.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberToWordMap = undefined;\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.numberToWord = numberToWord;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numberToWordMap = exports.numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n};\n\n/**\n * Return the number word for numbers 1-16.\n * Returns strings or numbers as is if there is no corresponding word.\n * Returns an empty string if value is not a string or number.\n * @param {string|number} value The value to convert to a word.\n * @returns {string}\n */\nfunction numberToWord(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/debug.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debug = exports.makeDebugger = undefined;\n\nvar _isBrowser = require('./isBrowser');\n\nvar _isBrowser2 = _interopRequireDefault(_isBrowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _debug = void 0;\nvar noop = function noop() {\n  return undefined;\n};\n\nif (_isBrowser2.default && process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n  // Heads Up!\n  // https://github.com/visionmedia/debug/pull/331\n  //\n  // debug now clears storage on load, grab the debug settings before require('debug').\n  // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.\n  var DEBUG = void 0;\n  try {\n    DEBUG = window.localStorage.debug;\n  } catch (e) {\n    /* eslint-disable no-console */\n    console.error('Semantic-UI-React could not enable debug.');\n    console.error(e);\n    /* eslint-enable no-console */\n  }\n\n  _debug = require('debug');\n\n  // enable what ever settings we got from storage\n  _debug.enable(DEBUG);\n} else {\n  _debug = function _debug() {\n    return noop;\n  };\n}\n\n/**\n * Create a namespaced debug function.\n * @param {String} namespace Usually a component name.\n * @example\n * import { makeDebugger } from 'src/lib'\n * const debug = makeDebugger('namespace')\n *\n * debug('Some message')\n * @returns {Function}\n */\nvar makeDebugger = exports.makeDebugger = function makeDebugger(namespace) {\n  return _debug('semanticUIReact:' + namespace);\n};\n\n/**\n * Default debugger, simple log.\n * @example\n * import { debug } from 'src/lib'\n * debug('Some message')\n */\nvar debug = exports.debug = makeDebugger('log');","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/isBrowser.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasDocument = (typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object' && document !== null;\nvar hasWindow = (typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && window !== null && window.self === window;\n\nexports.default = hasDocument && hasWindow;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/factories.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createHTMLParagraph = exports.createHTMLLabel = exports.createHTMLInput = exports.createHTMLImage = exports.createHTMLDivision = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _uniq2 = require('lodash/uniq');\n\nvar _uniq3 = _interopRequireDefault(_uniq2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _isArray2 = require('lodash/isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _isPlainObject2 = require('lodash/isPlainObject');\n\nvar _isPlainObject3 = _interopRequireDefault(_isPlainObject2);\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _isBoolean2 = require('lodash/isBoolean');\n\nvar _isBoolean3 = _interopRequireDefault(_isBoolean2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nexports.createShorthand = createShorthand;\nexports.createShorthandFactory = createShorthandFactory;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @returns {object|null}\n */\nfunction createShorthand(Component, mapValueToProps, val) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n  // short circuit noop values\n  if ((0, _isNil3.default)(val) || (0, _isBoolean3.default)(val)) return null;\n\n  var valIsString = (0, _isString3.default)(val);\n  var valIsNumber = (0, _isNumber3.default)(val);\n\n  var isReactElement = (0, _react.isValidElement)(val);\n  var isPropsObject = (0, _isPlainObject3.default)(val);\n  var isPrimitiveValue = valIsString || valIsNumber || (0, _isArray3.default)(val);\n\n  // unhandled type return null\n  /* eslint-disable no-console */\n  if (!isReactElement && !isPropsObject && !isPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(['Shorthand value must be a string|number|array|object|ReactElement.', ' Use null|undefined|boolean for none', ' Received ' + (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) + '.'].join(''));\n    }\n    return null;\n  }\n  /* eslint-enable no-console */\n\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n  var _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === undefined ? {} : _options$defaultProps;\n\n  // User's props\n\n  var usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val);\n\n  // Override props\n  var _options$overrideProp = options.overrideProps,\n      overrideProps = _options$overrideProp === undefined ? {} : _options$overrideProp;\n\n  overrideProps = (0, _isFunction3.default)(overrideProps) ? overrideProps((0, _extends3.default)({}, defaultProps, usersProps)) : overrideProps;\n\n  // Merge props\n  /* eslint-disable react/prop-types */\n  var props = (0, _extends3.default)({}, defaultProps, usersProps, overrideProps);\n\n  // Merge className\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    var mergedClassesNames = (0, _classnames2.default)(defaultProps.className, overrideProps.className, usersProps.className);\n    props.className = (0, _uniq3.default)(mergedClassesNames.split(' ')).join(' ');\n  }\n\n  // Merge style\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = (0, _extends3.default)({}, defaultProps.style, usersProps.style, overrideProps.style);\n  }\n\n  // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n\n  // Use key, childKey, or generate key\n  if (!props.key) {\n    var childKey = props.childKey;\n\n\n    if (childKey) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey;\n      delete props.childKey;\n    } else if (valIsString || valIsNumber) {\n      // use string/number shorthand values as the key\n      props.key = val;\n    }\n  }\n  /* eslint-enable react/prop-types */\n\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n\n  // Clone ReactElements\n  if (isReactElement) return (0, _react.cloneElement)(val, props);\n\n  // Create ReactElements from built up props\n  if (isPrimitiveValue || isPropsObject) return _react2.default.createElement(Component, props);\n}\n\n// ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\ncreateShorthand.handledProps = [];\nfunction createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.');\n  }\n\n  return function (val, options) {\n    return createShorthand(Component, mapValueToProps, val, options);\n  };\n}\n\n// ============================================================\n// HTML Factories\n// ============================================================\nvar createHTMLDivision = exports.createHTMLDivision = createShorthandFactory('div', function (val) {\n  return { children: val };\n});\nvar createHTMLImage = exports.createHTMLImage = createShorthandFactory('img', function (val) {\n  return { src: val };\n});\nvar createHTMLInput = exports.createHTMLInput = createShorthandFactory('input', function (val) {\n  return { type: val };\n});\nvar createHTMLLabel = exports.createHTMLLabel = createShorthandFactory('label', function (val) {\n  return { children: val };\n});\nvar createHTMLParagraph = exports.createHTMLParagraph = createShorthandFactory('p', function (val) {\n  return { children: val };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/getUnhandledProps.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @returns {{}} A shallow copy of the prop object\n */\nvar getUnhandledProps = function getUnhandledProps(Component, props) {\n  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`\n  var _Component$handledPro = Component.handledProps,\n      handledProps = _Component$handledPro === undefined ? [] : _Component$handledPro;\n\n\n  return Object.keys(props).reduce(function (acc, prop) {\n    if (prop === 'childKey') return acc;\n    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];\n    return acc;\n  }, {});\n};\n\nexports.default = getUnhandledProps;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/getElementType.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Returns a createElement() type based on the props of the Component.\n * Useful for calculating what type a component should render as.\n *\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @param {function} [getDefault] A function that returns a default element type.\n * @returns {string|function} A ReactElement type\n */\nfunction getElementType(Component, props, getDefault) {\n  var _Component$defaultPro = Component.defaultProps,\n      defaultProps = _Component$defaultPro === undefined ? {} : _Component$defaultPro;\n\n  // ----------------------------------------\n  // user defined \"as\" element type\n\n  if (props.as && props.as !== defaultProps.as) return props.as;\n\n  // ----------------------------------------\n  // computed default element type\n\n  if (getDefault) {\n    var computedDefault = getDefault();\n    if (computedDefault) return computedDefault;\n  }\n\n  // ----------------------------------------\n  // infer anchor links\n\n  if (props.href) return 'a';\n\n  // ----------------------------------------\n  // use defaultProp or 'div'\n\n  return defaultProps.as || 'div';\n}\n\nexports.default = getElementType;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/htmlInputPropsUtils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partitionHTMLInputProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = undefined;\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _forEach2 = require('lodash/forEach');\n\nvar _forEach3 = _interopRequireDefault(_forEach2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar htmlInputAttrs = exports.htmlInputAttrs = [\n// REACT\n'selected', 'defaultValue', 'defaultChecked',\n\n// LIMITED HTML PROPS\n'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];\n\nvar htmlInputEvents = exports.htmlInputEvents = [\n// EVENTS\n// keyboard\n'onKeyDown', 'onKeyPress', 'onKeyUp',\n\n// focus\n'onFocus', 'onBlur',\n\n// form\n'onChange', 'onInput',\n\n// mouse\n'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp',\n\n// selection\n'onSelect',\n\n// touch\n'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];\n\nvar htmlInputProps = exports.htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);\n\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {array} [htmlProps] An array of html input props\n * @returns {[{}, {}]} An array of objects\n */\nvar partitionHTMLInputProps = exports.partitionHTMLInputProps = function partitionHTMLInputProps(props) {\n  var htmlProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : htmlInputProps;\n\n  var inputProps = {};\n  var rest = {};\n\n  (0, _forEach3.default)(props, function (val, prop) {\n    return (0, _includes3.default)(htmlProps, prop) ? inputProps[prop] = val : rest[prop] = val;\n  });\n\n  return [inputProps, rest];\n};","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/leven.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Copy of sindre's leven, wrapped in dead code elimination for production\n// https://github.com/sindresorhus/leven/blob/master/index.js\n\nvar leven = function leven() {\n  return 0;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /* eslint-disable complexity, no-nested-ternary */\n  var arr = [];\n  var charCodeCache = [];\n\n  leven = function leven(a, b) {\n    if (a === b) return 0;\n\n    var aLen = a.length;\n    var bLen = b.length;\n\n    if (aLen === 0) return bLen;\n    if (bLen === 0) return aLen;\n\n    var bCharCode = void 0;\n    var ret = void 0;\n    var tmp = void 0;\n    var tmp2 = void 0;\n    var i = 0;\n    var j = 0;\n\n    while (i < aLen) {\n      charCodeCache[i] = a.charCodeAt(i);\n      arr[i] = ++i;\n    }\n\n    while (j < bLen) {\n      bCharCode = b.charCodeAt(j);\n      tmp = j++;\n      ret = j;\n\n      for (i = 0; i < aLen; i++) {\n        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;\n        tmp = arr[i];\n        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;\n      }\n    }\n\n    return ret;\n  };\n}\n\nexports.default = leven;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/keyboardKey.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isObject2 = require('lodash/isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _times2 = require('lodash/times');\n\nvar _times3 = _interopRequireDefault(_times2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * All previous KeyboardEvent key identifying properties are deprecated in favor of `key`.\n * Unfortunately, `key` is not yet fully supported.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n */\nvar codes = {\n  // ----------------------------------------\n  // By Code\n  // ----------------------------------------\n  3: 'Cancel',\n  6: 'Help',\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  28: 'Convert',\n  29: 'NonConvert',\n  30: 'Accept',\n  31: 'ModeChange',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  41: 'Select',\n  42: 'Print',\n  43: 'Execute',\n  44: 'PrintScreen',\n  45: 'Insert',\n  46: 'Delete',\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n  91: 'OS',\n  93: 'ContextMenu',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  181: 'VolumeMute',\n  182: 'VolumeDown',\n  183: 'VolumeUp',\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: [\"'\", '\"'],\n  224: 'Meta',\n  225: 'AltGraph',\n  246: 'Attn',\n  247: 'CrSel',\n  248: 'ExSel',\n  249: 'EraseEof',\n  250: 'Play',\n  251: 'ZoomOut'\n};\n\n// Function Keys (F1-24)\n(0, _times3.default)(24, function (i) {\n  return codes[112 + i] = 'F' + (i + 1);\n});\n\n// Alphabet (a-Z)\n(0, _times3.default)(26, function (i) {\n  var n = i + 65;\n  codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)];\n});\n\nvar keyboardKey = {\n  codes: codes,\n\n  /**\n   * Get the `keyCode` or `which` value from a keyboard event or `key` name.\n   * @param {string|object} name A keyboard event like object or `key` name.\n   * @param {string} [name.key] If object, it must have one of these keys.\n   * @param {string} [name.keyCode] If object, it must have one of these keys.\n   * @param {string} [name.which] If object, it must have one of these keys.\n   * @returns {*}\n   */\n  getCode: function getCode(name) {\n    if ((0, _isObject3.default)(name)) {\n      return name.keyCode || name.which || this[name.key];\n    }\n    return this[name];\n  },\n\n\n  /**\n   * Get the key name from a keyboard event, `keyCode`, or `which` value.\n   * @param {number|object} code A keyboard event like object or key name.\n   * @param {number} [code.keyCode] If object, it must have one of these keys.\n   * @param {number} [code.which] If object, it must have one of these keys.\n   * @param {number} [code.shiftKey] If object, it must have one of these keys.\n   * @returns {*}\n   */\n  getName: function getName(code) {\n    var isEvent = (0, _isObject3.default)(code);\n    var name = codes[isEvent ? code.keyCode || code.which : code];\n\n    if (Array.isArray(name)) {\n      if (isEvent) {\n        name = name[code.shiftKey ? 1 : 0];\n      } else {\n        name = name[0];\n      }\n    }\n\n    return name;\n  },\n\n\n  // ----------------------------------------\n  // By Name\n  // ----------------------------------------\n  // declare these manually for static analysis\n  Cancel: 3,\n  Help: 6,\n  Backspace: 8,\n  Tab: 9,\n  Clear: 12,\n  Enter: 13,\n  Shift: 16,\n  Control: 17,\n  Alt: 18,\n  Pause: 19,\n  CapsLock: 20,\n  Escape: 27,\n  Convert: 28,\n  NonConvert: 29,\n  Accept: 30,\n  ModeChange: 31,\n  ' ': 32,\n  PageUp: 33,\n  PageDown: 34,\n  End: 35,\n  Home: 36,\n  ArrowLeft: 37,\n  ArrowUp: 38,\n  ArrowRight: 39,\n  ArrowDown: 40,\n  Select: 41,\n  Print: 42,\n  Execute: 43,\n  PrintScreen: 44,\n  Insert: 45,\n  Delete: 46,\n  0: 48, ')': 48,\n  1: 49, '!': 49,\n  2: 50, '@': 50,\n  3: 51, '#': 51,\n  4: 52, $: 52,\n  5: 53, '%': 53,\n  6: 54, '^': 54,\n  7: 55, '&': 55,\n  8: 56, '*': 56,\n  9: 57, '(': 57,\n  a: 65, A: 65,\n  b: 66, B: 66,\n  c: 67, C: 67,\n  d: 68, D: 68,\n  e: 69, E: 69,\n  f: 70, F: 70,\n  g: 71, G: 71,\n  h: 72, H: 72,\n  i: 73, I: 73,\n  j: 74, J: 74,\n  k: 75, K: 75,\n  l: 76, L: 76,\n  m: 77, M: 77,\n  n: 78, N: 78,\n  o: 79, O: 79,\n  p: 80, P: 80,\n  q: 81, Q: 81,\n  r: 82, R: 82,\n  s: 83, S: 83,\n  t: 84, T: 84,\n  u: 85, U: 85,\n  v: 86, V: 86,\n  w: 87, W: 87,\n  x: 88, X: 88,\n  y: 89, Y: 89,\n  z: 90, Z: 90,\n  OS: 91,\n  ContextMenu: 93,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  F13: 124,\n  F14: 125,\n  F15: 126,\n  F16: 127,\n  F17: 128,\n  F18: 129,\n  F19: 130,\n  F20: 131,\n  F21: 132,\n  F22: 133,\n  F23: 134,\n  F24: 135,\n  NumLock: 144,\n  ScrollLock: 145,\n  VolumeMute: 181,\n  VolumeDown: 182,\n  VolumeUp: 183,\n  ';': 186, ':': 186,\n  '=': 187, '+': 187,\n  ',': 188, '<': 188,\n  '-': 189, _: 189,\n  '.': 190, '>': 190,\n  '/': 191, '?': 191,\n  '`': 192, '~': 192,\n  '[': 219, '{': 219,\n  '\\\\': 220, '\\|': 220,\n  ']': 221, '}': 221,\n  \"'\": 222, '\"': 222,\n  Meta: 224,\n  AltGraph: 225,\n  Attn: 246,\n  CrSel: 247,\n  ExSel: 248,\n  EraseEof: 249,\n  Play: 250,\n  ZoomOut: 251\n};\n\n// ----------------------------------------\n// By Alias\n// ----------------------------------------\n// provide dot-notation accessible keys for all key names\nkeyboardKey.Spacebar = keyboardKey[' '];\nkeyboardKey.Digit0 = keyboardKey['0'];\nkeyboardKey.Digit1 = keyboardKey['1'];\nkeyboardKey.Digit2 = keyboardKey['2'];\nkeyboardKey.Digit3 = keyboardKey['3'];\nkeyboardKey.Digit4 = keyboardKey['4'];\nkeyboardKey.Digit5 = keyboardKey['5'];\nkeyboardKey.Digit6 = keyboardKey['6'];\nkeyboardKey.Digit7 = keyboardKey['7'];\nkeyboardKey.Digit8 = keyboardKey['8'];\nkeyboardKey.Digit9 = keyboardKey['9'];\nkeyboardKey.Tilde = keyboardKey['~'];\nkeyboardKey.GraveAccent = keyboardKey['`'];\nkeyboardKey.ExclamationPoint = keyboardKey['!'];\nkeyboardKey.AtSign = keyboardKey['@'];\nkeyboardKey.PoundSign = keyboardKey['#'];\nkeyboardKey.PercentSign = keyboardKey['%'];\nkeyboardKey.Caret = keyboardKey['^'];\nkeyboardKey.Ampersand = keyboardKey['&'];\nkeyboardKey.PlusSign = keyboardKey['+'];\nkeyboardKey.MinusSign = keyboardKey['-'];\nkeyboardKey.EqualsSign = keyboardKey['='];\nkeyboardKey.DivisionSign = keyboardKey['/'];\nkeyboardKey.MultiplicationSign = keyboardKey['*'];\nkeyboardKey.Comma = keyboardKey[','];\nkeyboardKey.Decimal = keyboardKey['.'];\nkeyboardKey.Colon = keyboardKey[':'];\nkeyboardKey.Semicolon = keyboardKey[';'];\nkeyboardKey.Pipe = keyboardKey['|'];\nkeyboardKey.BackSlash = keyboardKey['\\\\'];\nkeyboardKey.QuestionMark = keyboardKey['?'];\nkeyboardKey.SingleQuote = keyboardKey['\"'];\nkeyboardKey.DoubleQuote = keyboardKey['\"'];\nkeyboardKey.LeftCurlyBrace = keyboardKey['{'];\nkeyboardKey.RightCurlyBrace = keyboardKey['}'];\nkeyboardKey.LeftParenthesis = keyboardKey['('];\nkeyboardKey.RightParenthesis = keyboardKey[')'];\nkeyboardKey.LeftAngleBracket = keyboardKey['<'];\nkeyboardKey.RightAngleBracket = keyboardKey['>'];\nkeyboardKey.LeftSquareBracket = keyboardKey['['];\nkeyboardKey.RightSquareBracket = keyboardKey[']'];\n\nexports.default = keyboardKey;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/objectDiff.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.objectDiff = undefined;\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _transform2 = require('lodash/transform');\n\nvar _transform3 = _interopRequireDefault(_transform2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Naive and inefficient object difference, intended for development / debugging use only.\n * Deleted keys are shown as [DELETED].\n * @param {{}} source The source object\n * @param {{}} target The target object.\n * @returns {{}} A new object containing new/modified/deleted keys.\n * @example\n * import { objectDiff } from 'src/lib'\n *\n * const a = { key: 'val', foo: 'bar' }\n * const b = { key: 'val', foo: 'baz' }\n *\n * objectDiff(a, b)\n * //=> { foo: 'baz' }\n */\nvar objectDiff = exports.objectDiff = function objectDiff(source, target) {\n  return (0, _transform3.default)(source, function (res, val, key) {\n    // deleted keys\n    if (!(0, _has3.default)(target, key)) res[key] = '[DELETED]';\n    // new keys / changed values\n    else if (!(0, _isEqual3.default)(val, target[key])) res[key] = target[key];\n  }, {});\n};","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/childrenUtils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findByType = exports.someByType = undefined;\n\nvar _find2 = require('lodash/find');\n\nvar _find3 = _interopRequireDefault(_find2);\n\nvar _some2 = require('lodash/some');\n\nvar _some3 = _interopRequireDefault(_some2);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determine if child by type exists in children.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {Boolean}\n */\nvar someByType = exports.someByType = function someByType(children, type) {\n  return (0, _some3.default)(_react.Children.toArray(children), { type: type });\n};\n\n/**\n * Find child by type.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {undefined|Object}\n */\nvar findByType = exports.findByType = function findByType(children, type) {\n  return (0, _find3.default)(_react.Children.toArray(children), { type: type });\n};","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/customPropTypes.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deprecate = exports.collectionShorthand = exports.itemShorthand = exports.contentShorthand = exports.onlyProp = exports.demand = exports.givenProps = exports.some = exports.every = exports.disallow = exports.suggest = exports.as = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _difference2 = require('lodash/fp/difference');\n\nvar _difference3 = _interopRequireDefault(_difference2);\n\nvar _trim2 = require('lodash/fp/trim');\n\nvar _trim3 = _interopRequireDefault(_trim2);\n\nvar _isObject2 = require('lodash/fp/isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _pick2 = require('lodash/fp/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _keys2 = require('lodash/fp/keys');\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _isPlainObject2 = require('lodash/fp/isPlainObject');\n\nvar _isPlainObject3 = _interopRequireDefault(_isPlainObject2);\n\nvar _isFunction2 = require('lodash/fp/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _compact2 = require('lodash/fp/compact');\n\nvar _compact3 = _interopRequireDefault(_compact2);\n\nvar _take2 = require('lodash/fp/take');\n\nvar _take3 = _interopRequireDefault(_take2);\n\nvar _sortBy2 = require('lodash/fp/sortBy');\n\nvar _sortBy3 = _interopRequireDefault(_sortBy2);\n\nvar _sum2 = require('lodash/fp/sum');\n\nvar _sum3 = _interopRequireDefault(_sum2);\n\nvar _min2 = require('lodash/fp/min');\n\nvar _min3 = _interopRequireDefault(_min2);\n\nvar _map2 = require('lodash/fp/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _flow2 = require('lodash/fp/flow');\n\nvar _flow3 = _interopRequireDefault(_flow2);\n\nvar _includes2 = require('lodash/fp/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _isNil2 = require('lodash/fp/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _leven = require('./leven');\n\nvar _leven2 = _interopRequireDefault(_leven);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar typeOf = function typeOf() {\n  var _Object$prototype$toS;\n\n  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);\n};\n\n/**\n * Ensure a component can render as a give prop value.\n */\nvar as = exports.as = function as() {\n  return _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).apply(undefined, arguments);\n};\n\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\nvar suggest = exports.suggest = function suggest(suggestions) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(suggestions)) {\n      throw new Error(['Invalid argument supplied to suggest, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));\n    }\n    var propValue = props[propName];\n\n    // skip if prop is undefined or is included in the suggestions\n    if ((0, _isNil3.default)(propValue) || propValue === false || (0, _includes3.default)(propValue, suggestions)) return;\n\n    // find best suggestions\n    var propValueWords = propValue.split(' ');\n\n    /* eslint-disable max-nested-callbacks */\n    var bestMatches = (0, _flow3.default)((0, _map3.default)(function (suggestion) {\n      var suggestionWords = suggestion.split(' ');\n\n      var propValueScore = (0, _flow3.default)((0, _map3.default)(function (x) {\n        return (0, _map3.default)(function (y) {\n          return (0, _leven2.default)(x, y);\n        }, suggestionWords);\n      }), (0, _map3.default)(_min3.default), _sum3.default)(propValueWords);\n\n      var suggestionScore = (0, _flow3.default)((0, _map3.default)(function (x) {\n        return (0, _map3.default)(function (y) {\n          return (0, _leven2.default)(x, y);\n        }, propValueWords);\n      }), (0, _map3.default)(_min3.default), _sum3.default)(suggestionWords);\n\n      return { suggestion: suggestion, score: propValueScore + suggestionScore };\n    }), (0, _sortBy3.default)(['score', 'suggestion']), (0, _take3.default)(3))(suggestions);\n    /* eslint-enable max-nested-callbacks */\n\n    // skip if a match scored 0\n    // since we're matching on words (classNames) this allows any word order to pass validation\n    // e.g. `left chevron` vs `chevron left`\n    if (bestMatches.some(function (x) {\n      return x.score === 0;\n    })) return;\n\n    return new Error(['Invalid prop `' + propName + '` of value `' + propValue + '` supplied to `' + componentName + '`.', '\\n\\nInstead of `' + propValue + '`, did you mean:', bestMatches.map(function (x) {\n      return '\\n  - ' + x.suggestion;\n    }).join(''), '\\n'].join(''));\n  };\n};\n\n/**\n * Disallow other props form being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\nvar disallow = exports.disallow = function disallow(disallowedProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));\n    }\n\n    // skip if prop is undefined\n    if ((0, _isNil3.default)(props[propName]) || props[propName] === false) return;\n\n    // find disallowed props with values\n    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {\n      if (!(0, _isNil3.default)(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [].concat((0, _toConsumableArray3.default)(acc), [disallowedProp]);\n      }\n      return acc;\n    }, []);\n\n    if (disallowed.length > 0) {\n      return new Error(['Prop `' + propName + '` in `' + componentName + '` conflicts with props: `' + disallowed.join('`, `') + '`.', 'They cannot be defined together, choose one or the other.'].join(' '));\n    }\n  };\n};\n\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\nvar every = exports.every = function every(validators) {\n  return function (props, propName, componentName) {\n    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to every, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    var errors = (0, _flow3.default)((0, _map3.default)(function (validator) {\n      if (typeof validator !== 'function') {\n        throw new Error('every() argument \"validators\" should contain functions, found: ' + typeOf(validator) + '.');\n      }\n      return validator.apply(undefined, [props, propName, componentName].concat(rest));\n    }), _compact3.default)(validators);\n\n    // we can only return one error at a time\n    return errors[0];\n  };\n};\n\n/**\n * Ensure a prop adherers to at least one of the given prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\nvar some = exports.some = function some(validators) {\n  return function (props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    if (!Array.isArray(validators)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    var errors = (0, _compact3.default)((0, _map3.default)(validators, function (validator) {\n      if (!(0, _isFunction3.default)(validator)) {\n        throw new Error('some() argument \"validators\" should contain functions, found: ' + typeOf(validator) + '.');\n      }\n      return validator.apply(undefined, [props, propName, componentName].concat(rest));\n    }));\n\n    // fail only if all validators failed\n    if (errors.length === validators.length) {\n      var error = new Error('One of these validators must pass:');\n      error.message += '\\n' + (0, _map3.default)(errors, function (err, i) {\n        return '[' + (i + 1) + ']: ' + err.message;\n      }).join('\\n');\n      return error;\n    }\n  };\n};\n\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\nvar givenProps = exports.givenProps = function givenProps(propsShape, validator) {\n  return function (props, propName, componentName) {\n    for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      rest[_key3 - 3] = arguments[_key3];\n    }\n\n    if (!(0, _isPlainObject3.default)(propsShape)) {\n      throw new Error(['Invalid argument supplied to givenProps, expected an object.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error(['Invalid argument supplied to givenProps, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    var shouldValidate = (0, _keys3.default)(propsShape).every(function (key) {\n      var val = propsShape[key];\n      // require propShape validators to pass or prop values to match\n      return typeof val === 'function' ? !val.apply(undefined, [props, key, componentName].concat(rest)) : val === props[propName];\n    });\n\n    if (!shouldValidate) return;\n\n    var error = validator.apply(undefined, [props, propName, componentName].concat(rest));\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      var prettyProps = '{ ' + (0, _keys3.default)((0, _pick3.default)((0, _keys3.default)(propsShape), props)).map(function (key) {\n        var val = props[key];\n        var renderedValue = val;\n        if (typeof val === 'string') renderedValue = '\"' + val + '\"';else if (Array.isArray(val)) renderedValue = '[' + val.join(', ') + ']';else if ((0, _isObject3.default)(val)) renderedValue = '{...}';\n\n        return key + ': ' + renderedValue;\n      }).join(', ') + ' }';\n\n      error.message = 'Given props ' + prettyProps + ': ' + error.message;\n      return error;\n    }\n  };\n};\n\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\nvar demand = exports.demand = function demand(requiredProps) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));\n    }\n\n    // skip if prop is undefined\n    if (props[propName] === undefined) return;\n\n    var missingRequired = requiredProps.filter(function (requiredProp) {\n      return props[requiredProp] === undefined;\n    });\n    if (missingRequired.length > 0) {\n      return new Error('`' + propName + '` prop in `' + componentName + '` requires props: `' + missingRequired.join('`, `') + '`.');\n    }\n  };\n};\n\n/**\n * Ensure an only prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\nvar onlyProp = exports.onlyProp = function onlyProp(possible) {\n  return function (props, propName, componentName) {\n    if (!Array.isArray(possible)) {\n      throw new Error(['Invalid argument supplied to some, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    var propValue = props[propName];\n\n    // skip if prop is undefined\n    if ((0, _isNil3.default)(propValue) || propValue === false) return;\n\n    var values = propValue.replace('large screen', 'large-screen').split(' ').map(function (val) {\n      return (0, _trim3.default)(val).replace('-', ' ');\n    });\n    var invalid = (0, _difference3.default)(values, possible);\n\n    // fail only if there are invalid values\n    if (invalid.length > 0) {\n      return new Error('`' + propName + '` prop in `' + componentName + '` has invalid values: `' + invalid.join('`, `') + '`.');\n    }\n  };\n};\n\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\nvar contentShorthand = exports.contentShorthand = function contentShorthand() {\n  return every([disallow(['children']), _propTypes2.default.node]).apply(undefined, arguments);\n};\n\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\nvar itemShorthand = exports.itemShorthand = function itemShorthand() {\n  return every([disallow(['children']), _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.node, _propTypes2.default.object])]).apply(undefined, arguments);\n};\n\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\nvar collectionShorthand = exports.collectionShorthand = function collectionShorthand() {\n  return every([disallow(['children']), _propTypes2.default.arrayOf(itemShorthand)]).apply(undefined, arguments);\n};\n\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\nvar deprecate = exports.deprecate = function deprecate(help, validator) {\n  return function (props, propName, componentName) {\n    for (var _len4 = arguments.length, args = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n      args[_key4 - 3] = arguments[_key4];\n    }\n\n    if (typeof help !== 'string') {\n      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n    }\n\n    // skip if prop is undefined\n    if (props[propName] === undefined) return;\n\n    // deprecation error and help\n    var error = new Error('The `' + propName + '` prop in `' + componentName + '` is deprecated.');\n    if (help) error.message += ' ' + help;\n\n    // add optional validation error message\n    if (validator) {\n      if (typeof validator === 'function') {\n        var validationError = validator.apply(undefined, [props, propName, componentName].concat(args));\n        if (validationError) {\n          error.message = error.message + ' ' + validationError.message;\n        }\n      } else {\n        throw new Error(['Invalid argument supplied to deprecate, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));\n      }\n    }\n\n    return error;\n  };\n};","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/META.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPrivate = exports.isChild = exports.isParent = exports.isModule = exports.isView = exports.isElement = exports.isCollection = exports.isAddon = exports.isType = exports.isMeta = exports.TYPES = undefined;\n\nvar _startsWith2 = require('lodash/fp/startsWith');\n\nvar _startsWith3 = _interopRequireDefault(_startsWith2);\n\nvar _has2 = require('lodash/fp/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _eq2 = require('lodash/fp/eq');\n\nvar _eq3 = _interopRequireDefault(_eq2);\n\nvar _flow2 = require('lodash/fp/flow');\n\nvar _flow3 = _interopRequireDefault(_flow2);\n\nvar _curry2 = require('lodash/fp/curry');\n\nvar _curry3 = _interopRequireDefault(_curry2);\n\nvar _get2 = require('lodash/fp/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _includes2 = require('lodash/fp/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _values2 = require('lodash/fp/values');\n\nvar _values3 = _interopRequireDefault(_values2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TYPES = exports.TYPES = {\n  ADDON: 'addon',\n  COLLECTION: 'collection',\n  ELEMENT: 'element',\n  VIEW: 'view',\n  MODULE: 'module'\n};\n\nvar TYPE_VALUES = (0, _values3.default)(TYPES);\n\n/**\n * Determine if an object qualifies as a META object.\n * It must have the required keys and valid values.\n * @private\n * @param {Object} _meta A proposed component _meta object.\n * @returns {Boolean}\n */\nvar isMeta = exports.isMeta = function isMeta(_meta) {\n  return (0, _includes3.default)((0, _get3.default)('type', _meta), TYPE_VALUES);\n};\n\n/**\n * Extract a component's _meta object and optional key.\n * Handles literal _meta objects, classes with _meta, objects with _meta\n * @private\n * @param {function|object} metaArg A class, a component instance, or meta object..\n * @returns {object|string|undefined}\n */\nvar getMeta = function getMeta(metaArg) {\n  // literal\n  if (isMeta(metaArg)) return metaArg;\n\n  // from prop\n  else if (isMeta((0, _get3.default)('_meta', metaArg))) return metaArg._meta;\n\n    // from class\n    else if (isMeta((0, _get3.default)('constructor._meta', metaArg))) return metaArg.constructor._meta;\n};\n\nvar metaHasKeyValue = (0, _curry3.default)(function (key, val, metaArg) {\n  return (0, _flow3.default)(getMeta, (0, _get3.default)(key), (0, _eq3.default)(val))(metaArg);\n});\nvar isType = exports.isType = metaHasKeyValue('type');\n\n// ----------------------------------------\n// Export\n// ----------------------------------------\n\n// type\nvar isAddon = exports.isAddon = isType(TYPES.ADDON);\nvar isCollection = exports.isCollection = isType(TYPES.COLLECTION);\nvar isElement = exports.isElement = isType(TYPES.ELEMENT);\nvar isView = exports.isView = isType(TYPES.VIEW);\nvar isModule = exports.isModule = isType(TYPES.MODULE);\n\n// parent\nvar isParent = exports.isParent = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'), (0, _eq3.default)(false));\nvar isChild = exports.isChild = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'));\n\n// other\nvar isPrivate = exports.isPrivate = (0, _flow3.default)(getMeta, (0, _get3.default)('name'), (0, _startsWith3.default)('_'));","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/lib/SUI.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ALL_ICONS_IN_ALL_CONTEXTS = exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = exports.ICONS_AND_ALIASES = exports.ICON_ALIASES = exports.ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = exports.PAYMENT_OPTIONS_ICONS = exports.CURRENCY_ICONS = exports.TEXT_EDITOR_ICONS = exports.TABLES_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.AUDIO_ICONS = exports.RATING_ICONS = exports.TECHNOLOGIES_ICONS = exports.FILE_SYSTEM_ICONS = exports.COMPUTER_ICONS = exports.MOBILE_ICONS = exports.POINTERS_ICONS = exports.MEDIA_ICONS = exports.ITEM_SELECTION_ICONS = exports.SHAPES_ICONS = exports.LITERAL_OBJECTS_ICONS = exports.VIEW_ADJUSTMENT_ICONS = exports.ACCESSIBILITY_ICONS = exports.GENDER_SEXUALITY_ICONS = exports.USERS_ICONS = exports.MESSAGES_ICONS = exports.USER_ACTIONS_ICONS = exports.WEB_CONTENT_ICONS = exports.WIDTHS = exports.VISIBILITY = exports.VERTICAL_ALIGNMENTS = exports.TEXT_ALIGNMENTS = exports.SIZES = exports.FLOATS = exports.COLORS = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _values2 = require('lodash/values');\n\nvar _values3 = _interopRequireDefault(_values2);\n\nvar _keys2 = require('lodash/keys');\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _numberToWord = require('./numberToWord');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar COLORS = exports.COLORS = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black'];\nvar FLOATS = exports.FLOATS = ['left', 'right'];\nvar SIZES = exports.SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'];\nvar TEXT_ALIGNMENTS = exports.TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified'];\nvar VERTICAL_ALIGNMENTS = exports.VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top'];\n\nvar VISIBILITY = exports.VISIBILITY = ['mobile', 'tablet', 'computer', 'large screen', 'widescreen'];\n\nvar WIDTHS = exports.WIDTHS = [].concat((0, _toConsumableArray3.default)((0, _keys3.default)(_numberToWord.numberToWordMap)), (0, _toConsumableArray3.default)((0, _keys3.default)(_numberToWord.numberToWordMap).map(Number)), (0, _toConsumableArray3.default)((0, _values3.default)(_numberToWord.numberToWordMap)));\n\n// Generated from:\n// https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css\nvar WEB_CONTENT_ICONS = exports.WEB_CONTENT_ICONS = ['search', 'mail outline', 'signal', 'setting', 'home', 'inbox', 'browser', 'tag', 'tags', 'image', 'calendar', 'comment', 'shop', 'comments', 'external', 'privacy', 'settings', 'comments', 'external', 'trophy', 'payment', 'feed', 'alarm outline', 'tasks', 'cloud', 'lab', 'mail', 'dashboard', 'comment outline', 'comments outline', 'sitemap', 'idea', 'alarm', 'terminal', 'code', 'protect', 'calendar outline', 'ticket', 'external square', 'bug', 'mail square', 'history', 'options', 'text telephone', 'find', 'wifi', 'alarm mute', 'alarm mute outline', 'copyright', 'at', 'eyedropper', 'paint brush', 'heartbeat', 'mouse pointer', 'hourglass empty', 'hourglass start', 'hourglass half', 'hourglass end', 'hourglass full', 'hand pointer', 'trademark', 'registered', 'creative commons', 'add to calendar', 'remove from calendar', 'delete calendar', 'checked calendar', 'industry', 'shopping bag', 'shopping basket', 'hashtag', 'percent', 'address book', 'address book outline', 'address card', 'address card outline', 'id badge', 'id card', 'id card outline', 'podcast', 'window close', 'window close outline', 'window maximize', 'window minimize', 'window restore'];\nvar USER_ACTIONS_ICONS = exports.USER_ACTIONS_ICONS = ['wait', 'download', 'repeat', 'refresh', 'lock', 'bookmark', 'print', 'write', 'adjust', 'theme', 'edit', 'external share', 'ban', 'mail forward', 'share', 'expand', 'compress', 'unhide', 'hide', 'random', 'retweet', 'sign out', 'pin', 'sign in', 'upload', 'call', 'remove bookmark', 'call square', 'unlock', 'configure', 'filter', 'wizard', 'undo', 'exchange', 'cloud download', 'cloud upload', 'reply', 'reply all', 'erase', 'unlock alternate', 'write square', 'share square', 'archive', 'translate', 'recycle', 'send', 'send outline', 'share alternate', 'share alternate square', 'add to cart', 'in cart', 'add user', 'remove user', 'object group', 'object ungroup', 'clone', 'talk', 'talk outline'];\nvar MESSAGES_ICONS = exports.MESSAGES_ICONS = ['help circle', 'info circle', 'warning circle', 'warning sign', 'announcement', 'help', 'info', 'warning', 'birthday', 'help circle outline'];\nvar USERS_ICONS = exports.USERS_ICONS = ['user', 'users', 'doctor', 'handicap', 'student', 'child', 'spy', 'user circle', 'user circle outline', 'user outline'];\nvar GENDER_SEXUALITY_ICONS = exports.GENDER_SEXUALITY_ICONS = ['female', 'male', 'woman', 'man', 'non binary transgender', 'intergender', 'transgender', 'lesbian', 'gay', 'heterosexual', 'other gender', 'other gender vertical', 'other gender horizontal', 'neuter', 'genderless'];\nvar ACCESSIBILITY_ICONS = exports.ACCESSIBILITY_ICONS = ['universal access', 'wheelchair', 'blind', 'audio description', 'volume control phone', 'braille', 'asl', 'assistive listening systems', 'deafness', 'sign language', 'low vision'];\nvar VIEW_ADJUSTMENT_ICONS = exports.VIEW_ADJUSTMENT_ICONS = ['block layout', 'grid layout', 'list layout', 'zoom', 'zoom out', 'resize vertical', 'resize horizontal', 'maximize', 'crop'];\nvar LITERAL_OBJECTS_ICONS = exports.LITERAL_OBJECTS_ICONS = ['cocktail', 'road', 'flag', 'book', 'gift', 'leaf', 'fire', 'plane', 'magnet', 'lemon', 'world', 'travel', 'shipping', 'money', 'legal', 'lightning', 'umbrella', 'treatment', 'suitcase', 'bar', 'flag outline', 'flag checkered', 'puzzle', 'fire extinguisher', 'rocket', 'anchor', 'bullseye', 'sun', 'moon', 'fax', 'life ring', 'bomb', 'soccer', 'calculator', 'diamond', 'sticky note', 'sticky note outline', 'law', 'hand peace', 'hand rock', 'hand paper', 'hand scissors', 'hand lizard', 'hand spock', 'tv', 'thermometer empty', 'thermometer full', 'thermometer half', 'thermometer quarter', 'thermometer three quarters', 'bath', 'snowflake outline'];\nvar SHAPES_ICONS = exports.SHAPES_ICONS = ['crosshairs', 'asterisk', 'square outline', 'certificate', 'square', 'quote left', 'quote right', 'spinner', 'circle', 'ellipsis horizontal', 'ellipsis vertical', 'cube', 'cubes', 'circle notched', 'circle thin'];\nvar ITEM_SELECTION_ICONS = exports.ITEM_SELECTION_ICONS = ['checkmark', 'remove', 'checkmark box', 'move', 'add circle', 'minus circle', 'remove circle', 'check circle', 'remove circle outline', 'check circle outline', 'plus', 'minus', 'add square', 'radio', 'minus square', 'minus square outline', 'check square', 'selected radio', 'plus square outline', 'toggle off', 'toggle on'];\nvar MEDIA_ICONS = exports.MEDIA_ICONS = ['film', 'sound', 'photo', 'bar chart', 'camera retro', 'newspaper', 'area chart', 'pie chart', 'line chart'];\nvar POINTERS_ICONS = exports.POINTERS_ICONS = ['arrow circle outline down', 'arrow circle outline up', 'chevron left', 'chevron right', 'arrow left', 'arrow right', 'arrow up', 'arrow down', 'chevron up', 'chevron down', 'pointing right', 'pointing left', 'pointing up', 'pointing down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow circle down', 'caret down', 'caret up', 'caret left', 'caret right', 'angle double left', 'angle double right', 'angle double up', 'angle double down', 'angle left', 'angle right', 'angle up', 'angle down', 'chevron circle left', 'chevron circle right', 'chevron circle up', 'chevron circle down', 'toggle down', 'toggle up', 'toggle right', 'long arrow down', 'long arrow up', 'long arrow left', 'long arrow right', 'arrow circle outline right', 'arrow circle outline left', 'toggle left'];\nvar MOBILE_ICONS = exports.MOBILE_ICONS = ['tablet', 'mobile', 'battery full', 'battery high', 'battery medium', 'battery low', 'battery empty'];\nvar COMPUTER_ICONS = exports.COMPUTER_ICONS = ['power', 'trash outline', 'disk outline', 'desktop', 'laptop', 'game', 'keyboard', 'plug'];\nvar FILE_SYSTEM_ICONS = exports.FILE_SYSTEM_ICONS = ['trash', 'file outline', 'folder', 'folder open', 'file text outline', 'folder outline', 'folder open outline', 'level up', 'level down', 'file', 'file text', 'file pdf outline', 'file word outline', 'file excel outline', 'file powerpoint outline', 'file image outline', 'file archive outline', 'file audio outline', 'file video outline', 'file code outline'];\nvar TECHNOLOGIES_ICONS = exports.TECHNOLOGIES_ICONS = ['qrcode', 'barcode', 'rss', 'fork', 'html5', 'css3', 'rss square', 'openid', 'database', 'server', 'usb', 'bluetooth', 'bluetooth alternative', 'microchip'];\nvar RATING_ICONS = exports.RATING_ICONS = ['heart', 'star', 'empty star', 'thumbs outline up', 'thumbs outline down', 'star half', 'empty heart', 'smile', 'frown', 'meh', 'star half empty', 'thumbs up', 'thumbs down'];\nvar AUDIO_ICONS = exports.AUDIO_ICONS = ['music', 'video play outline', 'volume off', 'volume down', 'volume up', 'record', 'step backward', 'fast backward', 'backward', 'play', 'pause', 'stop', 'forward', 'fast forward', 'step forward', 'eject', 'unmute', 'mute', 'video play', 'closed captioning', 'pause circle', 'pause circle outline', 'stop circle', 'stop circle outline'];\nvar MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = ['marker', 'coffee', 'food', 'building outline', 'hospital', 'emergency', 'first aid', 'military', 'h', 'location arrow', 'compass', 'space shuttle', 'university', 'building', 'paw', 'spoon', 'car', 'taxi', 'tree', 'bicycle', 'bus', 'ship', 'motorcycle', 'street view', 'hotel', 'train', 'subway', 'map pin', 'map signs', 'map outline', 'map'];\nvar TABLES_ICONS = exports.TABLES_ICONS = ['table', 'columns', 'sort', 'sort descending', 'sort ascending', 'sort alphabet ascending', 'sort alphabet descending', 'sort content ascending', 'sort content descending', 'sort numeric ascending', 'sort numeric descending'];\nvar TEXT_EDITOR_ICONS = exports.TEXT_EDITOR_ICONS = ['font', 'bold', 'italic', 'text height', 'text width', 'align left', 'align center', 'align right', 'align justify', 'list', 'outdent', 'indent', 'linkify', 'cut', 'copy', 'attach', 'save', 'content', 'unordered list', 'ordered list', 'strikethrough', 'underline', 'paste', 'unlinkify', 'superscript', 'subscript', 'header', 'paragraph', 'text cursor'];\nvar CURRENCY_ICONS = exports.CURRENCY_ICONS = ['euro', 'pound', 'dollar', 'rupee', 'yen', 'ruble', 'won', 'bitcoin', 'lira', 'shekel'];\nvar PAYMENT_OPTIONS_ICONS = exports.PAYMENT_OPTIONS_ICONS = ['paypal', 'google wallet', 'visa', 'mastercard', 'discover', 'american express', 'paypal card', 'stripe', 'japan credit bureau', 'diners club', 'credit card alternative'];\nvar NETWORKS_AND_WEBSITE_ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = ['twitter square', 'facebook square', 'linkedin square', 'github square', 'twitter', 'facebook f', 'github', 'pinterest', 'pinterest square', 'google plus square', 'google plus', 'linkedin', 'github alternate', 'maxcdn', 'youtube square', 'youtube', 'xing', 'xing square', 'youtube play', 'dropbox', 'stack overflow', 'instagram', 'flickr', 'adn', 'bitbucket', 'bitbucket square', 'tumblr', 'tumblr square', 'apple', 'windows', 'android', 'linux', 'dribble', 'skype', 'foursquare', 'trello', 'gittip', 'vk', 'weibo', 'renren', 'pagelines', 'stack exchange', 'vimeo square', 'slack', 'wordpress', 'yahoo', 'google', 'reddit', 'reddit square', 'stumbleupon circle', 'stumbleupon', 'delicious', 'digg', 'pied piper', 'pied piper alternate', 'drupal', 'joomla', 'behance', 'behance square', 'steam', 'steam square', 'spotify', 'deviantart', 'soundcloud', 'vine', 'codepen', 'jsfiddle', 'rebel', 'empire', 'git square', 'git', 'hacker news', 'tencent weibo', 'qq', 'wechat', 'slideshare', 'twitch', 'yelp', 'lastfm', 'lastfm square', 'ioxhost', 'angellist', 'meanpath', 'buysellads', 'connectdevelop', 'dashcube', 'forumbee', 'leanpub', 'sellsy', 'shirtsinbulk', 'simplybuilt', 'skyatlas', 'facebook', 'pinterest', 'whatsapp', 'viacoin', 'medium', 'y combinator', 'optinmonster', 'opencart', 'expeditedssl', 'gg', 'gg circle', 'tripadvisor', 'odnoklassniki', 'odnoklassniki square', 'pocket', 'wikipedia', 'safari', 'chrome', 'firefox', 'opera', 'internet explorer', 'contao', '500px', 'amazon', 'houzz', 'vimeo', 'black tie', 'fonticons', 'reddit alien', 'microsoft edge', 'codiepie', 'modx', 'fort awesome', 'product hunt', 'mixcloud', 'scribd', 'gitlab', 'wpbeginner', 'wpforms', 'envira gallery', 'glide', 'glide g', 'viadeo', 'viadeo square', 'snapchat', 'snapchat ghost', 'snapchat square', 'pied piper hat', 'first order', 'yoast', 'themeisle', 'google plus circle', 'font awesome', 'bandcamp', 'eercast', 'etsy', 'free code camp', 'grav', 'imdb', 'linode', 'meetup', 'quora', 'ravelry', 'superpowers', 'telegram', 'wpexplorer'];\nvar ICONS = exports.ICONS = [].concat(WEB_CONTENT_ICONS, USER_ACTIONS_ICONS, MESSAGES_ICONS, USERS_ICONS, GENDER_SEXUALITY_ICONS, ACCESSIBILITY_ICONS, VIEW_ADJUSTMENT_ICONS, LITERAL_OBJECTS_ICONS, SHAPES_ICONS, ITEM_SELECTION_ICONS, MEDIA_ICONS, POINTERS_ICONS, MOBILE_ICONS, COMPUTER_ICONS, FILE_SYSTEM_ICONS, TECHNOLOGIES_ICONS, RATING_ICONS, AUDIO_ICONS, MAP_LOCATIONS_TRANSPORTATION_ICONS, TABLES_ICONS, TEXT_EDITOR_ICONS, CURRENCY_ICONS, PAYMENT_OPTIONS_ICONS, NETWORKS_AND_WEBSITE_ICONS);\nvar ICON_ALIASES = exports.ICON_ALIASES = ['like', 'favorite', 'video', 'check', 'close', 'cancel', 'delete', 'x', 'zoom in', 'magnify', 'shutdown', 'clock', 'time', 'play circle outline', 'headphone', 'camera', 'video camera', 'picture', 'pencil', 'compose', 'point', 'tint', 'signup', 'plus circle', 'question circle', 'dont', 'minimize', 'add', 'exclamation circle', 'attention', 'eye', 'exclamation triangle', 'shuffle', 'chat', 'cart', 'shopping cart', 'bar graph', 'key', 'cogs', 'discussions', 'like outline', 'dislike outline', 'heart outline', 'log out', 'thumb tack', 'winner', 'phone', 'bookmark outline', 'phone square', 'credit card', 'hdd outline', 'bullhorn', 'bell outline', 'hand outline right', 'hand outline left', 'hand outline up', 'hand outline down', 'globe', 'wrench', 'briefcase', 'group', 'linkify', 'chain', 'flask', 'sidebar', 'bars', 'list ul', 'list ol', 'numbered list', 'magic', 'truck', 'currency', 'triangle down', 'dropdown', 'triangle up', 'triangle left', 'triangle right', 'envelope', 'conversation', 'rain', 'clipboard', 'lightbulb', 'bell', 'ambulance', 'medkit', 'fighter jet', 'beer', 'plus square', 'computer', 'circle outline', 'gamepad', 'star half full', 'broken chain', 'question', 'exclamation', 'eraser', 'microphone', 'microphone slash', 'shield', 'target', 'play circle', 'pencil square', 'eur', 'gbp', 'usd', 'inr', 'cny', 'rmb', 'jpy', 'rouble', 'rub', 'krw', 'btc', 'gratipay', 'zip', 'dot circle outline', 'try', 'graduation', 'circle outline', 'sliders', 'weixin', 'tty', 'teletype', 'binoculars', 'power cord', 'wifi', 'visa card', 'mastercard card', 'discover card', 'amex', 'american express card', 'stripe card', 'bell slash', 'bell slash outline', 'area graph', 'pie graph', 'line graph', 'cc', 'sheqel', 'ils', 'plus cart', 'arrow down cart', 'detective', 'venus', 'mars', 'mercury', 'intersex', 'venus double', 'female homosexual', 'mars double', 'male homosexual', 'venus mars', 'mars stroke', 'mars alternate', 'mars vertical', 'mars stroke vertical', 'mars horizontal', 'mars stroke horizontal', 'asexual', 'facebook official', 'user plus', 'user times', 'user close', 'user cancel', 'user delete', 'user x', 'bed', 'yc', 'ycombinator', 'battery four', 'battery three', 'battery three quarters', 'battery two', 'battery half', 'battery one', 'battery quarter', 'battery zero', 'i cursor', 'jcb', 'japan credit bureau card', 'diners club card', 'balance', 'hourglass outline', 'hourglass zero', 'hourglass one', 'hourglass two', 'hourglass three', 'hourglass four', 'grab', 'hand victory', 'tm', 'r circle', 'television', 'five hundred pixels', 'calendar plus', 'calendar minus', 'calendar times', 'calendar check', 'factory', 'commenting', 'commenting outline', 'edge', 'ms edge', 'wordpress beginner', 'wordpress forms', 'envira', 'question circle outline', 'assistive listening devices', 'als', 'ald', 'asl interpreting', 'deaf', 'american sign language interpreting', 'hard of hearing', 'signing', 'new pied piper', 'theme isle', 'google plus official', 'fa', 'bathtub', 'drivers license', 'drivers license outline', 's15', 'thermometer', 'times rectangle', 'times rectangle outline', 'vcard', 'vcard outline'];\nvar ICONS_AND_ALIASES = exports.ICONS_AND_ALIASES = [].concat((0, _toConsumableArray3.default)(ICONS), ICON_ALIASES);\n\n// Some icon names are not part of icons.css.\n// These are only valid as children of other components.\n// Their CSS rules are defined by a specific component's CSS.\n// We don't want to show name warnings for those usages so we add them as valid names here.\nvar COMPONENT_CONTEXT_SPECIFIC_ICONS = exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = ['left dropdown'];\nvar ALL_ICONS_IN_ALL_CONTEXTS = exports.ALL_ICONS_IN_ALL_CONTEXTS = [].concat((0, _toConsumableArray3.default)(ICONS_AND_ALIASES), COMPONENT_CONTEXT_SPECIFIC_ICONS);","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Button/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Button = require('./Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Button2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Button/Button.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Label = require('../Label/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _ButtonContent = require('./ButtonContent');\n\nvar _ButtonContent2 = _interopRequireDefault(_ButtonContent);\n\nvar _ButtonGroup = require('./ButtonGroup');\n\nvar _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);\n\nvar _ButtonOr = require('./ButtonOr');\n\nvar _ButtonOr2 = _interopRequireDefault(_ButtonOr);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('button');\n\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button = function (_Component) {\n  (0, _inherits3.default)(Button, _Component);\n\n  function Button() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.computeElementType = function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n\n\n      if (!(0, _isNil3.default)(attached) || !(0, _isNil3.default)(label)) return 'div';\n    }, _this.computeTabIndex = function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n\n\n      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    }, _this.handleClick = function (e) {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          onClick = _this$props3.onClick;\n\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Button, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          animated = _props.animated,\n          attached = _props.attached,\n          basic = _props.basic,\n          children = _props.children,\n          circular = _props.circular,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          disabled = _props.disabled,\n          floated = _props.floated,\n          fluid = _props.fluid,\n          icon = _props.icon,\n          inverted = _props.inverted,\n          label = _props.label,\n          labelPosition = _props.labelPosition,\n          loading = _props.loading,\n          negative = _props.negative,\n          positive = _props.positive,\n          primary = _props.primary,\n          secondary = _props.secondary,\n          size = _props.size,\n          toggle = _props.toggle;\n\n\n      var baseClasses = (0, _classnames2.default)(color, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon === true || icon && (labelPosition || !children && !content), 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOrValueAndKey)(animated, 'animated'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'));\n      var labeledClasses = (0, _classnames2.default)((0, _lib.useKeyOrValueAndKey)(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'));\n\n      var rest = (0, _lib.getUnhandledProps)(Button, this.props);\n      var ElementType = (0, _lib.getElementType)(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!(0, _isNil3.default)(children)) {\n        var _classes = (0, _classnames2.default)('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n        debug('render children:', { classes: _classes });\n\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: _classes, tabIndex: tabIndex, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      var labelElement = _Label2.default.create(label, { defaultProps: {\n          basic: true,\n          pointing: labelPosition === 'left' ? 'right' : 'left'\n        } });\n\n      if (labelElement) {\n        var _classes2 = (0, _classnames2.default)('ui', baseClasses, 'button', className);\n        var containerClasses = (0, _classnames2.default)('ui', labeledClasses, 'button', className, wrapperClasses);\n\n        debug('render label:', { classes: _classes2, containerClasses: containerClasses }, this.props);\n\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: containerClasses, onClick: this.handleClick }),\n          labelPosition === 'left' && labelElement,\n          _react2.default.createElement(\n            'button',\n            { className: _classes2, tabIndex: tabIndex },\n            _Icon2.default.create(icon),\n            ' ',\n            content\n          ),\n          (labelPosition === 'right' || !labelPosition) && labelElement\n        );\n      }\n\n      if (!(0, _isNil3.default)(icon) && (0, _isNil3.default)(label)) {\n        var _classes3 = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses);\n        debug('render icon && !label:', { classes: _classes3 });\n\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: _classes3, tabIndex: tabIndex, onClick: this.handleClick }),\n          _Icon2.default.create(icon),\n          ' ',\n          content\n        );\n      }\n\n      var classes = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses);\n      debug('render default:', { classes: classes });\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, tabIndex: tabIndex, onClick: this.handleClick }),\n        content\n      );\n    }\n  }]);\n  return Button;\n}(_react.Component);\n\nButton.defaultProps = {\n  as: 'button'\n};\nButton._meta = {\n  name: 'Button',\n  type: _lib.META.TYPES.ELEMENT\n};\nButton.Content = _ButtonContent2.default;\nButton.Group = _ButtonGroup2.default;\nButton.Or = _ButtonOr2.default;\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: _propTypes2.default.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to the top or bottom of other content. */\n  attached: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),\n\n  /** A basic button is less pronounced. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _lib.customPropTypes.every([_propTypes2.default.node, _lib.customPropTypes.disallow(['label']), _lib.customPropTypes.givenProps({\n    icon: _propTypes2.default.oneOfType([_propTypes2.default.string.isRequired, _propTypes2.default.object.isRequired, _propTypes2.default.element.isRequired])\n  }, _lib.customPropTypes.disallow(['icon']))]),\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A button can be circular. */\n  circular: _propTypes2.default.bool,\n\n  /** A button can have different colors */\n  color: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: _propTypes2.default.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: _lib.customPropTypes.some([_propTypes2.default.bool, _propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: _lib.customPropTypes.some([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: _propTypes2.default.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: _propTypes2.default.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: _propTypes2.default.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: _propTypes2.default.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: _propTypes2.default.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: _propTypes2.default.bool,\n\n  /** A button can have different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: _propTypes2.default.bool\n} : void 0;\nButton.handledProps = ['active', 'animated', 'as', 'attached', 'basic', 'children', 'circular', 'className', 'color', 'compact', 'content', 'disabled', 'floated', 'fluid', 'icon', 'inverted', 'label', 'labelPosition', 'loading', 'negative', 'onClick', 'positive', 'primary', 'secondary', 'size', 'tabIndex', 'toggle'];\n\n\nButton.create = (0, _lib.createShorthandFactory)(Button, function (value) {\n  return { content: value };\n});\n\nexports.default = Button;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Icon/Icon.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _IconGroup = require('./IconGroup');\n\nvar _IconGroup2 = _interopRequireDefault(_IconGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An icon is a glyph used to represent something else.\n * @see Image\n */\nfunction Icon(props) {\n  var bordered = props.bordered,\n      circular = props.circular,\n      className = props.className,\n      color = props.color,\n      corner = props.corner,\n      disabled = props.disabled,\n      fitted = props.fitted,\n      flipped = props.flipped,\n      inverted = props.inverted,\n      link = props.link,\n      loading = props.loading,\n      name = props.name,\n      rotated = props.rotated,\n      size = props.size;\n\n\n  var classes = (0, _classnames2.default)(color, name, size, (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(corner, 'corner'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(flipped, 'flipped'), (0, _lib.useValueAndKey)(rotated, 'rotated'), 'icon', className);\n  var rest = (0, _lib.getUnhandledProps)(Icon, props);\n  var ElementType = (0, _lib.getElementType)(Icon, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { 'aria-hidden': 'true', className: classes }));\n}\n\nIcon.handledProps = ['as', 'bordered', 'circular', 'className', 'color', 'corner', 'disabled', 'fitted', 'flipped', 'inverted', 'link', 'loading', 'name', 'rotated', 'size'];\nIcon.Group = _IconGroup2.default;\n\nIcon._meta = {\n  name: 'Icon',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Formatted to appear bordered. */\n  bordered: _propTypes2.default.bool,\n\n  /** Icon can formatted to appear circular. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Color of the icon. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Icons can display a smaller corner icon. */\n  corner: _propTypes2.default.bool,\n\n  /** Show that the icon is inactive. */\n  disabled: _propTypes2.default.bool,\n\n  /** Fitted, without space to left or right of Icon. */\n  fitted: _propTypes2.default.bool,\n\n  /** Icon can flipped. */\n  flipped: _propTypes2.default.oneOf(['horizontally', 'vertically']),\n\n  /** Formatted to have its colors inverted for contrast. */\n  inverted: _propTypes2.default.bool,\n\n  /** Icon can be formatted as a link. */\n  link: _propTypes2.default.bool,\n\n  /** Icon can be used as a simple loader. */\n  loading: _propTypes2.default.bool,\n\n  /** Name of the icon. */\n  name: _lib.customPropTypes.suggest(_lib.SUI.ALL_ICONS_IN_ALL_CONTEXTS),\n\n  /** Icon can rotated. */\n  rotated: _propTypes2.default.oneOf(['clockwise', 'counterclockwise']),\n\n  /** Size of the icon. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : void 0;\n\nIcon.defaultProps = {\n  as: 'i'\n};\n\nIcon.create = (0, _lib.createShorthandFactory)(Icon, function (value) {\n  return { name: value };\n});\n\nexports.default = Icon;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Icon/IconGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Several icons can be used together as a group.\n */\nfunction IconGroup(props) {\n  var children = props.children,\n      className = props.className,\n      size = props.size;\n\n  var classes = (0, _classnames2.default)(size, 'icons', className);\n  var rest = (0, _lib.getUnhandledProps)(IconGroup, props);\n  var ElementType = (0, _lib.getElementType)(IconGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nIconGroup.handledProps = ['as', 'children', 'className', 'size'];\nIconGroup._meta = {\n  name: 'IconGroup',\n  parent: 'Icon',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? IconGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Size of the icon group. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : void 0;\n\nIconGroup.defaultProps = {\n  as: 'i'\n};\n\nexports.default = IconGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Label/Label.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Image = require('../Image/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _LabelDetail = require('./LabelDetail');\n\nvar _LabelDetail2 = _interopRequireDefault(_LabelDetail);\n\nvar _LabelGroup = require('./LabelGroup');\n\nvar _LabelGroup2 = _interopRequireDefault(_LabelGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A label displays content classification.\n */\nvar Label = function (_Component) {\n  (0, _inherits3.default)(Label, _Component);\n\n  function Label() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Label);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Label.__proto__ || Object.getPrototypeOf(Label)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          (0, _invoke3.default)(predefinedProps, 'onClick', e);\n          (0, _invoke3.default)(_this.props, 'onRemove', e, _this.props);\n        }\n      };\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Label, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          attached = _props.attached,\n          basic = _props.basic,\n          children = _props.children,\n          circular = _props.circular,\n          className = _props.className,\n          color = _props.color,\n          content = _props.content,\n          corner = _props.corner,\n          detail = _props.detail,\n          empty = _props.empty,\n          floating = _props.floating,\n          horizontal = _props.horizontal,\n          icon = _props.icon,\n          image = _props.image,\n          onRemove = _props.onRemove,\n          pointing = _props.pointing,\n          removeIcon = _props.removeIcon,\n          ribbon = _props.ribbon,\n          size = _props.size,\n          tag = _props.tag;\n\n\n      var pointingClass = pointing === true && 'pointing' || (pointing === 'left' || pointing === 'right') && pointing + ' pointing' || (pointing === 'above' || pointing === 'below') && 'pointing ' + pointing;\n\n      var classes = (0, _classnames2.default)('ui', color, pointingClass, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(empty, 'empty'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(tag, 'tag'), (0, _lib.useKeyOrValueAndKey)(corner, 'corner'), (0, _lib.useKeyOrValueAndKey)(ribbon, 'ribbon'), (0, _lib.useValueAndKey)(attached, 'attached'), 'label', className);\n      var rest = (0, _lib.getUnhandledProps)(Label, this.props);\n      var ElementType = (0, _lib.getElementType)(Label, this.props);\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      var removeIconShorthand = (0, _isUndefined3.default)(removeIcon) ? 'delete' : removeIcon;\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({ className: classes, onClick: this.handleClick }, rest),\n        _Icon2.default.create(icon),\n        typeof image !== 'boolean' && _Image2.default.create(image),\n        content,\n        (0, _lib.createShorthand)(_LabelDetail2.default, function (val) {\n          return { content: val };\n        }, detail),\n        onRemove && _Icon2.default.create(removeIconShorthand, { overrideProps: this.handleIconOverrides })\n      );\n    }\n  }]);\n  return Label;\n}(_react.Component);\n\nLabel._meta = {\n  name: 'Label',\n  type: _lib.META.TYPES.ELEMENT\n};\nLabel.Detail = _LabelDetail2.default;\nLabel.Group = _LabelGroup2.default;\nexports.default = Label;\nprocess.env.NODE_ENV !== \"production\" ? Label.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A label can be active. */\n  active: _propTypes2.default.bool,\n\n  /** A label can attach to a content segment. */\n  attached: _propTypes2.default.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),\n\n  /** A label can reduce its complexity. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** A label can be circular. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Color of the label. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A label can position itself in the corner of an element. */\n  corner: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right'])]),\n\n  /** Shorthand for LabelDetail. */\n  detail: _lib.customPropTypes.itemShorthand,\n\n  /** Formats the label as a dot. */\n  empty: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.demand(['circular'])]),\n\n  /** Float above another element in the upper right corner. */\n  floating: _propTypes2.default.bool,\n\n  /** A horizontal label is formatted to label content along-side it horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** Shorthand for Icon. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */\n  image: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * Adds an \"x\" icon, called when \"x\" is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onRemove: _propTypes2.default.func,\n\n  /** A label can point to content next to it. */\n  pointing: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['above', 'below', 'left', 'right'])]),\n\n  /** Shorthand for Icon to appear as the last child and trigger onRemove. */\n  removeIcon: _lib.customPropTypes.itemShorthand,\n\n  /** A label can appear as a ribbon attaching itself to an element. */\n  ribbon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),\n\n  /** A label can have different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** A label can appear as a tag. */\n  tag: _propTypes2.default.bool\n} : void 0;\nLabel.handledProps = ['active', 'as', 'attached', 'basic', 'children', 'circular', 'className', 'color', 'content', 'corner', 'detail', 'empty', 'floating', 'horizontal', 'icon', 'image', 'onClick', 'onRemove', 'pointing', 'removeIcon', 'ribbon', 'size', 'tag'];\n\n\nLabel.create = (0, _lib.createShorthandFactory)(Label, function (value) {\n  return { content: value };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Image/Image.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Dimmer = require('../../modules/Dimmer');\n\nvar _Dimmer2 = _interopRequireDefault(_Dimmer);\n\nvar _Label = require('../Label/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _ImageGroup = require('./ImageGroup');\n\nvar _ImageGroup2 = _interopRequireDefault(_ImageGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An image is a graphic representation of something.\n * @see Icon\n */\nfunction Image(props) {\n  var alt = props.alt,\n      avatar = props.avatar,\n      bordered = props.bordered,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      dimmer = props.dimmer,\n      disabled = props.disabled,\n      floated = props.floated,\n      fluid = props.fluid,\n      height = props.height,\n      hidden = props.hidden,\n      href = props.href,\n      inline = props.inline,\n      label = props.label,\n      shape = props.shape,\n      size = props.size,\n      spaced = props.spaced,\n      src = props.src,\n      verticalAlign = props.verticalAlign,\n      width = props.width,\n      wrapped = props.wrapped,\n      ui = props.ui;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ui, 'ui'), size, shape, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);\n  var rest = (0, _lib.getUnhandledProps)(Image, props);\n  var ElementType = (0, _lib.getElementType)(Image, props, function () {\n    if (!(0, _isNil3.default)(dimmer) || !(0, _isNil3.default)(label) || !(0, _isNil3.default)(wrapped) || !(0, _isNil3.default)(children)) return 'div';\n  });\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var rootProps = (0, _extends3.default)({}, rest, { className: classes });\n  var imgTagProps = { alt: alt, src: src, height: height, width: width };\n\n  if (ElementType === 'img') return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rootProps, imgTagProps));\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rootProps, { href: href }),\n    _Dimmer2.default.create(dimmer),\n    _Label2.default.create(label),\n    _react2.default.createElement('img', imgTagProps)\n  );\n}\n\nImage.handledProps = ['alt', 'as', 'avatar', 'bordered', 'centered', 'children', 'className', 'dimmer', 'disabled', 'floated', 'fluid', 'height', 'hidden', 'href', 'inline', 'label', 'shape', 'size', 'spaced', 'src', 'ui', 'verticalAlign', 'width', 'wrapped'];\nImage.Group = _ImageGroup2.default;\n\nImage._meta = {\n  name: 'Image',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Image.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Alternate text for the image specified. */\n  alt: _propTypes2.default.string,\n\n  /** An image may be formatted to appear inline with text as an avatar. */\n  avatar: _propTypes2.default.bool,\n\n  /** An image may include a border to emphasize the edges of white or transparent content. */\n  bordered: _propTypes2.default.bool,\n\n  /** An image can appear centered in a content block. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** An image can show that it is disabled and cannot be selected. */\n  disabled: _propTypes2.default.bool,\n\n  /** Shorthand for Dimmer. */\n  dimmer: _lib.customPropTypes.itemShorthand,\n\n  /** An image can sit to the left or right of other content. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** An image can take up the width of its container. */\n  fluid: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['size'])]),\n\n  /** The img element height attribute. */\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /** An image can be hidden. */\n  hidden: _propTypes2.default.bool,\n\n  /** Renders the Image as an <a> tag with this href. */\n  href: _propTypes2.default.string,\n\n  /** An image may appear inline. */\n  inline: _propTypes2.default.bool,\n\n  /** Shorthand for Label. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** An image may appear rounded or circular. */\n  shape: _propTypes2.default.oneOf(['rounded', 'circular']),\n\n  /** An image may appear at different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** An image can specify that it needs an additional spacing to separate it from nearby content. */\n  spaced: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right'])]),\n\n  /** Specifies the URL of the image. */\n  src: _propTypes2.default.string,\n\n  /** Whether or not to add the ui className. */\n  ui: _propTypes2.default.bool,\n\n  /** An image can specify its vertical alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** The img element width attribute. */\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */\n  wrapped: _lib.customPropTypes.every([_propTypes2.default.bool,\n  // these props wrap the image in an a tag already\n  _lib.customPropTypes.disallow(['href'])])\n} : void 0;\n\nImage.defaultProps = {\n  as: 'img',\n  ui: true\n};\n\nImage.create = (0, _lib.createShorthandFactory)(Image, function (value) {\n  return { src: value };\n});\n\nexports.default = Image;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dimmer/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Dimmer = require('./Dimmer');\n\nvar _Dimmer2 = _interopRequireDefault(_Dimmer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Dimmer2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dimmer/Dimmer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Portal = require('../../addons/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _DimmerDimmable = require('./DimmerDimmable');\n\nvar _DimmerDimmable2 = _interopRequireDefault(_DimmerDimmable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A dimmer hides distractions to focus attention on particular content.\n */\nvar Dimmer = function (_Component) {\n  (0, _inherits3.default)(Dimmer, _Component);\n\n  function Dimmer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Dimmer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Dimmer.__proto__ || Object.getPrototypeOf(Dimmer)).call.apply(_ref, [this].concat(args))), _this), _this.handlePortalMount = function () {\n      if (_lib.isBrowser) document.body.classList.add('dimmed', 'dimmable');\n    }, _this.handlePortalUnmount = function () {\n      if (_lib.isBrowser) document.body.classList.remove('dimmed', 'dimmable');\n    }, _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          onClickOutside = _this$props.onClickOutside;\n\n\n      if (onClick) onClick(e, _this.props);\n      if (_this.centerRef && _this.centerRef !== e.target && _this.centerRef.contains(e.target)) return;\n      if (onClickOutside) onClickOutside(e, _this.props);\n    }, _this.handleCenterRef = function (c) {\n      return _this.centerRef = c;\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Dimmer, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          content = _props.content,\n          disabled = _props.disabled,\n          inverted = _props.inverted,\n          page = _props.page,\n          simple = _props.simple;\n\n\n      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(active, 'active transition visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(page, 'page'), (0, _lib.useKeyOnly)(simple, 'simple'), 'dimmer', className);\n      var rest = (0, _lib.getUnhandledProps)(Dimmer, this.props);\n      var ElementType = (0, _lib.getElementType)(Dimmer, this.props);\n\n      var childrenContent = (0, _isNil3.default)(children) ? content : children;\n\n      var dimmerElement = _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n        childrenContent && _react2.default.createElement(\n          'div',\n          { className: 'content' },\n          _react2.default.createElement(\n            'div',\n            { className: 'center', ref: this.handleCenterRef },\n            childrenContent\n          )\n        )\n      );\n\n      if (page) {\n        return _react2.default.createElement(\n          _Portal2.default,\n          {\n            closeOnEscape: false,\n            closeOnDocumentClick: false,\n            onMount: this.handlePortalMount,\n            onUnmount: this.handlePortalUnmount,\n            open: active,\n            openOnTriggerClick: false\n          },\n          dimmerElement\n        );\n      }\n\n      return dimmerElement;\n    }\n  }]);\n  return Dimmer;\n}(_react.Component);\n\nDimmer._meta = {\n  name: 'Dimmer',\n  type: _lib.META.TYPES.MODULE\n};\nDimmer.Dimmable = _DimmerDimmable2.default;\nexports.default = Dimmer;\nprocess.env.NODE_ENV !== \"production\" ? Dimmer.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** An active dimmer will dim its parent container. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A disabled dimmer cannot be activated */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * Handles click outside Dimmer's content, but inside Dimmer area.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClickOutside: _propTypes2.default.func,\n\n  /** A dimmer can be formatted to have its colors inverted. */\n  inverted: _propTypes2.default.bool,\n\n  /** A dimmer can be formatted to be fixed to the page. */\n  page: _propTypes2.default.bool,\n\n  /** A dimmer can be controlled with simple prop. */\n  simple: _propTypes2.default.bool\n} : void 0;\nDimmer.handledProps = ['active', 'as', 'children', 'className', 'content', 'disabled', 'inverted', 'onClick', 'onClickOutside', 'page', 'simple'];\n\n\nDimmer.create = (0, _lib.createShorthandFactory)(Dimmer, function (value) {\n  return { content: value };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Portal/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Portal = require('./Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Portal2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Portal/Portal.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('portal');\n\n/**\n * A component that allows you to render children outside their parent.\n * @see Modal\n * @see Popup\n * @see Dimmer\n * @see Confirm\n */\n\nvar Portal = function (_Component) {\n  (0, _inherits3.default)(Portal, _Component);\n\n  function Portal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Portal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleDocumentClick = function (e) {\n      var _this$props = _this.props,\n          closeOnDocumentClick = _this$props.closeOnDocumentClick,\n          closeOnRootNodeClick = _this$props.closeOnRootNodeClick;\n\n\n      if (!_this.rootNode // not mounted\n      || !_this.portalNode // no portal\n      || (0, _invoke3.default)(_this, 'triggerNode.contains', e.target) // event happened in trigger (delegate to trigger handlers)\n      || (0, _invoke3.default)(_this, 'portalNode.contains', e.target) // event happened in the portal\n      ) return; // ignore the click\n\n      var didClickInRootNode = _this.rootNode.contains(e.target);\n\n      if (closeOnDocumentClick && !didClickInRootNode || closeOnRootNodeClick && didClickInRootNode) {\n        debug('handleDocumentClick()');\n\n        _this.close(e);\n      }\n    }, _this.handleEscape = function (e) {\n      if (!_this.props.closeOnEscape) return;\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;\n\n      debug('handleEscape()');\n\n      _this.close(e);\n    }, _this.handlePortalMouseLeave = function (e) {\n      var _this$props2 = _this.props,\n          closeOnPortalMouseLeave = _this$props2.closeOnPortalMouseLeave,\n          mouseLeaveDelay = _this$props2.mouseLeaveDelay;\n\n\n      if (!closeOnPortalMouseLeave) return;\n\n      debug('handlePortalMouseLeave()');\n      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);\n    }, _this.handlePortalMouseEnter = function (e) {\n      // In order to enable mousing from the trigger to the portal, we need to\n      // clear the mouseleave timer that was set when leaving the trigger.\n      var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;\n\n\n      if (!closeOnPortalMouseLeave) return;\n\n      debug('handlePortalMouseEnter()');\n      clearTimeout(_this.mouseLeaveTimer);\n    }, _this.handleTriggerBlur = function (e) {\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          closeOnTriggerBlur = _this$props3.closeOnTriggerBlur;\n\n      // Call original event handler\n\n      (0, _invoke3.default)(trigger, 'props.onBlur', e);\n\n      // do not close if focus is given to the portal\n      var didFocusPortal = (0, _invoke3.default)(_this, 'rootNode.contains', e.relatedTarget);\n\n      if (!closeOnTriggerBlur || didFocusPortal) return;\n\n      debug('handleTriggerBlur()');\n      _this.close(e);\n    }, _this.handleTriggerClick = function (e) {\n      var _this$props4 = _this.props,\n          trigger = _this$props4.trigger,\n          closeOnTriggerClick = _this$props4.closeOnTriggerClick,\n          openOnTriggerClick = _this$props4.openOnTriggerClick;\n      var open = _this.state.open;\n\n      // Call original event handler\n\n      (0, _invoke3.default)(trigger, 'props.onClick', e);\n\n      if (open && closeOnTriggerClick) {\n        debug('handleTriggerClick() - close');\n\n        _this.close(e);\n      } else if (!open && openOnTriggerClick) {\n        debug('handleTriggerClick() - open');\n\n        _this.open(e);\n      }\n    }, _this.handleTriggerFocus = function (e) {\n      var _this$props5 = _this.props,\n          trigger = _this$props5.trigger,\n          openOnTriggerFocus = _this$props5.openOnTriggerFocus;\n\n      // Call original event handler\n\n      (0, _invoke3.default)(trigger, 'props.onFocus', e);\n\n      if (!openOnTriggerFocus) return;\n\n      debug('handleTriggerFocus()');\n      _this.open(e);\n    }, _this.handleTriggerMouseLeave = function (e) {\n      clearTimeout(_this.mouseEnterTimer);\n\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          closeOnTriggerMouseLeave = _this$props6.closeOnTriggerMouseLeave,\n          mouseLeaveDelay = _this$props6.mouseLeaveDelay;\n\n      // Call original event handler\n\n      (0, _invoke3.default)(trigger, 'props.onMouseLeave', e);\n\n      if (!closeOnTriggerMouseLeave) return;\n\n      debug('handleTriggerMouseLeave()');\n      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);\n    }, _this.handleTriggerMouseEnter = function (e) {\n      clearTimeout(_this.mouseLeaveTimer);\n\n      var _this$props7 = _this.props,\n          trigger = _this$props7.trigger,\n          mouseEnterDelay = _this$props7.mouseEnterDelay,\n          openOnTriggerMouseEnter = _this$props7.openOnTriggerMouseEnter;\n\n      // Call original event handler\n\n      (0, _invoke3.default)(trigger, 'props.onMouseEnter', _this.handleTriggerMouseEnter);\n\n      if (!openOnTriggerMouseEnter) return;\n\n      debug('handleTriggerMouseEnter()');\n      _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);\n    }, _this.open = function (e) {\n      debug('open()');\n\n      var onOpen = _this.props.onOpen;\n\n      if (onOpen) onOpen(e, _this.props);\n\n      _this.trySetState({ open: true });\n    }, _this.openWithTimeout = function (e, delay) {\n      debug('openWithTimeout()', delay);\n      // React wipes the entire event object and suggests using e.persist() if\n      // you need the event for async access. However, even with e.persist\n      // certain required props (e.g. currentTarget) are null so we're forced to clone.\n      var eventClone = (0, _extends3.default)({}, e);\n      return setTimeout(function () {\n        return _this.open(eventClone);\n      }, delay || 0);\n    }, _this.close = function (e) {\n      debug('close()');\n\n      var onClose = _this.props.onClose;\n\n      if (onClose) onClose(e, _this.props);\n\n      _this.trySetState({ open: false });\n    }, _this.closeWithTimeout = function (e, delay) {\n      debug('closeWithTimeout()', delay);\n      // React wipes the entire event object and suggests using e.persist() if\n      // you need the event for async access. However, even with e.persist\n      // certain required props (e.g. currentTarget) are null so we're forced to clone.\n      var eventClone = (0, _extends3.default)({}, e);\n      return setTimeout(function () {\n        return _this.close(eventClone);\n      }, delay || 0);\n    }, _this.mountPortal = function () {\n      if (!_lib.isBrowser || _this.rootNode) return;\n\n      debug('mountPortal()');\n\n      var _this$props8 = _this.props,\n          _this$props8$mountNod = _this$props8.mountNode,\n          mountNode = _this$props8$mountNod === undefined ? _lib.isBrowser ? document.body : null : _this$props8$mountNod,\n          prepend = _this$props8.prepend;\n\n\n      _this.rootNode = document.createElement('div');\n\n      if (prepend) {\n        mountNode.insertBefore(_this.rootNode, mountNode.firstElementChild);\n      } else {\n        mountNode.appendChild(_this.rootNode);\n      }\n\n      document.addEventListener('click', _this.handleDocumentClick);\n      document.addEventListener('keydown', _this.handleEscape);\n\n      var onMount = _this.props.onMount;\n\n      if (onMount) onMount(null, _this.props);\n    }, _this.unmountPortal = function () {\n      if (!_lib.isBrowser || !_this.rootNode) return;\n\n      debug('unmountPortal()');\n\n      _reactDom2.default.unmountComponentAtNode(_this.rootNode);\n      _this.rootNode.parentNode.removeChild(_this.rootNode);\n\n      _this.portalNode.removeEventListener('mouseleave', _this.handlePortalMouseLeave);\n      _this.portalNode.removeEventListener('mouseenter', _this.handlePortalMouseEnter);\n\n      _this.rootNode = null;\n      _this.portalNode = null;\n\n      document.removeEventListener('click', _this.handleDocumentClick);\n      document.removeEventListener('keydown', _this.handleEscape);\n\n      var onUnmount = _this.props.onUnmount;\n\n      if (onUnmount) onUnmount(null, _this.props);\n    }, _this.handleRef = function (c) {\n      _this.triggerNode = _reactDom2.default.findDOMNode(c);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Portal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      debug('componentDidMount()');\n      this.renderPortal();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      debug('componentDidUpdate()');\n      // NOTE: Ideally the portal rendering would happen in the render() function\n      // but React gives a warning about not being pure and suggests doing it\n      // within this method.\n\n      // If the portal is open, render (or re-render) the portal and child.\n      this.renderPortal();\n\n      if (prevState.open && !this.state.open) {\n        debug('portal closed');\n        this.unmountPortal();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unmountPortal();\n\n      // Clean up timers\n      clearTimeout(this.mouseEnterTimer);\n      clearTimeout(this.mouseLeaveTimer);\n    }\n\n    // ----------------------------------------\n    // Document Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Component Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Behavior\n    // ----------------------------------------\n\n  }, {\n    key: 'renderPortal',\n    value: function renderPortal() {\n      var _this2 = this;\n\n      if (!this.state.open) return;\n      debug('renderPortal()');\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className;\n\n\n      this.mountPortal();\n\n      // Server side rendering\n      if (!_lib.isBrowser) return null;\n\n      this.rootNode.className = className || '';\n\n      // when re-rendering, first remove listeners before re-adding them to the new node\n      if (this.portalNode) {\n        this.portalNode.removeEventListener('mouseleave', this.handlePortalMouseLeave);\n        this.portalNode.removeEventListener('mouseenter', this.handlePortalMouseEnter);\n      }\n\n      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react.Children.only(children), this.rootNode, function () {\n        _this2.portalNode = _this2.rootNode.firstElementChild;\n\n        _this2.portalNode.addEventListener('mouseleave', _this2.handlePortalMouseLeave);\n        _this2.portalNode.addEventListener('mouseenter', _this2.handlePortalMouseEnter);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var trigger = this.props.trigger;\n\n\n      if (!trigger) return null;\n\n      return (0, _react.cloneElement)(trigger, {\n        ref: this.handleRef,\n        onBlur: this.handleTriggerBlur,\n        onClick: this.handleTriggerClick,\n        onFocus: this.handleTriggerFocus,\n        onMouseLeave: this.handleTriggerMouseLeave,\n        onMouseEnter: this.handleTriggerMouseEnter\n      });\n    }\n  }]);\n  return Portal;\n}(_lib.AutoControlledComponent);\n\nPortal.defaultProps = {\n  closeOnDocumentClick: true,\n  closeOnEscape: true,\n  openOnTriggerClick: true\n};\nPortal.autoControlledProps = ['open'];\nPortal._meta = {\n  name: 'Portal',\n  type: _lib.META.TYPES.ADDON\n};\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  /** Primary content. */\n  children: _propTypes2.default.node.isRequired,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Controls whether or not the portal should close when the document is clicked. */\n  closeOnDocumentClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close when escape is pressed is displayed. */\n  closeOnEscape: _propTypes2.default.bool,\n\n  /**\n   * Controls whether or not the portal should close when mousing out of the portal.\n   * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the\n   * gap from the trigger to the portal.\n   */\n  closeOnPortalMouseLeave: _propTypes2.default.bool,\n\n  /**\n   * Controls whether or not the portal should close on a click on the portal background.\n   * NOTE: This differs from closeOnDocumentClick:\n   * - DocumentClick - any click not within the portal\n   * - RootNodeClick - a click not within the portal but within the portal's wrapper\n   */\n  closeOnRootNodeClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close on blur of the trigger. */\n  closeOnTriggerBlur: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close on click of the trigger. */\n  closeOnTriggerClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should close when mousing out of the trigger. */\n  closeOnTriggerMouseLeave: _propTypes2.default.bool,\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** The node where the portal should mount. */\n  mountNode: _propTypes2.default.any,\n\n  /** Milliseconds to wait before closing on mouse leave */\n  mouseLeaveDelay: _propTypes2.default.number,\n\n  /** Milliseconds to wait before opening on mouse over */\n  mouseEnterDelay: _propTypes2.default.number,\n\n  /**\n   * Called when a close event happens\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is mounted on the DOM\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: _propTypes2.default.func,\n\n  /**\n   * Called when an open event happens\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: _propTypes2.default.func,\n\n  /** Controls whether or not the portal is displayed. */\n  open: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open when the trigger is clicked. */\n  openOnTriggerClick: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open on focus of the trigger. */\n  openOnTriggerFocus: _propTypes2.default.bool,\n\n  /** Controls whether or not the portal should open when mousing over the trigger. */\n  openOnTriggerMouseEnter: _propTypes2.default.bool,\n\n  /** Controls whether the portal should be prepended to the mountNode instead of appended. */\n  prepend: _propTypes2.default.bool,\n\n  /** Element to be rendered in-place where the portal is defined. */\n  trigger: _propTypes2.default.node\n} : void 0;\nPortal.handledProps = ['children', 'className', 'closeOnDocumentClick', 'closeOnEscape', 'closeOnPortalMouseLeave', 'closeOnRootNodeClick', 'closeOnTriggerBlur', 'closeOnTriggerClick', 'closeOnTriggerMouseLeave', 'defaultOpen', 'mountNode', 'mouseEnterDelay', 'mouseLeaveDelay', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'open', 'openOnTriggerClick', 'openOnTriggerFocus', 'openOnTriggerMouseEnter', 'prepend', 'trigger'];\nexports.default = Portal;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dimmer/DimmerDimmable.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A dimmable sub-component for Dimmer.\n */\nfunction DimmerDimmable(props) {\n  var blurring = props.blurring,\n      className = props.className,\n      children = props.children,\n      dimmed = props.dimmed;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(blurring, 'blurring'), (0, _lib.useKeyOnly)(dimmed, 'dimmed'), 'dimmable', className);\n  var rest = (0, _lib.getUnhandledProps)(DimmerDimmable, props);\n  var ElementType = (0, _lib.getElementType)(DimmerDimmable, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nDimmerDimmable.handledProps = ['as', 'blurring', 'children', 'className', 'dimmed'];\nDimmerDimmable._meta = {\n  name: 'DimmerDimmable',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Dimmer'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DimmerDimmable.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A dimmable element can blur its contents. */\n  blurring: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Controls whether or not the dim is displayed. */\n  dimmed: _propTypes2.default.bool\n} : void 0;\n\nexports.default = DimmerDimmable;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Image/ImageGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A group of images.\n */\nfunction ImageGroup(props) {\n  var children = props.children,\n      className = props.className,\n      size = props.size;\n\n  var classes = (0, _classnames2.default)('ui', size, className, 'images');\n  var rest = (0, _lib.getUnhandledProps)(ImageGroup, props);\n  var ElementType = (0, _lib.getElementType)(ImageGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nImageGroup.handledProps = ['as', 'children', 'className', 'size'];\nImageGroup._meta = {\n  name: 'ImageGroup',\n  parent: 'Image',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ImageGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A group of images can be formatted to have the same size. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES)\n} : void 0;\n\nexports.default = ImageGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Label/LabelDetail.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction LabelDetail(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('detail', className);\n  var rest = (0, _lib.getUnhandledProps)(LabelDetail, props);\n  var ElementType = (0, _lib.getElementType)(LabelDetail, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nLabelDetail.handledProps = ['as', 'children', 'className', 'content'];\nLabelDetail._meta = {\n  name: 'LabelDetail',\n  parent: 'Label',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LabelDetail.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = LabelDetail;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Label/LabelGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A label can be grouped.\n */\nfunction LabelGroup(props) {\n  var children = props.children,\n      circular = props.circular,\n      className = props.className,\n      color = props.color,\n      size = props.size,\n      tag = props.tag;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(tag, 'tag'), 'labels', className);\n  var rest = (0, _lib.getUnhandledProps)(LabelGroup, props);\n  var ElementType = (0, _lib.getElementType)(LabelGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nLabelGroup.handledProps = ['as', 'children', 'circular', 'className', 'color', 'size', 'tag'];\nLabelGroup._meta = {\n  name: 'LabelGroup',\n  parent: 'Label',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LabelGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Labels can share shapes. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Label group can share colors together. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Label group can share sizes together. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** Label group can share tag formatting. */\n  tag: _propTypes2.default.bool\n} : void 0;\n\nexports.default = LabelGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Button/ButtonContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Used in some Button types, such as `animated`.\n */\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      hidden = props.hidden,\n      visible = props.visible;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(hidden, 'hidden'), 'content', className);\n  var rest = (0, _lib.getUnhandledProps)(ButtonContent, props);\n  var ElementType = (0, _lib.getElementType)(ButtonContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nButtonContent.handledProps = ['as', 'children', 'className', 'hidden', 'visible'];\nButtonContent._meta = {\n  name: 'ButtonContent',\n  parent: 'Button',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ButtonContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Initially hidden, visible on hover. */\n  hidden: _propTypes2.default.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: _propTypes2.default.bool\n} : void 0;\n\nexports.default = ButtonContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Button/ButtonGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Buttons can be grouped.\n */\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useValueAndKey)(attached, 'attached'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useWidthProp)(widths), 'buttons', className);\n  var rest = (0, _lib.getUnhandledProps)(ButtonGroup, props);\n  var ElementType = (0, _lib.getElementType)(ButtonGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nButtonGroup.handledProps = ['as', 'attached', 'basic', 'children', 'className', 'color', 'compact', 'floated', 'fluid', 'icon', 'inverted', 'labeled', 'negative', 'positive', 'primary', 'secondary', 'size', 'toggle', 'vertical', 'widths'];\nButtonGroup._meta = {\n  name: 'ButtonGroup',\n  parent: 'Button',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A button can be attached to the top or bottom of other content. */\n  attached: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),\n\n  /** Groups can be less pronounced. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Groups can have a shared color. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: _propTypes2.default.bool,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: _propTypes2.default.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: _propTypes2.default.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: _propTypes2.default.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: _propTypes2.default.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: _propTypes2.default.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: _propTypes2.default.bool,\n\n  /** Groups can have different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: _propTypes2.default.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: _propTypes2.default.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\n\nexports.default = ButtonGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Button/ButtonOr.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Button groups can contain conditionals.\n */\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n\n  var classes = (0, _classnames2.default)('or', className);\n  var rest = (0, _lib.getUnhandledProps)(ButtonOr, props);\n  var ElementType = (0, _lib.getElementType)(ButtonOr, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes, 'data-text': text }));\n}\n\nButtonOr.handledProps = ['as', 'className', 'text'];\nButtonOr._meta = {\n  name: 'ButtonOr',\n  parent: 'Button',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ButtonOr.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n} : void 0;\n\nexports.default = ButtonOr;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Modal = require('./Modal');\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/Modal.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Portal = require('../../addons/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _ModalHeader = require('./ModalHeader');\n\nvar _ModalHeader2 = _interopRequireDefault(_ModalHeader);\n\nvar _ModalContent = require('./ModalContent');\n\nvar _ModalContent2 = _interopRequireDefault(_ModalContent);\n\nvar _ModalActions = require('./ModalActions');\n\nvar _ModalActions2 = _interopRequireDefault(_ModalActions);\n\nvar _ModalDescription = require('./ModalDescription');\n\nvar _ModalDescription2 = _interopRequireDefault(_ModalDescription);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('modal');\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\n\nvar Modal = function (_Component) {\n  (0, _inherits3.default)(Modal, _Component);\n\n  function Modal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.getMountNode = function () {\n      return _lib.isBrowser ? _this.props.mountNode || document.body : null;\n    }, _this.handleClose = function (e) {\n      debug('close()');\n\n      var onClose = _this.props.onClose;\n\n      if (onClose) onClose(e, _this.props);\n\n      _this.trySetState({ open: false });\n    }, _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          (0, _invoke3.default)(predefinedProps, 'onClick', e);\n          _this.handleClose(e);\n        }\n      };\n    }, _this.handleOpen = function (e) {\n      debug('open()');\n\n      var onOpen = _this.props.onOpen;\n\n      if (onOpen) onOpen(e, _this.props);\n\n      _this.trySetState({ open: true });\n    }, _this.handlePortalMount = function (e) {\n      debug('handlePortalMount()');\n      var dimmer = _this.props.dimmer;\n\n      var mountNode = _this.getMountNode();\n\n      if (dimmer) {\n        debug('adding dimmer');\n        mountNode.classList.add('dimmable', 'dimmed');\n\n        if (dimmer === 'blurring') {\n          debug('adding blurred dimmer');\n          mountNode.classList.add('blurring');\n        }\n      }\n\n      _this.setPosition();\n\n      var onMount = _this.props.onMount;\n\n      if (onMount) onMount(e, _this.props);\n    }, _this.handlePortalUnmount = function (e) {\n      debug('handlePortalUnmount()');\n\n      // Always remove all dimmer classes.\n      // If the dimmer value changes while the modal is open, then removing its\n      // current value could leave cruft classes previously added.\n      var mountNode = _this.getMountNode();\n      mountNode.classList.remove('blurring', 'dimmable', 'dimmed', 'scrollable');\n\n      cancelAnimationFrame(_this.animationRequestId);\n\n      var onUnmount = _this.props.onUnmount;\n\n      if (onUnmount) onUnmount(e, _this.props);\n    }, _this.handleRef = function (c) {\n      return _this.ref = c;\n    }, _this.setPosition = function () {\n      if (_this.ref) {\n        var mountNode = _this.getMountNode();\n\n        var _this$ref$getBounding = _this.ref.getBoundingClientRect(),\n            height = _this$ref$getBounding.height;\n\n        var marginTop = -Math.round(height / 2);\n        var scrolling = height >= window.innerHeight;\n\n        var newState = {};\n\n        if (_this.state.marginTop !== marginTop) {\n          newState.marginTop = marginTop;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n\n          if (scrolling) {\n            mountNode.classList.add('scrolling');\n          } else {\n            mountNode.classList.remove('scrolling');\n          }\n        }\n\n        if (Object.keys(newState).length > 0) _this.setState(newState);\n      }\n\n      _this.animationRequestId = requestAnimationFrame(_this.setPosition);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Modal, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      debug('componentWillUnmount()');\n      this.handlePortalUnmount();\n    }\n\n    // Do not access document when server side rendering\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var open = this.state.open;\n      var _props = this.props,\n          basic = _props.basic,\n          children = _props.children,\n          className = _props.className,\n          closeIcon = _props.closeIcon,\n          closeOnDimmerClick = _props.closeOnDimmerClick,\n          closeOnDocumentClick = _props.closeOnDocumentClick,\n          dimmer = _props.dimmer,\n          size = _props.size,\n          style = _props.style;\n\n\n      var mountNode = this.getMountNode();\n\n      // Short circuit when server side rendering\n      if (!_lib.isBrowser) return null;\n\n      var _state = this.state,\n          marginTop = _state.marginTop,\n          scrolling = _state.scrolling;\n\n      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var unhandled = (0, _lib.getUnhandledProps)(Modal, this.props);\n      var portalPropNames = _Portal2.default.handledProps;\n\n      var rest = (0, _omit3.default)(unhandled, portalPropNames);\n      var portalProps = (0, _pick3.default)(unhandled, portalPropNames);\n      var ElementType = (0, _lib.getElementType)(Modal, this.props);\n\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var modalJSX = _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, style: (0, _extends3.default)({ marginTop: marginTop }, style), ref: this.handleRef }),\n        _Icon2.default.create(closeIconName, { overrideProps: this.handleIconOverrides }),\n        children\n      );\n\n      // wrap dimmer modals\n      var dimmerClasses = !dimmer ? null : (0, _classnames2.default)('ui', dimmer === 'inverted' && 'inverted', 'page modals dimmer transition visible active');\n\n      // Heads up!\n      //\n      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n      //\n      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n      // We need the immediate child to be the dimmer to :not() blur the modal itself!\n      // Otherwise, the portal div is also blurred, blurring the modal.\n      //\n      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n      return _react2.default.createElement(\n        _Portal2.default,\n        (0, _extends3.default)({\n          closeOnRootNodeClick: closeOnDimmerClick,\n          closeOnDocumentClick: closeOnDocumentClick\n        }, portalProps, {\n          className: dimmerClasses,\n          mountNode: mountNode,\n          onClose: this.handleClose,\n          onMount: this.handlePortalMount,\n          onOpen: this.handleOpen,\n          onUnmount: this.handlePortalUnmount,\n          open: open\n        }),\n        modalJSX\n      );\n    }\n  }]);\n  return Modal;\n}(_lib.AutoControlledComponent);\n\nModal.defaultProps = {\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false\n};\nModal.autoControlledProps = ['open'];\nModal._meta = {\n  name: 'Modal',\n  type: _lib.META.TYPES.MODULE\n};\nModal.Header = _ModalHeader2.default;\nModal.Content = _ModalContent2.default;\nModal.Description = _ModalDescription2.default;\nModal.Actions = _ModalActions2.default;\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A modal can reduce its complexity */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Icon. */\n  closeIcon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object, _propTypes2.default.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: _propTypes2.default.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: _propTypes2.default.bool,\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** A modal can appear in a dimmer. */\n  dimmer: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['inverted', 'blurring'])]),\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: _propTypes2.default.any,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: _propTypes2.default.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: _propTypes2.default.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: _propTypes2.default.bool,\n\n  /** A modal can vary in size */\n  size: _propTypes2.default.oneOf(['fullscreen', 'large', 'small']),\n\n  /** Custom styles. */\n  style: _propTypes2.default.object\n\n} : void 0;\nModal.handledProps = ['as', 'basic', 'children', 'className', 'closeIcon', 'closeOnDimmerClick', 'closeOnDocumentClick', 'defaultOpen', 'dimmer', 'mountNode', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'open', 'size', 'style'];\nexports.default = Modal;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Icon/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Icon = require('./Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Icon2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/ModalHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A modal can have a header.\n */\nfunction ModalHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)(className, 'header');\n  var rest = (0, _lib.getUnhandledProps)(ModalHeader, props);\n  var ElementType = (0, _lib.getElementType)(ModalHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nModalHeader.handledProps = ['as', 'children', 'className', 'content'];\nModalHeader._meta = {\n  name: 'ModalHeader',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Modal'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ModalHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nModalHeader.create = (0, _lib.createShorthandFactory)(ModalHeader, function (content) {\n  return { content: content };\n});\n\nexports.default = ModalHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/ModalContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A modal can contain content.\n */\nfunction ModalContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image;\n\n\n  var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(image, 'image'), 'content');\n  var rest = (0, _lib.getUnhandledProps)(ModalContent, props);\n  var ElementType = (0, _lib.getElementType)(ModalContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nModalContent.handledProps = ['as', 'children', 'className', 'content', 'image'];\nModalContent._meta = {\n  name: 'ModalContent',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Modal'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ModalContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A modal can contain image content. */\n  image: _propTypes2.default.bool\n} : void 0;\n\nModalContent.create = (0, _lib.createShorthandFactory)(ModalContent, function (content) {\n  return { content: content };\n});\n\nexports.default = ModalContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/ModalActions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A modal can contain a row of actions.\n */\nfunction ModalActions(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('actions', className);\n  var rest = (0, _lib.getUnhandledProps)(ModalActions, props);\n  var ElementType = (0, _lib.getElementType)(ModalActions, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nModalActions.handledProps = ['as', 'children', 'className'];\nModalActions._meta = {\n  name: 'ModalActions',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Modal'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ModalActions.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = ModalActions;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Modal/ModalDescription.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A modal can have a header.\n */\nfunction ModalDescription(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('description', className);\n  var rest = (0, _lib.getUnhandledProps)(ModalDescription, props);\n  var ElementType = (0, _lib.getElementType)(ModalDescription, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nModalDescription.handledProps = ['as', 'children', 'className'];\nModalDescription._meta = {\n  name: 'ModalDescription',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Modal'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ModalDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = ModalDescription;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Radio/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Radio = require('./Radio');\n\nvar _Radio2 = _interopRequireDefault(_Radio);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Radio2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Radio/Radio.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Checkbox = require('../../modules/Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n\n  var rest = (0, _lib.getUnhandledProps)(Radio, props);\n  // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n  var radio = !(slider || toggle) || undefined;\n\n  return _react2.default.createElement(_Checkbox2.default, (0, _extends3.default)({}, rest, { type: type, radio: radio, slider: slider, toggle: toggle }));\n}\n\nRadio.handledProps = ['slider', 'toggle', 'type'];\nRadio._meta = {\n  name: 'Radio',\n  type: _lib.META.TYPES.ADDON\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  /** Format to emphasize the current selection state. */\n  slider: _Checkbox2.default.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: _Checkbox2.default.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: _Checkbox2.default.propTypes.type\n} : void 0;\n\nRadio.defaultProps = {\n  type: 'radio'\n};\n\nexports.default = Radio;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Checkbox/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Checkbox = require('./Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Checkbox2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Checkbox/Checkbox.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _invoke2 = require('lodash/fp/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _isNil2 = require('lodash/fp/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('checkbox');\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\n\nvar Checkbox = function (_Component) {\n  (0, _inherits3.default)(Checkbox, _Component);\n\n  function Checkbox() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Checkbox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n\n\n      return !disabled && !readOnly && !(radio && checked);\n    }, _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n\n\n      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    }, _this.handleInputRef = function (c) {\n      return _this.inputRef = c;\n    }, _this.handleClick = function (e) {\n      debug('handleClick()');\n\n      var _this$props3 = _this.props,\n          onChange = _this$props3.onChange,\n          onClick = _this$props3.onClick;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n\n      if (_this.canToggle()) {\n        if (onClick) onClick(e, (0, _extends3.default)({}, _this.props, { checked: !!checked, indeterminate: !!indeterminate }));\n        if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { checked: !checked, indeterminate: false }));\n\n        _this.trySetState({ checked: !checked, indeterminate: false });\n      }\n    }, _this.handleMouseDown = function (e) {\n      debug('handleMouseDown()');\n\n      var onMouseDown = _this.props.onMouseDown;\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n\n      (0, _invoke3.default)('focus', _this.inputRef);\n      if (onMouseDown) onMouseDown(e, (0, _extends3.default)({}, _this.props, { checked: !!checked, indeterminate: !!indeterminate }));\n    }, _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n\n      if (_this.inputRef) _this.inputRef.indeterminate = !!indeterminate;\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Checkbox, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    }\n\n    // Note: You can't directly set the indeterminate prop on the input, so we\n    // need to maintain a ref to the input and set it manually whenever the\n    // component updates.\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          disabled = _props.disabled,\n          label = _props.label,\n          name = _props.name,\n          radio = _props.radio,\n          readOnly = _props.readOnly,\n          slider = _props.slider,\n          toggle = _props.toggle,\n          type = _props.type,\n          value = _props.value;\n      var _state = this.state,\n          checked = _state.checked,\n          indeterminate = _state.indeterminate;\n\n\n      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(checked, 'checked'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'),\n      // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      (0, _lib.useKeyOnly)(!label, 'fitted'), (0, _lib.useKeyOnly)(radio, 'radio'), (0, _lib.useKeyOnly)(readOnly, 'read-only'), (0, _lib.useKeyOnly)(slider, 'slider'), (0, _lib.useKeyOnly)(toggle, 'toggle'), 'checkbox', className);\n      var rest = (0, _lib.getUnhandledProps)(Checkbox, this.props);\n      var ElementType = (0, _lib.getElementType)(Checkbox, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, {\n          className: classes,\n          onChange: this.handleClick,\n          onClick: this.handleClick,\n          onMouseDown: this.handleMouseDown\n        }),\n        _react2.default.createElement('input', {\n          checked: checked,\n          className: 'hidden',\n          name: name,\n          readOnly: true,\n          ref: this.handleInputRef,\n          tabIndex: this.computeTabIndex(),\n          type: type,\n          value: value\n        }),\n        (0, _lib.createHTMLLabel)(label) || _react2.default.createElement('label', null)\n      );\n    }\n  }]);\n  return Checkbox;\n}(_lib.AutoControlledComponent);\n\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];\nCheckbox._meta = {\n  name: 'Checkbox',\n  type: _lib.META.TYPES.MODULE\n};\nexports.default = Checkbox;\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Whether or not checkbox is checked. */\n  checked: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** The initial value of checked. */\n  defaultChecked: _propTypes2.default.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: _propTypes2.default.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: _propTypes2.default.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: _propTypes2.default.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: _propTypes2.default.bool,\n\n  /** The text of the associated label element. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: _propTypes2.default.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: _propTypes2.default.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: _propTypes2.default.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: _propTypes2.default.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** Format to show an on or off choice. */\n  toggle: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: _propTypes2.default.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: _propTypes2.default.string,\n\n  /** A checkbox can receive focus. */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n} : void 0;\nCheckbox.handledProps = ['as', 'checked', 'className', 'defaultChecked', 'defaultIndeterminate', 'disabled', 'fitted', 'indeterminate', 'label', 'name', 'onChange', 'onClick', 'onMouseDown', 'radio', 'readOnly', 'slider', 'tabIndex', 'toggle', 'type', 'value'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Select/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Select = require('./Select');\n\nvar _Select2 = _interopRequireDefault(_Select);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Select2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/Select/Select.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Dropdown = require('../../modules/Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A Select is sugar for <Dropdown selection />.\n * @see Dropdown\n * @see Form\n */\nfunction Select(props) {\n  return _react2.default.createElement(_Dropdown2.default, (0, _extends3.default)({}, props, { selection: true }));\n}\n\nSelect.handledProps = [];\nSelect._meta = {\n  name: 'Select',\n  type: _lib.META.TYPES.ADDON\n};\n\nSelect.Divider = _Dropdown2.default.Divider;\nSelect.Header = _Dropdown2.default.Header;\nSelect.Item = _Dropdown2.default.Item;\nSelect.Menu = _Dropdown2.default.Menu;\n\nexports.default = Select;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Dropdown = require('./Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Dropdown2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/Dropdown.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get3 = require('babel-runtime/helpers/get');\n\nvar _get4 = _interopRequireDefault(_get3);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _compact2 = require('lodash/compact');\n\nvar _compact3 = _interopRequireDefault(_compact2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _every2 = require('lodash/every');\n\nvar _every3 = _interopRequireDefault(_every2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _findIndex2 = require('lodash/findIndex');\n\nvar _findIndex3 = _interopRequireDefault(_findIndex2);\n\nvar _find2 = require('lodash/find');\n\nvar _find3 = _interopRequireDefault(_find2);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _some2 = require('lodash/some');\n\nvar _some3 = _interopRequireDefault(_some2);\n\nvar _escapeRegExp2 = require('lodash/escapeRegExp');\n\nvar _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);\n\nvar _filter2 = require('lodash/filter');\n\nvar _filter3 = _interopRequireDefault(_filter2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _dropRight2 = require('lodash/dropRight');\n\nvar _dropRight3 = _interopRequireDefault(_dropRight2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _union2 = require('lodash/union');\n\nvar _union3 = _interopRequireDefault(_union2);\n\nvar _get5 = require('lodash/get');\n\nvar _get6 = _interopRequireDefault(_get5);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Label = require('../../elements/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _DropdownDivider = require('./DropdownDivider');\n\nvar _DropdownDivider2 = _interopRequireDefault(_DropdownDivider);\n\nvar _DropdownItem = require('./DropdownItem');\n\nvar _DropdownItem2 = _interopRequireDefault(_DropdownItem);\n\nvar _DropdownHeader = require('./DropdownHeader');\n\nvar _DropdownHeader2 = _interopRequireDefault(_DropdownHeader);\n\nvar _DropdownMenu = require('./DropdownMenu');\n\nvar _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('dropdown');\n\n/**\n * A dropdown allows a user to select a value from a series of options.\n * @see Form\n * @see Select\n * @see Menu\n */\n\nvar Dropdown = function (_Component) {\n  (0, _inherits3.default)(Dropdown, _Component);\n\n  function Dropdown() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Dropdown);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e, value) {\n      debug('handleChange()');\n      debug(value);\n      var onChange = _this.props.onChange;\n\n      if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { value: value }));\n    }, _this.closeOnChange = function (e) {\n      var _this$props = _this.props,\n          closeOnChange = _this$props.closeOnChange,\n          multiple = _this$props.multiple;\n\n      var shouldClose = (0, _isUndefined3.default)(closeOnChange) ? !multiple : closeOnChange;\n\n      if (shouldClose) _this.close(e);\n    }, _this.closeOnEscape = function (e) {\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;\n      e.preventDefault();\n      _this.close();\n    }, _this.moveSelectionOnKeyDown = function (e) {\n      debug('moveSelectionOnKeyDown()');\n      debug(_lib.keyboardKey.getName(e));\n      switch (_lib.keyboardKey.getCode(e)) {\n        case _lib.keyboardKey.ArrowDown:\n          e.preventDefault();\n          _this.moveSelectionBy(1);\n          break;\n        case _lib.keyboardKey.ArrowUp:\n          e.preventDefault();\n          _this.moveSelectionBy(-1);\n          break;\n        default:\n          break;\n      }\n    }, _this.openOnSpace = function (e) {\n      debug('openOnSpace()');\n\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Spacebar) return;\n      if (_this.state.open) return;\n\n      e.preventDefault();\n\n      _this.open(e);\n    }, _this.openOnArrow = function (e) {\n      debug('openOnArrow()');\n\n      var code = _lib.keyboardKey.getCode(e);\n      if (!(0, _includes3.default)([_lib.keyboardKey.ArrowDown, _lib.keyboardKey.ArrowUp], code)) return;\n      if (_this.state.open) return;\n\n      e.preventDefault();\n\n      _this.open(e);\n    }, _this.makeSelectedItemActive = function (e) {\n      var open = _this.state.open;\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          onAddItem = _this$props2.onAddItem;\n\n      var item = _this.getSelectedItem();\n      var value = (0, _get6.default)(item, 'value');\n\n      // prevent selecting null if there was no selected item value\n      // prevent selecting duplicate items when the dropdown is closed\n      if (!value || !open) return;\n\n      // notify the onAddItem prop if this is a new value\n      if (onAddItem && item['data-additional']) {\n        onAddItem(e, (0, _extends3.default)({}, _this.props, { value: value }));\n      }\n      // notify the onChange prop that the user is trying to change value\n      if (multiple) {\n        // state value may be undefined\n        var newValue = (0, _union3.default)(_this.state.value, [value]);\n        _this.setValue(newValue);\n        _this.handleChange(e, newValue);\n      } else {\n        _this.setValue(value);\n        _this.handleChange(e, value);\n      }\n    }, _this.selectItemOnEnter = function (e) {\n      debug('selectItemOnEnter()');\n      debug(_lib.keyboardKey.getName(e));\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;\n      e.preventDefault();\n\n      _this.makeSelectedItemActive(e);\n      _this.closeOnChange(e);\n    }, _this.removeItemOnBackspace = function (e) {\n      debug('removeItemOnBackspace()');\n      debug(_lib.keyboardKey.getName(e));\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Backspace) return;\n\n      var _this$props3 = _this.props,\n          multiple = _this$props3.multiple,\n          search = _this$props3.search;\n      var _this$state = _this.state,\n          searchQuery = _this$state.searchQuery,\n          value = _this$state.value;\n\n\n      if (searchQuery || !search || !multiple || (0, _isEmpty3.default)(value)) return;\n\n      e.preventDefault();\n\n      // remove most recent value\n      var newValue = (0, _dropRight3.default)(value);\n\n      _this.setValue(newValue);\n      _this.handleChange(e, newValue);\n    }, _this.closeOnDocumentClick = function (e) {\n      debug('closeOnDocumentClick()');\n      debug(e);\n\n      // If event happened in the dropdown, ignore it\n      if (_this.ref && (0, _isFunction3.default)(_this.ref.contains) && _this.ref.contains(e.target)) return;\n\n      _this.close();\n    }, _this.handleMouseDown = function (e) {\n      debug('handleMouseDown()');\n      var onMouseDown = _this.props.onMouseDown;\n\n      if (onMouseDown) onMouseDown(e, _this.props);\n      _this.isMouseDown = true;\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n      document.addEventListener('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleDocumentMouseUp = function () {\n      debug('handleDocumentMouseUp()');\n      _this.isMouseDown = false;\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n      document.removeEventListener('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleClick = function (e) {\n      debug('handleClick()', e);\n      var onClick = _this.props.onClick;\n\n      if (onClick) onClick(e, _this.props);\n      // prevent closeOnDocumentClick()\n      e.stopPropagation();\n      _this.toggle(e);\n    }, _this.handleItemClick = function (e, item) {\n      debug('handleItemClick()');\n      debug(item);\n      var _this$props4 = _this.props,\n          multiple = _this$props4.multiple,\n          onAddItem = _this$props4.onAddItem;\n      var value = item.value;\n\n      // prevent toggle() in handleClick()\n\n      e.stopPropagation();\n      // prevent closeOnDocumentClick() if multiple or item is disabled\n      if (multiple || item.disabled) {\n        e.nativeEvent.stopImmediatePropagation();\n      }\n\n      if (item.disabled) return;\n\n      // notify the onAddItem prop if this is a new value\n      if (onAddItem && item['data-additional']) {\n        onAddItem(e, (0, _extends3.default)({}, _this.props, { value: value }));\n      }\n\n      // notify the onChange prop that the user is trying to change value\n      if (multiple) {\n        var newValue = (0, _union3.default)(_this.state.value, [value]);\n        _this.setValue(newValue);\n        _this.handleChange(e, newValue);\n      } else {\n        _this.setValue(value);\n        _this.handleChange(e, value);\n      }\n      _this.closeOnChange(e);\n    }, _this.handleFocus = function (e) {\n      debug('handleFocus()');\n      var onFocus = _this.props.onFocus;\n      var focus = _this.state.focus;\n\n      if (focus) return;\n      if (onFocus) onFocus(e, _this.props);\n      _this.setState({ focus: true });\n    }, _this.handleBlur = function (e) {\n      debug('handleBlur()');\n      var _this$props5 = _this.props,\n          closeOnBlur = _this$props5.closeOnBlur,\n          multiple = _this$props5.multiple,\n          onBlur = _this$props5.onBlur,\n          selectOnBlur = _this$props5.selectOnBlur;\n      // do not \"blur\" when the mouse is down inside of the Dropdown\n\n      if (_this.isMouseDown) return;\n      if (onBlur) onBlur(e, _this.props);\n      if (selectOnBlur && !multiple) {\n        _this.makeSelectedItemActive(e);\n        if (closeOnBlur) _this.close();\n      }\n      _this.setState({ focus: false, searchQuery: '' });\n    }, _this.handleSearchChange = function (e) {\n      debug('handleSearchChange()');\n      debug(e.target.value);\n      // prevent propagating to this.props.onChange()\n      e.stopPropagation();\n      var _this$props6 = _this.props,\n          search = _this$props6.search,\n          onSearchChange = _this$props6.onSearchChange;\n      var open = _this.state.open;\n\n      var newQuery = e.target.value;\n\n      if (onSearchChange) onSearchChange(e, newQuery);\n\n      // open search dropdown on search query\n      if (search && newQuery && !open) _this.open();\n\n      _this.setState({\n        selectedIndex: 0,\n        searchQuery: newQuery\n      });\n    }, _this.getMenuOptions = function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;\n      var _this$props7 = _this.props,\n          multiple = _this$props7.multiple,\n          search = _this$props7.search,\n          allowAdditions = _this$props7.allowAdditions,\n          additionPosition = _this$props7.additionPosition,\n          additionLabel = _this$props7.additionLabel;\n      var searchQuery = _this.state.searchQuery;\n\n\n      var filteredOptions = options;\n\n      // filter out active options\n      if (multiple) {\n        filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {\n          return !(0, _includes3.default)(value, opt.value);\n        });\n      }\n\n      // filter by search query\n      if (search && searchQuery) {\n        if ((0, _isFunction3.default)(search)) {\n          filteredOptions = search(filteredOptions, searchQuery);\n        } else {\n          var re = new RegExp((0, _escapeRegExp3.default)(searchQuery), 'i');\n          filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {\n            return re.test(opt.text);\n          });\n        }\n      }\n\n      // insert the \"add\" item\n      if (allowAdditions && search && searchQuery && !(0, _some3.default)(filteredOptions, { text: searchQuery })) {\n        var additionLabelElement = _react2.default.isValidElement(additionLabel) ? _react2.default.cloneElement(additionLabel, { key: 'label' }) : additionLabel || '';\n\n        var addItem = {\n          // by using an array, we can pass multiple elements, but when doing so\n          // we must specify a `key` for React to know which one is which\n          text: [additionLabelElement, _react2.default.createElement(\n            'b',\n            { key: 'addition' },\n            searchQuery\n          )],\n          value: searchQuery,\n          className: 'addition',\n          'data-additional': true\n        };\n        if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);\n      }\n\n      return filteredOptions;\n    }, _this.getSelectedItem = function () {\n      var selectedIndex = _this.state.selectedIndex;\n\n      var options = _this.getMenuOptions();\n\n      return (0, _get6.default)(options, '[' + selectedIndex + ']');\n    }, _this.getEnabledIndices = function (givenOptions) {\n      var options = givenOptions || _this.getMenuOptions();\n\n      return (0, _reduce3.default)(options, function (memo, item, index) {\n        if (!item.disabled) memo.push(index);\n        return memo;\n      }, []);\n    }, _this.getItemByValue = function (value) {\n      var options = _this.props.options;\n\n\n      return (0, _find3.default)(options, { value: value });\n    }, _this.getMenuItemIndexByValue = function (value, givenOptions) {\n      var options = givenOptions || _this.getMenuOptions();\n\n      return (0, _findIndex3.default)(options, ['value', value]);\n    }, _this.getDropdownAriaOptions = function (ElementType) {\n      var _this$props8 = _this.props,\n          loading = _this$props8.loading,\n          disabled = _this$props8.disabled,\n          search = _this$props8.search,\n          multiple = _this$props8.multiple;\n      var open = _this.state.open;\n\n      var ariaOptions = {\n        role: search ? 'combobox' : 'listbox',\n        'aria-busy': loading,\n        'aria-disabled': disabled,\n        'aria-expanded': !!open\n      };\n      if (ariaOptions.role === 'listbox') {\n        ariaOptions['aria-multiselectable'] = multiple;\n      }\n      return ariaOptions;\n    }, _this.setValue = function (value) {\n      debug('setValue()');\n      debug('value', value);\n      var newState = {\n        searchQuery: ''\n      };\n\n      var _this$props9 = _this.props,\n          multiple = _this$props9.multiple,\n          search = _this$props9.search;\n\n      if (multiple && search && _this.searchRef) _this.searchRef.focus();\n\n      _this.trySetState({ value: value }, newState);\n      _this.setSelectedIndex(value);\n    }, _this.setSelectedIndex = function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;\n      var optionsProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;\n      var multiple = _this.props.multiple;\n      var selectedIndex = _this.state.selectedIndex;\n\n      var options = _this.getMenuOptions(value, optionsProps);\n      var enabledIndicies = _this.getEnabledIndices(options);\n\n      var newSelectedIndex = void 0;\n\n      // update the selected index\n      if (!selectedIndex || selectedIndex < 0) {\n        var firstIndex = enabledIndicies[0];\n\n        // Select the currently active item, if none, use the first item.\n        // Multiple selects remove active items from the list,\n        // their initial selected index should be 0.\n        newSelectedIndex = multiple ? firstIndex : _this.getMenuItemIndexByValue(value, options) || enabledIndicies[0];\n      } else if (multiple) {\n        // multiple selects remove options from the menu as they are made active\n        // keep the selected index within range of the remaining items\n        if (selectedIndex >= options.length - 1) {\n          newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];\n        }\n      } else {\n        var activeIndex = _this.getMenuItemIndexByValue(value, options);\n\n        // regular selects can only have one active item\n        // set the selected index to the currently active item\n        newSelectedIndex = (0, _includes3.default)(enabledIndicies, activeIndex) ? activeIndex : undefined;\n      }\n\n      if (!newSelectedIndex || newSelectedIndex < 0) {\n        newSelectedIndex = enabledIndicies[0];\n      }\n\n      _this.setState({ selectedIndex: newSelectedIndex });\n    }, _this.handleLabelClick = function (e, labelProps) {\n      debug('handleLabelClick()');\n      // prevent focusing search input on click\n      e.stopPropagation();\n\n      _this.setState({ selectedLabel: labelProps.value });\n\n      var onLabelClick = _this.props.onLabelClick;\n\n      if (onLabelClick) onLabelClick(e, labelProps);\n    }, _this.handleLabelRemove = function (e, labelProps) {\n      debug('handleLabelRemove()');\n      // prevent focusing search input on click\n      e.stopPropagation();\n      var value = _this.state.value;\n\n      var newValue = (0, _without3.default)(value, labelProps.value);\n      debug('label props:', labelProps);\n      debug('current value:', value);\n      debug('remove value:', labelProps.value);\n      debug('new value:', newValue);\n\n      _this.setValue(newValue);\n      _this.handleChange(e, newValue);\n    }, _this.moveSelectionBy = function (offset) {\n      var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.selectedIndex;\n\n      debug('moveSelectionBy()');\n      debug('offset: ' + offset);\n\n      var options = _this.getMenuOptions();\n      var lastIndex = options.length - 1;\n\n      // Prevent infinite loop\n      if ((0, _every3.default)(options, 'disabled')) return;\n\n      // next is after last, wrap to beginning\n      // next is before first, wrap to end\n      var nextIndex = startIndex + offset;\n      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;\n\n      if (options[nextIndex].disabled) return _this.moveSelectionBy(offset, nextIndex);\n\n      _this.setState({ selectedIndex: nextIndex });\n      _this.scrollSelectedItemIntoView();\n    }, _this.handleSearchRef = function (c) {\n      return _this.searchRef = c;\n    }, _this.handleSizerRef = function (c) {\n      return _this.sizerRef = c;\n    }, _this.handleRef = function (c) {\n      return _this.ref = c;\n    }, _this.scrollSelectedItemIntoView = function () {\n      debug('scrollSelectedItemIntoView()');\n      if (!_this.ref) return;\n      var menu = _this.ref.querySelector('.menu.visible');\n      if (!menu) return;\n      var item = menu.querySelector('.item.selected');\n      if (!item) return;\n      debug('menu: ' + menu);\n      debug('item: ' + item);\n      var isOutOfUpperView = item.offsetTop < menu.scrollTop;\n      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;\n\n      if (isOutOfUpperView) {\n        menu.scrollTop = item.offsetTop;\n      } else if (isOutOfLowerView) {\n        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;\n      }\n    }, _this.open = function (e) {\n      debug('open()');\n\n      var _this$props10 = _this.props,\n          disabled = _this$props10.disabled,\n          onOpen = _this$props10.onOpen,\n          search = _this$props10.search;\n\n      if (disabled) return;\n      if (search && _this.searchRef) _this.searchRef.focus();\n      if (onOpen) onOpen(e, _this.props);\n\n      _this.trySetState({ open: true });\n      _this.scrollSelectedItemIntoView();\n    }, _this.close = function (e) {\n      debug('close()');\n\n      var onClose = _this.props.onClose;\n\n      if (onClose) onClose(e, _this.props);\n\n      _this.trySetState({ open: false });\n    }, _this.handleClose = function () {\n      debug('handleClose()');\n      var hasSearchFocus = document.activeElement === _this.searchRef;\n      var hasDropdownFocus = document.activeElement === _this.ref;\n      var hasFocus = hasSearchFocus || hasDropdownFocus;\n      // https://github.com/Semantic-Org/Semantic-UI-React/issues/627\n      // Blur the Dropdown on close so it is blurred after selecting an item.\n      // This is to prevent it from re-opening when switching tabs after selecting an item.\n      if (!hasSearchFocus) {\n        _this.ref.blur();\n      }\n\n      // We need to keep the virtual model in sync with the browser focus change\n      // https://github.com/Semantic-Org/Semantic-UI-React/issues/692\n      _this.setState({ focus: hasFocus });\n    }, _this.toggle = function (e) {\n      if (!_this.state.open) {\n        _this.open(e);\n        return;\n      }\n\n      var search = _this.props.search;\n\n      var options = _this.getMenuOptions();\n\n      if (search && (0, _isEmpty3.default)(options)) {\n        e.preventDefault();\n        return;\n      }\n\n      _this.close(e);\n    }, _this.renderText = function () {\n      var _this$props11 = _this.props,\n          multiple = _this$props11.multiple,\n          placeholder = _this$props11.placeholder,\n          search = _this$props11.search,\n          text = _this$props11.text;\n      var _this$state2 = _this.state,\n          searchQuery = _this$state2.searchQuery,\n          value = _this$state2.value,\n          open = _this$state2.open;\n\n      var hasValue = multiple ? !(0, _isEmpty3.default)(value) : !(0, _isNil3.default)(value) && value !== '';\n\n      var classes = (0, _classnames2.default)(placeholder && !hasValue && 'default', 'text', search && searchQuery && 'filtered');\n      var _text = placeholder;\n      if (searchQuery) {\n        _text = null;\n      } else if (text) {\n        _text = text;\n      } else if (open && !multiple) {\n        _text = (0, _get6.default)(_this.getSelectedItem(), 'text');\n      } else if (hasValue) {\n        _text = (0, _get6.default)(_this.getItemByValue(value), 'text');\n      }\n\n      return _react2.default.createElement(\n        'div',\n        { className: classes },\n        _text\n      );\n    }, _this.renderHiddenInput = function () {\n      debug('renderHiddenInput()');\n      var value = _this.state.value;\n      var _this$props12 = _this.props,\n          multiple = _this$props12.multiple,\n          name = _this$props12.name,\n          options = _this$props12.options,\n          selection = _this$props12.selection;\n\n      debug('name:      ' + name);\n      debug('selection: ' + selection);\n      debug('value:     ' + value);\n      if (!selection) return null;\n\n      // a dropdown without an active item will have an empty string value\n      return _react2.default.createElement(\n        'select',\n        { type: 'hidden', 'aria-hidden': 'true', name: name, value: value, multiple: multiple },\n        _react2.default.createElement('option', { value: '' }),\n        (0, _map3.default)(options, function (option) {\n          return _react2.default.createElement(\n            'option',\n            { key: option.value, value: option.value },\n            option.text\n          );\n        })\n      );\n    }, _this.renderSearchInput = function () {\n      var _this$props13 = _this.props,\n          disabled = _this$props13.disabled,\n          search = _this$props13.search,\n          name = _this$props13.name,\n          tabIndex = _this$props13.tabIndex;\n      var searchQuery = _this.state.searchQuery;\n\n\n      if (!search) return null;\n\n      // tabIndex\n      var computedTabIndex = void 0;\n      if (!(0, _isNil3.default)(tabIndex)) computedTabIndex = tabIndex;else computedTabIndex = disabled ? -1 : 0;\n\n      // resize the search input, temporarily show the sizer so we can measure it\n      var searchWidth = void 0;\n      if (_this.sizerRef && searchQuery) {\n        _this.sizerRef.style.display = 'inline';\n        _this.sizerRef.textContent = searchQuery;\n        searchWidth = Math.ceil(_this.sizerRef.getBoundingClientRect().width);\n        _this.sizerRef.style.removeProperty('display');\n      }\n\n      return _react2.default.createElement('input', {\n        value: searchQuery,\n        type: 'text',\n        'aria-autocomplete': 'list',\n        onChange: _this.handleSearchChange,\n        className: 'search',\n        name: [name, 'search'].join('-'),\n        autoComplete: 'off',\n        tabIndex: computedTabIndex,\n        style: { width: searchWidth },\n        ref: _this.handleSearchRef\n      });\n    }, _this.renderSearchSizer = function () {\n      var _this$props14 = _this.props,\n          search = _this$props14.search,\n          multiple = _this$props14.multiple;\n\n\n      if (!(search && multiple)) return null;\n      return _react2.default.createElement('span', { className: 'sizer', ref: _this.handleSizerRef });\n    }, _this.renderLabels = function () {\n      debug('renderLabels()');\n      var _this$props15 = _this.props,\n          multiple = _this$props15.multiple,\n          renderLabel = _this$props15.renderLabel;\n      var _this$state3 = _this.state,\n          selectedLabel = _this$state3.selectedLabel,\n          value = _this$state3.value;\n\n      if (!multiple || (0, _isEmpty3.default)(value)) {\n        return;\n      }\n      var selectedItems = (0, _map3.default)(value, _this.getItemByValue);\n      debug('selectedItems', selectedItems);\n\n      // if no item could be found for a given state value the selected item will be undefined\n      // compact the selectedItems so we only have actual objects left\n      return (0, _map3.default)((0, _compact3.default)(selectedItems), function (item, index) {\n        var defaultProps = {\n          active: item.value === selectedLabel,\n          as: 'a',\n          key: item.value,\n          onClick: _this.handleLabelClick,\n          onRemove: _this.handleLabelRemove,\n          value: item.value\n        };\n\n        return _Label2.default.create(renderLabel(item, index, defaultProps), { defaultProps: defaultProps });\n      });\n    }, _this.renderOptions = function () {\n      var _this$props16 = _this.props,\n          multiple = _this$props16.multiple,\n          search = _this$props16.search,\n          noResultsMessage = _this$props16.noResultsMessage;\n      var _this$state4 = _this.state,\n          selectedIndex = _this$state4.selectedIndex,\n          value = _this$state4.value;\n\n      var options = _this.getMenuOptions();\n\n      if (noResultsMessage !== null && search && (0, _isEmpty3.default)(options)) {\n        return _react2.default.createElement(\n          'div',\n          { className: 'message' },\n          noResultsMessage\n        );\n      }\n\n      var isActive = multiple ? function (optValue) {\n        return (0, _includes3.default)(value, optValue);\n      } : function (optValue) {\n        return optValue === value;\n      };\n\n      return (0, _map3.default)(options, function (opt, i) {\n        return _react2.default.createElement(_DropdownItem2.default, (0, _extends3.default)({\n          key: opt.value + '-' + i,\n          active: isActive(opt.value),\n          onClick: _this.handleItemClick,\n          selected: selectedIndex === i\n        }, opt, {\n          // Needed for handling click events on disabled items\n          style: (0, _extends3.default)({}, opt.style, { pointerEvents: 'all' })\n        }));\n      });\n    }, _this.renderMenu = function () {\n      var _this$props17 = _this.props,\n          children = _this$props17.children,\n          header = _this$props17.header;\n      var open = _this.state.open;\n\n      var menuClasses = open ? 'visible' : '';\n      var ariaOptions = _this.getDropdownMenuAriaOptions();\n\n      // single menu child\n      if (!(0, _isNil3.default)(children)) {\n        var menuChild = _react.Children.only(children);\n        var className = (0, _classnames2.default)(menuClasses, menuChild.props.className);\n\n        return (0, _react.cloneElement)(menuChild, (0, _extends3.default)({ className: className }, ariaOptions));\n      }\n\n      return _react2.default.createElement(\n        _DropdownMenu2.default,\n        (0, _extends3.default)({}, ariaOptions, { className: menuClasses }),\n        _DropdownHeader2.default.create(header),\n        _this.renderOptions()\n      );\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Dropdown, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if ((0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this)) (0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this).call(this);\n      debug('componentWillMount()');\n      var _state = this.state,\n          open = _state.open,\n          value = _state.value;\n\n\n      this.setValue(value);\n      if (open) this.open();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      (0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n      debug('componentWillReceiveProps()');\n      // TODO objectDiff still runs in prod, stop it\n      debug('to props:', (0, _lib.objectDiff)(this.props, nextProps));\n\n      /* eslint-disable no-console */\n      if (process.env.NODE_ENV !== 'production') {\n        // in development, validate value type matches dropdown type\n        var isNextValueArray = Array.isArray(nextProps.value);\n        var hasValue = (0, _has3.default)(nextProps, 'value');\n\n        if (hasValue && nextProps.multiple && !isNextValueArray) {\n          console.error('Dropdown `value` must be an array when `multiple` is set.' + (' Received type: `' + Object.prototype.toString.call(nextProps.value) + '`.'));\n        } else if (hasValue && !nextProps.multiple && isNextValueArray) {\n          console.error('Dropdown `value` must not be an array when `multiple` is not set.' + ' Either set `multiple={true}` or use a string or number value.');\n        }\n      }\n      /* eslint-enable no-console */\n\n      if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {\n        debug('value changed, setting', nextProps.value);\n        this.setValue(nextProps.value);\n      }\n\n      if (!(0, _isEqual3.default)(nextProps.options, this.props.options)) {\n        this.setSelectedIndex(undefined, nextProps.options);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      // eslint-disable-line complexity\n      debug('componentDidUpdate()');\n      // TODO objectDiff still runs in prod, stop it\n      debug('to state:', (0, _lib.objectDiff)(prevState, this.state));\n\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n\n      // focused / blurred\n      if (!prevState.focus && this.state.focus) {\n        debug('dropdown focused');\n        if (!this.isMouseDown) {\n          var openOnFocus = this.props.openOnFocus;\n\n          debug('mouse is not down, opening');\n          if (openOnFocus) this.open();\n        }\n        if (!this.state.open) {\n          document.addEventListener('keydown', this.openOnArrow);\n          document.addEventListener('keydown', this.openOnSpace);\n        } else {\n          document.addEventListener('keydown', this.moveSelectionOnKeyDown);\n          document.addEventListener('keydown', this.selectItemOnEnter);\n        }\n        document.addEventListener('keydown', this.removeItemOnBackspace);\n      } else if (prevState.focus && !this.state.focus) {\n        debug('dropdown blurred');\n        var closeOnBlur = this.props.closeOnBlur;\n\n        if (!this.isMouseDown && closeOnBlur) {\n          debug('mouse is not down and closeOnBlur=true, closing');\n          this.close();\n        }\n        document.removeEventListener('keydown', this.openOnArrow);\n        document.removeEventListener('keydown', this.openOnSpace);\n        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.removeEventListener('keydown', this.selectItemOnEnter);\n        document.removeEventListener('keydown', this.removeItemOnBackspace);\n      }\n\n      // opened / closed\n      if (!prevState.open && this.state.open) {\n        debug('dropdown opened');\n        document.addEventListener('keydown', this.closeOnEscape);\n        document.addEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.addEventListener('keydown', this.selectItemOnEnter);\n        document.addEventListener('keydown', this.removeItemOnBackspace);\n        document.addEventListener('click', this.closeOnDocumentClick);\n        document.removeEventListener('keydown', this.openOnArrow);\n        document.removeEventListener('keydown', this.openOnSpace);\n        this.scrollSelectedItemIntoView();\n      } else if (prevState.open && !this.state.open) {\n        debug('dropdown closed');\n        this.handleClose();\n        document.removeEventListener('keydown', this.closeOnEscape);\n        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.removeEventListener('keydown', this.selectItemOnEnter);\n        document.removeEventListener('click', this.closeOnDocumentClick);\n        if (!this.state.focus) {\n          document.removeEventListener('keydown', this.removeItemOnBackspace);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      debug('componentWillUnmount()');\n\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n\n      document.removeEventListener('keydown', this.openOnArrow);\n      document.removeEventListener('keydown', this.openOnSpace);\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n      document.removeEventListener('keydown', this.selectItemOnEnter);\n      document.removeEventListener('keydown', this.removeItemOnBackspace);\n      document.removeEventListener('keydown', this.closeOnEscape);\n      document.removeEventListener('click', this.closeOnDocumentClick);\n    }\n\n    // ----------------------------------------\n    // Document Event Handlers\n    // ----------------------------------------\n\n    // onChange needs to receive a value\n    // can't rely on props.value if we are controlled\n\n\n    // ----------------------------------------\n    // Component Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Getters\n    // ----------------------------------------\n\n    // There are times when we need to calculate the options based on a value\n    // that hasn't yet been persisted to state.\n\n  }, {\n    key: 'getDropdownMenuAriaOptions',\n    value: function getDropdownMenuAriaOptions() {\n      var _props = this.props,\n          search = _props.search,\n          multiple = _props.multiple;\n\n      var ariaOptions = {};\n\n      if (search) {\n        ariaOptions['aria-multiselectable'] = multiple;\n        ariaOptions.role = 'listbox';\n      }\n      return ariaOptions;\n    }\n\n    // ----------------------------------------\n    // Setters\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Refs\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Behavior\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n\n  }, {\n    key: 'render',\n    value: function render() {\n      debug('render()');\n      debug('props', this.props);\n      debug('state', this.state);\n      var open = this.state.open;\n      var _props2 = this.props,\n          basic = _props2.basic,\n          button = _props2.button,\n          className = _props2.className,\n          compact = _props2.compact,\n          fluid = _props2.fluid,\n          floating = _props2.floating,\n          icon = _props2.icon,\n          inline = _props2.inline,\n          item = _props2.item,\n          labeled = _props2.labeled,\n          multiple = _props2.multiple,\n          pointing = _props2.pointing,\n          search = _props2.search,\n          selection = _props2.selection,\n          simple = _props2.simple,\n          loading = _props2.loading,\n          error = _props2.error,\n          disabled = _props2.disabled,\n          scrolling = _props2.scrolling,\n          tabIndex = _props2.tabIndex,\n          trigger = _props2.trigger;\n\n      // Classes\n\n      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(open, 'active visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(button, 'button'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(inline, 'inline'),\n      // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues\n      // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229\n      // TODO: the icon class is only required when a dropdown is a button\n      // useKeyOnly(icon, 'icon'),\n      (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(item, 'item'), (0, _lib.useKeyOnly)(multiple, 'multiple'), (0, _lib.useKeyOnly)(search, 'search'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOnly)(simple, 'simple'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), (0, _lib.useKeyOrValueAndKey)(pointing, 'pointing'), className, 'dropdown');\n      var rest = (0, _lib.getUnhandledProps)(Dropdown, this.props);\n      var ElementType = (0, _lib.getElementType)(Dropdown, this.props);\n      var ariaOptions = this.getDropdownAriaOptions(ElementType, this.props);\n\n      var computedTabIndex = void 0;\n      if (!(0, _isNil3.default)(tabIndex)) {\n        computedTabIndex = tabIndex;\n      } else if (!search) {\n        // don't set a root node tabIndex as the search input has its own tabIndex\n        computedTabIndex = disabled ? -1 : 0;\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, ariaOptions, {\n          className: classes,\n          onBlur: this.handleBlur,\n          onClick: this.handleClick,\n          onMouseDown: this.handleMouseDown,\n          onFocus: this.handleFocus,\n          onChange: this.handleChange,\n          tabIndex: computedTabIndex,\n          ref: this.handleRef\n        }),\n        this.renderHiddenInput(),\n        this.renderLabels(),\n        this.renderSearchInput(),\n        this.renderSearchSizer(),\n        trigger || this.renderText(),\n        _Icon2.default.create(icon),\n        this.renderMenu()\n      );\n    }\n  }]);\n  return Dropdown;\n}(_lib.AutoControlledComponent);\n\nDropdown.defaultProps = {\n  additionLabel: 'Add ',\n  additionPosition: 'top',\n  icon: 'dropdown',\n  noResultsMessage: 'No results found.',\n  renderLabel: function renderLabel(_ref2) {\n    var text = _ref2.text;\n    return text;\n  },\n  selectOnBlur: true,\n  openOnFocus: true,\n  closeOnBlur: true\n};\nDropdown.autoControlledProps = ['open', 'value', 'selectedLabel'];\nDropdown._meta = {\n  name: 'Dropdown',\n  type: _lib.META.TYPES.MODULE\n};\nDropdown.Divider = _DropdownDivider2.default;\nDropdown.Header = _DropdownHeader2.default;\nDropdown.Item = _DropdownItem2.default;\nDropdown.Menu = _DropdownMenu2.default;\nexports.default = Dropdown;\nprocess.env.NODE_ENV !== \"production\" ? Dropdown.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Label prefixed to an option added by a user. */\n  additionLabel: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),\n\n  /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */\n  additionPosition: _propTypes2.default.oneOf(['top', 'bottom']),\n\n  /**\n   * Allow user additions to the list of options (boolean).\n   * Requires the use of `selection`, `options` and `search`.\n   */\n  allowAdditions: _lib.customPropTypes.every([_lib.customPropTypes.demand(['options', 'selection', 'search']), _propTypes2.default.bool]),\n\n  /** A Dropdown can reduce its complexity. */\n  basic: _propTypes2.default.bool,\n\n  /** Format the Dropdown to appear as a button. */\n  button: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['options', 'selection']), _lib.customPropTypes.givenProps({ children: _propTypes2.default.any.isRequired }, _react2.default.PropTypes.element.isRequired)]),\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Whether or not the menu should close when the dropdown is blurred. */\n  closeOnBlur: _propTypes2.default.bool,\n\n  /**\n   * Whether or not the menu should close when a value is selected from the dropdown.\n   * By default, multiple selection dropdowns will remain open on change, while single\n   * selection dropdowns will close on change.\n   */\n  closeOnChange: _propTypes2.default.bool,\n\n  /** A compact dropdown has no minimum width. */\n  compact: _propTypes2.default.bool,\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** Currently selected label in multi-select. */\n  defaultSelectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),\n\n  /** Initial value or value array if multiple. */\n  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))]),\n\n  /** A disabled dropdown menu or item does not allow user interaction. */\n  disabled: _propTypes2.default.bool,\n\n  /** An errored dropdown can alert a user to a problem. */\n  error: _propTypes2.default.bool,\n\n  /** A dropdown menu can contain floated content. */\n  floating: _propTypes2.default.bool,\n\n  /** A dropdown can take the full width of its parent */\n  fluid: _propTypes2.default.bool,\n\n  /** A dropdown menu can contain a header. */\n  header: _propTypes2.default.node,\n\n  /** Shorthand for Icon. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),\n\n  /** A dropdown can be formatted to appear inline in other content. */\n  inline: _propTypes2.default.bool,\n\n  /** A dropdown can be formatted as a Menu item. */\n  item: _propTypes2.default.bool,\n\n  /** A dropdown can be labeled. */\n  labeled: _propTypes2.default.bool,\n\n  /** A dropdown can show that it is currently loading data. */\n  loading: _propTypes2.default.bool,\n\n  /** A selection dropdown can allow multiple selections. */\n  multiple: _propTypes2.default.bool,\n\n  /** Name of the hidden input which holds the value. */\n  name: _propTypes2.default.string,\n\n  /** Message to display when there are no results. */\n  noResultsMessage: _propTypes2.default.string,\n\n  /**\n   * Called when a user adds a new item. Use this to update the options list.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and the new item's value.\n   */\n  onAddItem: _propTypes2.default.func,\n\n  /**\n   * Called on blur.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBlur: _propTypes2.default.func,\n\n  /**\n   * Called when the user attempts to change the value.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onChange: _propTypes2.default.func,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: _propTypes2.default.func,\n\n  /**\n   * Called on focus.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onFocus: _propTypes2.default.func,\n\n  /**\n   * Called when a multi-select label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All label props.\n   */\n  onLabelClick: _propTypes2.default.func,\n\n  /**\n   * Called on mousedown.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onMouseDown: _propTypes2.default.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: _propTypes2.default.func,\n\n  /**\n   * Called on search input change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {string} value - Current value of search input.\n   */\n  onSearchChange: _propTypes2.default.func,\n\n  /** Controls whether or not the dropdown menu is displayed. */\n  open: _propTypes2.default.bool,\n\n  /** Whether or not the menu should open when the dropdown is focused. */\n  openOnFocus: _propTypes2.default.bool,\n\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.arrayOf(_propTypes2.default.shape(_DropdownItem2.default.propTypes))]),\n\n  /** Placeholder text. */\n  placeholder: _propTypes2.default.string,\n\n  /** A dropdown can be formatted so that its menu is pointing. */\n  pointing: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right'])]),\n\n  /**\n   * Mapped over the active items and returns shorthand for the active item Labels.\n   * Only applies to `multiple` Dropdowns.\n   *\n   * @param {object} item - A currently active dropdown item.\n   * @param {number} index - The current index.\n   * @param {object} defaultLabelProps - The default props for an active item Label.\n   * @returns {*} Shorthand for a Label.\n   */\n  renderLabel: _propTypes2.default.func,\n\n  /** A dropdown can have its menu scroll. */\n  scrolling: _propTypes2.default.bool,\n\n  /**\n   * A selection dropdown can allow a user to search through a large list of choices.\n   * Pass a function here to replace the default search.\n   */\n  search: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),\n\n  // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?\n\n  /** Define whether the highlighted item should be selected on blur. */\n  selectOnBlur: _propTypes2.default.bool,\n\n  /** Currently selected label in multi-select. */\n  selectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])]),\n\n  /** A dropdown can be used to select between choices in a form. */\n  selection: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['options']), _propTypes2.default.bool]),\n\n  /** A simple dropdown can open without Javascript. */\n  simple: _propTypes2.default.bool,\n\n  /** A dropdown can receive focus. */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** The text displayed in the dropdown, usually for the active item. */\n  text: _propTypes2.default.string,\n\n  /** Custom element to trigger the menu to become visible. Takes place of 'text'. */\n  trigger: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['selection', 'text']), _propTypes2.default.node]),\n\n  /** Current value or value array if multiple. Creates a controlled component. */\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))])\n} : void 0;\nDropdown.handledProps = ['additionLabel', 'additionPosition', 'allowAdditions', 'as', 'basic', 'button', 'children', 'className', 'closeOnBlur', 'closeOnChange', 'compact', 'defaultOpen', 'defaultSelectedLabel', 'defaultValue', 'disabled', 'error', 'floating', 'fluid', 'header', 'icon', 'inline', 'item', 'labeled', 'loading', 'multiple', 'name', 'noResultsMessage', 'onAddItem', 'onBlur', 'onChange', 'onClick', 'onClose', 'onFocus', 'onLabelClick', 'onMouseDown', 'onOpen', 'onSearchChange', 'open', 'openOnFocus', 'options', 'placeholder', 'pointing', 'renderLabel', 'scrolling', 'search', 'selectOnBlur', 'selectedLabel', 'selection', 'simple', 'tabIndex', 'text', 'trigger', 'value'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Label/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Label = require('./Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Label2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/DropdownDivider.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\nfunction DropdownDivider(props) {\n  var className = props.className;\n\n  var classes = (0, _classnames2.default)('divider', className);\n  var rest = (0, _lib.getUnhandledProps)(DropdownDivider, props);\n  var ElementType = (0, _lib.getElementType)(DropdownDivider, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }));\n}\n\nDropdownDivider.handledProps = ['as', 'className'];\nDropdownDivider._meta = {\n  name: 'DropdownDivider',\n  parent: 'Dropdown',\n  type: _lib.META.TYPES.MODULE\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DropdownDivider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = DropdownDivider;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/DropdownItem.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Flag = require('../../elements/Flag');\n\nvar _Flag2 = _interopRequireDefault(_Flag);\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _Label = require('../../elements/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item sub-component for Dropdown component.\n */\nvar DropdownItem = function (_Component) {\n  (0, _inherits3.default)(DropdownItem, _Component);\n\n  function DropdownItem() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, DropdownItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = DropdownItem.__proto__ || Object.getPrototypeOf(DropdownItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(DropdownItem, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          content = _props.content,\n          disabled = _props.disabled,\n          description = _props.description,\n          flag = _props.flag,\n          icon = _props.icon,\n          image = _props.image,\n          label = _props.label,\n          selected = _props.selected,\n          text = _props.text;\n\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(selected, 'selected'), 'item', className);\n      // add default dropdown icon if item contains another menu\n      var iconName = (0, _isNil3.default)(icon) ? _lib.childrenUtils.someByType(children, 'DropdownMenu') && 'dropdown' : icon;\n      var rest = (0, _lib.getUnhandledProps)(DropdownItem, this.props);\n      var ElementType = (0, _lib.getElementType)(DropdownItem, this.props);\n      var ariaOptions = {\n        role: 'option',\n        'aria-disabled': disabled,\n        'aria-checked': active,\n        'aria-selected': selected\n      };\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      var flagElement = _Flag2.default.create(flag);\n      var iconElement = _Icon2.default.create(iconName);\n      var imageElement = _Image2.default.create(image);\n      var labelElement = _Label2.default.create(label);\n      var descriptionElement = (0, _lib.createShorthand)('span', function (val) {\n        return { children: val };\n      }, description, { defaultProps: { className: 'description' } });\n      var textElement = (0, _lib.createShorthand)('span', function (val) {\n        return { children: val };\n      }, content || text, { defaultProps: { className: 'text' } });\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),\n        imageElement,\n        iconElement,\n        flagElement,\n        labelElement,\n        descriptionElement,\n        textElement\n      );\n    }\n  }]);\n  return DropdownItem;\n}(_react.Component);\n\nDropdownItem._meta = {\n  name: 'DropdownItem',\n  parent: 'Dropdown',\n  type: _lib.META.TYPES.MODULE\n};\nexports.default = DropdownItem;\nprocess.env.NODE_ENV !== \"production\" ? DropdownItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Style as the currently chosen item. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Additional text with less emphasis. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** A dropdown item can be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** Shorthand for Flag. */\n  flag: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for Icon. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for Image. */\n  image: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for Label. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * The item currently selected by keyboard shortcut.\n   * This is not the active item.\n   */\n  selected: _propTypes2.default.bool,\n\n  /** Display text. */\n  text: _lib.customPropTypes.contentShorthand,\n\n  /** Stored value. */\n  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n} : void 0;\nDropdownItem.handledProps = ['active', 'as', 'children', 'className', 'content', 'description', 'disabled', 'flag', 'icon', 'image', 'label', 'onClick', 'selected', 'text', 'value'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Flag/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Flag = require('./Flag');\n\nvar _Flag2 = _interopRequireDefault(_Flag);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Flag2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Flag/Flag.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar names = ['ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al', 'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa', 'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb', 'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi', 'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt', 'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc', 'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland', 'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr', 'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz', 'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic', 'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es', 'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm', 'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'united kingdom', 'gd', 'grenada', 'ge', 'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn', 'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt', 'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn', 'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in', 'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm', 'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati', 'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky', 'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk', 'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya', 'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands', 'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp', 'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu', 'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia', 'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands', 'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe', 'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm', 'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau', 'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda', 'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se', 'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia', 'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv', 'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories', 'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn', 'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua', 'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz', 'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi', 'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa', 'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe'];\n\n/**\n * A flag is is used to represent a political state.\n */\nfunction Flag(props) {\n  var className = props.className,\n      name = props.name;\n\n  var classes = (0, _classnames2.default)(name, 'flag', className);\n  var rest = (0, _lib.getUnhandledProps)(Flag, props);\n  var ElementType = (0, _lib.getElementType)(Flag, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }));\n}\n\nFlag.handledProps = ['as', 'className', 'name'];\nFlag._meta = {\n  name: 'Flag',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Flag.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Flag name, can use the two digit country code, the full name, or a common alias. */\n  name: _lib.customPropTypes.suggest(names)\n} : void 0;\n\nFlag.defaultProps = {\n  as: 'i'\n};\n\nFlag.create = (0, _lib.createShorthandFactory)(Flag, function (value) {\n  return { name: value };\n});\n\nexports.default = Flag;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Image/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Image = require('./Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Image2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/DropdownHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A dropdown menu can contain a header.\n */\nfunction DropdownHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(DropdownHeader, props);\n  var ElementType = (0, _lib.getElementType)(DropdownHeader, props);\n\n  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _Icon2.default.create(icon),\n    content\n  );\n}\n\nDropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nDropdownHeader._meta = {\n  name: 'DropdownHeader',\n  parent: 'Dropdown',\n  type: _lib.META.TYPES.MODULE\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DropdownHeader.propTypes = {\n  /** An element type to render as (string or function) */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nDropdownHeader.create = (0, _lib.createShorthandFactory)(DropdownHeader, function (content) {\n  return { content: content };\n});\n\nexports.default = DropdownHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Dropdown/DropdownMenu.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A dropdown menu can contain a menu.\n */\nfunction DropdownMenu(props) {\n  var children = props.children,\n      className = props.className,\n      scrolling = props.scrolling;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'menu transition', className);\n  var rest = (0, _lib.getUnhandledProps)(DropdownMenu, props);\n  var ElementType = (0, _lib.getElementType)(DropdownMenu, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nDropdownMenu.handledProps = ['as', 'children', 'className', 'scrolling'];\nDropdownMenu._meta = {\n  name: 'DropdownMenu',\n  parent: 'Dropdown',\n  type: _lib.META.TYPES.MODULE\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DropdownMenu.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A dropdown menu can scroll. */\n  scrolling: _propTypes2.default.bool\n} : void 0;\n\nexports.default = DropdownMenu;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/TextArea/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _TextArea = require('./TextArea');\n\nvar _TextArea2 = _interopRequireDefault(_TextArea);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _TextArea2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/addons/TextArea/TextArea.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\nvar TextArea = function (_Component) {\n  (0, _inherits3.default)(TextArea, _Component);\n\n  function TextArea() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, TextArea);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TextArea.__proto__ || Object.getPrototypeOf(TextArea)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e) {\n      var onChange = _this.props.onChange;\n\n      if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { value: e.target && e.target.value }));\n\n      _this.updateHeight(e.target);\n    }, _this.handleRef = function (c) {\n      return _this.ref = c;\n    }, _this.removeAutoHeightStyles = function () {\n      _this.ref.removeAttribute('rows');\n      _this.ref.style.height = null;\n      _this.ref.style.minHeight = null;\n      _this.ref.style.resize = null;\n    }, _this.updateHeight = function () {\n      if (!_this.ref) return;\n\n      var autoHeight = _this.props.autoHeight;\n\n      if (!autoHeight) return;\n\n      var _window$getComputedSt = window.getComputedStyle(_this.ref),\n          borderTopWidth = _window$getComputedSt.borderTopWidth,\n          borderBottomWidth = _window$getComputedSt.borderBottomWidth;\n\n      borderTopWidth = parseInt(borderTopWidth, 10);\n      borderBottomWidth = parseInt(borderBottomWidth, 10);\n\n      _this.ref.rows = '1';\n      _this.ref.style.minHeight = '0';\n      _this.ref.style.resize = 'none';\n      _this.ref.style.height = 'auto';\n      _this.ref.style.height = _this.ref.scrollHeight + borderTopWidth + borderBottomWidth + 'px';\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(TextArea, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.updateHeight();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      // removed autoHeight\n      if (!this.props.autoHeight && prevProps.autoHeight) {\n        this.removeAutoHeightStyles();\n      }\n      // added autoHeight or value changed\n      if (this.props.autoHeight && !prevProps.autoHeight || prevProps.value !== this.props.value) {\n        this.updateHeight();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var value = this.props.value;\n\n      var rest = (0, _lib.getUnhandledProps)(TextArea, this.props);\n      var ElementType = (0, _lib.getElementType)(TextArea, this.props);\n\n      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { onChange: this.handleChange, ref: this.handleRef, value: value }));\n    }\n  }]);\n  return TextArea;\n}(_react.Component);\n\nTextArea._meta = {\n  name: 'TextArea',\n  type: _lib.META.TYPES.ADDON\n};\nTextArea.defaultProps = {\n  as: 'textarea'\n};\nprocess.env.NODE_ENV !== \"production\" ? TextArea.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Indicates whether height of the textarea fits the content or not. */\n  autoHeight: _propTypes2.default.bool,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: _propTypes2.default.func,\n\n  /** The value of the textarea. */\n  value: _propTypes2.default.string\n} : void 0;\nTextArea.handledProps = ['as', 'autoHeight', 'onChange', 'value'];\nexports.default = TextArea;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Breadcrumb/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Breadcrumb = require('./Breadcrumb');\n\nvar _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Breadcrumb2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Breadcrumb/Breadcrumb.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _BreadcrumbDivider = require('./BreadcrumbDivider');\n\nvar _BreadcrumbDivider2 = _interopRequireDefault(_BreadcrumbDivider);\n\nvar _BreadcrumbSection = require('./BreadcrumbSection');\n\nvar _BreadcrumbSection2 = _interopRequireDefault(_BreadcrumbSection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\nfunction Breadcrumb(props) {\n  var children = props.children,\n      className = props.className,\n      divider = props.divider,\n      icon = props.icon,\n      sections = props.sections,\n      size = props.size;\n\n\n  var classes = (0, _classnames2.default)('ui', size, 'breadcrumb', className);\n  var rest = (0, _lib.getUnhandledProps)(Breadcrumb, props);\n  var ElementType = (0, _lib.getElementType)(Breadcrumb, props);\n\n  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n\n  var childElements = [];\n\n  (0, _each3.default)(sections, function (section, index) {\n    // section\n    var breadcrumbElement = _BreadcrumbSection2.default.create(section);\n    childElements.push(breadcrumbElement);\n\n    // divider\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + '_divider' || JSON.stringify(section);\n      childElements.push(_BreadcrumbDivider2.default.create({ content: divider, icon: icon, key: key }));\n    }\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    childElements\n  );\n}\n\nBreadcrumb.handledProps = ['as', 'children', 'className', 'divider', 'icon', 'sections', 'size'];\nBreadcrumb._meta = {\n  name: 'Breadcrumb',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumb.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.contentShorthand]),\n\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['divider']), _lib.customPropTypes.itemShorthand]),\n\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: _lib.customPropTypes.collectionShorthand,\n\n  /** Size of Breadcrumb. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : void 0;\n\nBreadcrumb.Divider = _BreadcrumbDivider2.default;\nBreadcrumb.Section = _BreadcrumbSection2.default;\n\nexports.default = Breadcrumb;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Breadcrumb/BreadcrumbDivider.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A divider sub-component for Breadcrumb component.\n */\nfunction BreadcrumbDivider(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n\n\n  var classes = (0, _classnames2.default)('divider', className);\n  var rest = (0, _lib.getUnhandledProps)(BreadcrumbDivider, props);\n  var ElementType = (0, _lib.getElementType)(BreadcrumbDivider, props);\n\n  if (!(0, _isNil3.default)(icon)) return _Icon2.default.create(icon, { defaultProps: (0, _extends3.default)({}, rest, { className: classes }) });\n  if (!(0, _isNil3.default)(content)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content\n  );\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? '/' : children\n  );\n}\n\nBreadcrumbDivider.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nBreadcrumbDivider._meta = {\n  name: 'BreadcrumbDivider',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Breadcrumb'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbDivider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Render as an `Icon` component with `divider` class instead of a `div`. */\n  icon: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nBreadcrumbDivider.create = (0, _lib.createShorthandFactory)(BreadcrumbDivider, function (icon) {\n  return { icon: icon };\n});\n\nexports.default = BreadcrumbDivider;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Breadcrumb/BreadcrumbSection.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A section sub-component for Breadcrumb component.\n */\nvar BreadcrumbSection = function (_Component) {\n  (0, _inherits3.default)(BreadcrumbSection, _Component);\n\n  function BreadcrumbSection() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, BreadcrumbSection);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = BreadcrumbSection.__proto__ || Object.getPrototypeOf(BreadcrumbSection)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(BreadcrumbSection, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          content = _props.content,\n          href = _props.href,\n          link = _props.link,\n          onClick = _props.onClick;\n\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'section', className);\n      var rest = (0, _lib.getUnhandledProps)(BreadcrumbSection, this.props);\n      var ElementType = (0, _lib.getElementType)(BreadcrumbSection, this.props, function () {\n        if (link || onClick) return 'a';\n      });\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),\n        (0, _isNil3.default)(children) ? content : children\n      );\n    }\n  }]);\n  return BreadcrumbSection;\n}(_react.Component);\n\nBreadcrumbSection._meta = {\n  name: 'BreadcrumbSection',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Breadcrumb'\n};\nexports.default = BreadcrumbSection;\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbSection.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Style as the currently active section. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['link']), _propTypes2.default.string]),\n\n  /** Render as an `a` tag instead of a `div`. */\n  link: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['href']), _propTypes2.default.bool]),\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func\n} : void 0;\nBreadcrumbSection.handledProps = ['active', 'as', 'children', 'className', 'content', 'href', 'link', 'onClick'];\n\n\nBreadcrumbSection.create = (0, _lib.createShorthandFactory)(BreadcrumbSection, function (content) {\n  return { content: content, link: true };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Form = require('./Form');\n\nvar _Form2 = _interopRequireDefault(_Form);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Form2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/Form.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FormButton = require('./FormButton');\n\nvar _FormButton2 = _interopRequireDefault(_FormButton);\n\nvar _FormCheckbox = require('./FormCheckbox');\n\nvar _FormCheckbox2 = _interopRequireDefault(_FormCheckbox);\n\nvar _FormDropdown = require('./FormDropdown');\n\nvar _FormDropdown2 = _interopRequireDefault(_FormDropdown);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nvar _FormGroup = require('./FormGroup');\n\nvar _FormGroup2 = _interopRequireDefault(_FormGroup);\n\nvar _FormInput = require('./FormInput');\n\nvar _FormInput2 = _interopRequireDefault(_FormInput);\n\nvar _FormRadio = require('./FormRadio');\n\nvar _FormRadio2 = _interopRequireDefault(_FormRadio);\n\nvar _FormSelect = require('./FormSelect');\n\nvar _FormSelect2 = _interopRequireDefault(_FormSelect);\n\nvar _FormTextArea = require('./FormTextArea');\n\nvar _FormTextArea2 = _interopRequireDefault(_FormTextArea);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see TextArea\n */\nfunction Form(props) {\n  var children = props.children,\n      className = props.className,\n      error = props.error,\n      inverted = props.inverted,\n      loading = props.loading,\n      reply = props.reply,\n      size = props.size,\n      success = props.success,\n      warning = props.warning,\n      widths = props.widths;\n\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(reply, 'reply'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useWidthProp)(widths, null, true), 'form', className);\n  var rest = (0, _lib.getUnhandledProps)(Form, props);\n  var ElementType = (0, _lib.getElementType)(Form, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nForm.handledProps = ['as', 'children', 'className', 'error', 'inverted', 'loading', 'reply', 'size', 'success', 'warning', 'widths'];\nprocess.env.NODE_ENV !== \"production\" ? Form.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Automatically show any error Message children. */\n  error: _propTypes2.default.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: _propTypes2.default.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: _propTypes2.default.bool,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: _propTypes2.default.bool,\n\n  /** A form can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: _propTypes2.default.bool,\n\n  /** Automatically show any warning Message children .*/\n  warning: _propTypes2.default.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: _propTypes2.default.oneOf(['equal'])\n} : void 0;\n\nForm.defaultProps = {\n  as: 'form'\n};\n\nForm._meta = {\n  name: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nForm.Field = _FormField2.default;\nForm.Button = _FormButton2.default;\nForm.Checkbox = _FormCheckbox2.default;\nForm.Dropdown = _FormDropdown2.default;\nForm.Group = _FormGroup2.default;\nForm.Input = _FormInput2.default;\nForm.Radio = _FormRadio2.default;\nForm.Select = _FormSelect2.default;\nForm.TextArea = _FormTextArea2.default;\n\nexports.default = Form;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormButton.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Button = require('../../elements/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\nfunction FormButton(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormButton, props);\n  var ElementType = (0, _lib.getElementType)(FormButton, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormButton.handledProps = ['as', 'control'];\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormButton.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormButton.defaultProps = {\n  as: _FormField2.default,\n  control: _Button2.default\n};\n\nexports.default = FormButton;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormField.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Checkbox = require('../../modules/Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nvar _Radio = require('../../addons/Radio');\n\nvar _Radio2 = _interopRequireDefault(_Radio);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see TextArea\n */\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(required, 'required'), (0, _lib.useWidthProp)(width, 'wide'), 'field', className);\n  var rest = (0, _lib.getUnhandledProps)(FormField, props);\n  var ElementType = (0, _lib.getElementType)(FormField, props);\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if ((0, _isNil3.default)(control)) {\n    if ((0, _isNil3.default)(label)) return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      (0, _lib.createHTMLLabel)(label)\n    );\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  var controlProps = (0, _extends3.default)({}, rest, { children: children, required: required, type: type });\n\n  // wrap HTML checkboxes/radios in the label\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return _react2.default.createElement(\n      ElementType,\n      { className: classes },\n      _react2.default.createElement(\n        'label',\n        null,\n        (0, _react.createElement)(control, controlProps),\n        ' ',\n        label\n      )\n    );\n  }\n\n  // pass label prop to controls that support it\n  if (control === _Checkbox2.default || control === _Radio2.default) {\n    return _react2.default.createElement(\n      ElementType,\n      { className: classes },\n      (0, _react.createElement)(control, (0, _extends3.default)({}, controlProps, { label: label }))\n    );\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return _react2.default.createElement(\n    ElementType,\n    { className: classes },\n    (0, _lib.createHTMLLabel)(label),\n    (0, _react.createElement)(control, controlProps)\n  );\n}\n\nFormField.handledProps = ['as', 'children', 'className', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];\nFormField._meta = {\n  name: 'FormField',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormField.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: _lib.customPropTypes.some([_propTypes2.default.func, _propTypes2.default.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** Individual fields may display an error state. */\n  error: _propTypes2.default.bool,\n\n  /** A field can have its label next to instead of above it. */\n  inline: _propTypes2.default.bool,\n\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n  /** Mutually exclusive with children. */\n  label: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),\n\n  /** A field can show that input is mandatory. */\n  required: _propTypes2.default.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: _lib.customPropTypes.every([_lib.customPropTypes.demand(['control'])]),\n\n  /** A field can specify its width in grid columns */\n  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\n\nexports.default = FormField;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormCheckbox.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Checkbox = require('../../modules/Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\nfunction FormCheckbox(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormCheckbox, props);\n  var ElementType = (0, _lib.getElementType)(FormCheckbox, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormCheckbox.handledProps = ['as', 'control'];\nFormCheckbox._meta = {\n  name: 'FormCheckbox',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormCheckbox.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormCheckbox.defaultProps = {\n  as: _FormField2.default,\n  control: _Checkbox2.default\n};\n\nexports.default = FormCheckbox;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormDropdown.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Dropdown = require('../../modules/Dropdown');\n\nvar _Dropdown2 = _interopRequireDefault(_Dropdown);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\nfunction FormDropdown(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormDropdown, props);\n  var ElementType = (0, _lib.getElementType)(FormDropdown, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormDropdown.handledProps = ['as', 'control'];\nFormDropdown._meta = {\n  name: 'FormDropdown',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormDropdown.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormDropdown.defaultProps = {\n  as: _FormField2.default,\n  control: _Dropdown2.default\n};\n\nexports.default = FormDropdown;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\nfunction FormGroup(props) {\n  var children = props.children,\n      className = props.className,\n      grouped = props.grouped,\n      inline = props.inline,\n      widths = props.widths;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(grouped, 'grouped'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useWidthProp)(widths, null, true), 'fields', className);\n  var rest = (0, _lib.getUnhandledProps)(FormGroup, props);\n  var ElementType = (0, _lib.getElementType)(FormGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nFormGroup.handledProps = ['as', 'children', 'className', 'grouped', 'inline', 'widths'];\nFormGroup._meta = {\n  name: 'FormGroup',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Fields can show related choices. */\n  grouped: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['inline']), _propTypes2.default.bool]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['grouped']), _propTypes2.default.bool]),\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal']))\n} : void 0;\n\nexports.default = FormGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormInput.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Input = require('../../elements/Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\nfunction FormInput(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormInput, props);\n  var ElementType = (0, _lib.getElementType)(FormInput, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormInput.handledProps = ['as', 'control'];\nFormInput._meta = {\n  name: 'FormInput',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormInput.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormInput.defaultProps = {\n  as: _FormField2.default,\n  control: _Input2.default\n};\n\nexports.default = FormInput;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Input/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Input = require('./Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Input2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Input/Input.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Button = require('../../elements/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Label = require('../../elements/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\nvar Input = function (_Component) {\n  (0, _inherits3.default)(Input, _Component);\n\n  function Input() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Input);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _this.focus = function () {\n      return _this.inputRef.focus();\n    }, _this.handleChange = function (e) {\n      var onChange = _this.props.onChange;\n\n      var value = (0, _get3.default)(e, 'target.value');\n\n      onChange(e, (0, _extends3.default)({}, _this.props, { value: value }));\n    }, _this.handleChildOverrides = function (child, defaultProps) {\n      return (0, _extends3.default)({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          (0, _invoke3.default)(child, 'ref', c);\n          _this.handleInputRef(c);\n        }\n      });\n    }, _this.handleInputRef = function (c) {\n      return _this.inputRef = c;\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Input, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          action = _props.action,\n          actionPosition = _props.actionPosition,\n          children = _props.children,\n          className = _props.className,\n          disabled = _props.disabled,\n          error = _props.error,\n          fluid = _props.fluid,\n          focus = _props.focus,\n          icon = _props.icon,\n          iconPosition = _props.iconPosition,\n          input = _props.input,\n          inverted = _props.inverted,\n          label = _props.label,\n          labelPosition = _props.labelPosition,\n          loading = _props.loading,\n          onChange = _props.onChange,\n          size = _props.size,\n          tabIndex = _props.tabIndex,\n          transparent = _props.transparent,\n          type = _props.type;\n\n\n      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(transparent, 'transparent'), (0, _lib.useValueAndKey)(actionPosition, 'action') || (0, _lib.useKeyOnly)(action, 'action'), (0, _lib.useValueAndKey)(iconPosition, 'icon') || (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useValueAndKey)(labelPosition, 'labeled') || (0, _lib.useKeyOnly)(label, 'labeled'), 'input', className);\n      var unhandled = (0, _lib.getUnhandledProps)(Input, this.props);\n      var ElementType = (0, _lib.getElementType)(Input, this.props);\n\n      // Heads up! We should pass `type` prop manually because `Input` component handles it\n\n      var _partitionHTMLInputPr = (0, _lib.partitionHTMLInputProps)((0, _extends3.default)({}, unhandled, { type: type })),\n          _partitionHTMLInputPr2 = (0, _slicedToArray3.default)(_partitionHTMLInputPr, 2),\n          htmlInputProps = _partitionHTMLInputPr2[0],\n          rest = _partitionHTMLInputPr2[1];\n\n      if (onChange) htmlInputProps.onChange = this.handleChange;\n      htmlInputProps.ref = this.handleInputRef;\n\n      // tabIndex\n      if (!(0, _isNil3.default)(tabIndex)) htmlInputProps.tabIndex = tabIndex;else if (disabled) htmlInputProps.tabIndex = -1;\n\n      // Render with children\n      // ----------------------------------------\n      if (!(0, _isNil3.default)(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = (0, _map3.default)(_react.Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n\n          return (0, _react.cloneElement)(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes }),\n          childElements\n        );\n      }\n\n      // Render Shorthand\n      // ----------------------------------------\n      var actionElement = _Button2.default.create(action, { defaultProps: { className: 'button' } });\n      var iconElement = _Icon2.default.create(icon);\n      var labelElement = _Label2.default.create(label, { defaultProps: {\n          className: (0, _classnames2.default)('label',\n          // add 'left|right corner'\n          (0, _includes3.default)(labelPosition, 'corner') && labelPosition)\n        } });\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        actionPosition === 'left' && actionElement,\n        iconPosition === 'left' && iconElement,\n        labelPosition !== 'right' && labelElement,\n        (0, _lib.createHTMLInput)(input || type, { defaultProps: htmlInputProps }),\n        actionPosition !== 'left' && actionElement,\n        iconPosition !== 'left' && iconElement,\n        labelPosition === 'right' && labelElement\n      );\n    }\n  }]);\n  return Input;\n}(_react.Component);\n\nInput.defaultProps = {\n  type: 'text'\n};\nInput._meta = {\n  name: 'Input',\n  type: _lib.META.TYPES.ELEMENT\n};\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: _propTypes2.default.oneOf(['left']),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: _propTypes2.default.bool,\n\n  /** Take on the size of it's container. */\n  fluid: _propTypes2.default.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: _propTypes2.default.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: _propTypes2.default.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: _lib.customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: _propTypes2.default.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: _propTypes2.default.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onChange: _propTypes2.default.func,\n\n  /** An Input can vary in size. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** An Input can receive focus. */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** Transparent Input has no background. */\n  transparent: _propTypes2.default.bool,\n\n  /** The HTML input type. */\n  type: _propTypes2.default.string\n} : void 0;\nInput.handledProps = ['action', 'actionPosition', 'as', 'children', 'className', 'disabled', 'error', 'fluid', 'focus', 'icon', 'iconPosition', 'input', 'inverted', 'label', 'labelPosition', 'loading', 'onChange', 'size', 'tabIndex', 'transparent', 'type'];\n\n\nInput.create = (0, _lib.createShorthandFactory)(Input, function (type) {\n  return { type: type };\n});\n\nexports.default = Input;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormRadio.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Radio = require('../../addons/Radio');\n\nvar _Radio2 = _interopRequireDefault(_Radio);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Radio} />.\n * @see Form\n * @see Radio\n */\nfunction FormRadio(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormRadio, props);\n  var ElementType = (0, _lib.getElementType)(FormRadio, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormRadio.handledProps = ['as', 'control'];\nFormRadio._meta = {\n  name: 'FormRadio',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormRadio.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormRadio.defaultProps = {\n  as: _FormField2.default,\n  control: _Radio2.default\n};\n\nexports.default = FormRadio;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormSelect.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Select = require('../../addons/Select');\n\nvar _Select2 = _interopRequireDefault(_Select);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\nfunction FormSelect(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormSelect, props);\n  var ElementType = (0, _lib.getElementType)(FormSelect, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormSelect.handledProps = ['as', 'control'];\nFormSelect._meta = {\n  name: 'FormSelect',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormSelect.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormSelect.defaultProps = {\n  as: _FormField2.default,\n  control: _Select2.default\n};\n\nexports.default = FormSelect;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Form/FormTextArea.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TextArea = require('../../addons/TextArea');\n\nvar _TextArea2 = _interopRequireDefault(_TextArea);\n\nvar _FormField = require('./FormField');\n\nvar _FormField2 = _interopRequireDefault(_FormField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Sugar for <Form.Field control={TextArea} />.\n * @see Form\n * @see TextArea\n */\nfunction FormTextArea(props) {\n  var control = props.control;\n\n  var rest = (0, _lib.getUnhandledProps)(FormTextArea, props);\n  var ElementType = (0, _lib.getElementType)(FormTextArea, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));\n}\n\nFormTextArea.handledProps = ['as', 'control'];\nFormTextArea._meta = {\n  name: 'FormTextArea',\n  parent: 'Form',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FormTextArea.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: _FormField2.default.propTypes.control\n} : void 0;\n\nFormTextArea.defaultProps = {\n  as: _FormField2.default,\n  control: _TextArea2.default\n};\n\nexports.default = FormTextArea;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Grid/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Grid = require('./Grid');\n\nvar _Grid2 = _interopRequireDefault(_Grid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Grid2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Grid/Grid.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _GridColumn = require('./GridColumn');\n\nvar _GridColumn2 = _interopRequireDefault(_GridColumn);\n\nvar _GridRow = require('./GridRow');\n\nvar _GridRow2 = _interopRequireDefault(_GridRow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A grid is used to harmonize negative space in a layout.\n */\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(container, 'container'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useKeyOrValueAndKey)(celled, 'celled'), (0, _lib.useKeyOrValueAndKey)(divided, 'divided'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'grid', className);\n  var rest = (0, _lib.getUnhandledProps)(Grid, props);\n  var ElementType = (0, _lib.getElementType)(Grid, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nGrid.handledProps = ['as', 'celled', 'centered', 'children', 'className', 'columns', 'container', 'divided', 'doubling', 'padded', 'relaxed', 'reversed', 'stackable', 'stretched', 'textAlign', 'verticalAlign'];\nGrid.Column = _GridColumn2.default;\nGrid.Row = _GridRow2.default;\n\nGrid._meta = {\n  name: 'Grid',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Represents column count per row in Grid. */\n  columns: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: _propTypes2.default.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: _propTypes2.default.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: _propTypes2.default.oneOf(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: _propTypes2.default.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: _propTypes2.default.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nexports.default = Grid;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Grid/GridColumn.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A column sub-component for Grid.\n */\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n\n\n  var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useOnlyProp)(only, 'only'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(computer, 'wide computer'), (0, _lib.useWidthProp)(largeScreen, 'wide large screen'), (0, _lib.useWidthProp)(mobile, 'wide mobile'), (0, _lib.useWidthProp)(tablet, 'wide tablet'), (0, _lib.useWidthProp)(widescreen, 'wide widescreen'), (0, _lib.useWidthProp)(width, 'wide'), 'column', className);\n  var rest = (0, _lib.getUnhandledProps)(GridColumn, props);\n  var ElementType = (0, _lib.getElementType)(GridColumn, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nGridColumn.handledProps = ['as', 'children', 'className', 'color', 'computer', 'floated', 'largeScreen', 'mobile', 'only', 'stretched', 'tablet', 'textAlign', 'verticalAlign', 'widescreen', 'width'];\nGridColumn._meta = {\n  name: 'GridColumn',\n  parent: 'Grid',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumn.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A grid column can be colored. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: _lib.customPropTypes.onlyProp(_lib.SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: _propTypes2.default.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\n\nexports.default = GridColumn;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Grid/GridRow.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A row sub-component for Grid.\n */\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useOnlyProp)(only), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'row', className);\n  var rest = (0, _lib.getUnhandledProps)(GridRow, props);\n  var ElementType = (0, _lib.getElementType)(GridRow, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nGridRow.handledProps = ['as', 'centered', 'children', 'className', 'color', 'columns', 'divided', 'only', 'reversed', 'stretched', 'textAlign', 'verticalAlign'];\nGridRow._meta = {\n  name: 'GridRow',\n  parent: 'Grid',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A grid row can be colored. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: _propTypes2.default.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: _lib.customPropTypes.onlyProp(_lib.SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: _propTypes2.default.oneOf(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: _propTypes2.default.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nexports.default = GridRow;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Menu/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Menu = require('./Menu');\n\nvar _Menu2 = _interopRequireDefault(_Menu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Menu2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Menu/Menu.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _MenuHeader = require('./MenuHeader');\n\nvar _MenuHeader2 = _interopRequireDefault(_MenuHeader);\n\nvar _MenuItem = require('./MenuItem');\n\nvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\nvar _MenuMenu = require('./MenuMenu');\n\nvar _MenuMenu2 = _interopRequireDefault(_MenuMenu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A menu displays grouped navigation actions.\n * @see Dropdown\n */\nvar Menu = function (_Component) {\n  (0, _inherits3.default)(Menu, _Component);\n\n  function Menu() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Menu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          var index = itemProps.index;\n\n\n          _this.trySetState({ activeIndex: index });\n\n          (0, _invoke3.default)(predefinedProps, 'onClick', e, itemProps);\n          (0, _invoke3.default)(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Menu, [{\n    key: 'renderItems',\n    value: function renderItems() {\n      var _this2 = this;\n\n      var items = this.props.items;\n      var activeIndex = this.state.activeIndex;\n\n\n      return (0, _map3.default)(items, function (item, index) {\n        return _MenuItem2.default.create(item, {\n          defaultProps: {\n            active: activeIndex === index,\n            index: index\n          },\n          overrideProps: _this2.handleItemOverrides\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          attached = _props.attached,\n          borderless = _props.borderless,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          fixed = _props.fixed,\n          floated = _props.floated,\n          fluid = _props.fluid,\n          icon = _props.icon,\n          inverted = _props.inverted,\n          pagination = _props.pagination,\n          pointing = _props.pointing,\n          secondary = _props.secondary,\n          size = _props.size,\n          stackable = _props.stackable,\n          tabular = _props.tabular,\n          text = _props.text,\n          vertical = _props.vertical,\n          widths = _props.widths;\n\n      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(borderless, 'borderless'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(pagination, 'pagination'), (0, _lib.useKeyOnly)(pointing, 'pointing'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(floated, 'floated'), (0, _lib.useKeyOrValueAndKey)(icon, 'icon'), (0, _lib.useKeyOrValueAndKey)(tabular, 'tabular'), (0, _lib.useValueAndKey)(fixed, 'fixed'), (0, _lib.useWidthProp)(widths, 'item'), className, 'menu');\n      var rest = (0, _lib.getUnhandledProps)(Menu, this.props);\n      var ElementType = (0, _lib.getElementType)(Menu, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        (0, _isNil3.default)(children) ? this.renderItems() : children\n      );\n    }\n  }]);\n  return Menu;\n}(_lib.AutoControlledComponent);\n\nMenu._meta = {\n  name: 'Menu',\n  type: _lib.META.TYPES.COLLECTION\n};\nMenu.autoControlledProps = ['activeIndex'];\nMenu.Header = _MenuHeader2.default;\nMenu.Item = _MenuItem2.default;\nMenu.Menu = _MenuMenu2.default;\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Index of the currently active item. */\n  activeIndex: _propTypes2.default.number,\n\n  /** A menu may be attached to other content segments. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),\n\n  /** A menu item or menu can have no borders. */\n  borderless: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Additional colors can be specified. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A menu can take up only the space necessary to fit its content. */\n  compact: _propTypes2.default.bool,\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex: _propTypes2.default.number,\n\n  /** A menu can be fixed to a side of its context. */\n  fixed: _propTypes2.default.oneOf(['left', 'right', 'bottom', 'top']),\n\n  /** A menu can be floated. */\n  floated: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),\n\n  /** A vertical menu may take the size of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** A menu may have just icons (bool) or labeled icons. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['labeled'])]),\n\n  /** A menu may have its colors inverted to show greater contrast. */\n  inverted: _propTypes2.default.bool,\n\n  /** Shorthand array of props for Menu. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /**\n   * onClick handler for MenuItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.func]),\n\n  /** A pagination menu is specially formatted to present links to pages of content. */\n  pagination: _propTypes2.default.bool,\n\n  /** A menu can point to show its relationship to nearby content. */\n  pointing: _propTypes2.default.bool,\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  secondary: _propTypes2.default.bool,\n\n  /** A menu can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big')),\n\n  /** A menu can stack at mobile resolutions. */\n  stackable: _propTypes2.default.bool,\n\n  /** A menu can be formatted to show tabs of information. */\n  tabular: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),\n\n  /** A menu can be formatted for text content. */\n  text: _propTypes2.default.bool,\n\n  /** A vertical menu displays elements vertically. */\n  vertical: _propTypes2.default.bool,\n\n  /** A menu can have its items divided evenly. */\n  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\nMenu.handledProps = ['activeIndex', 'as', 'attached', 'borderless', 'children', 'className', 'color', 'compact', 'defaultActiveIndex', 'fixed', 'floated', 'fluid', 'icon', 'inverted', 'items', 'onItemClick', 'pagination', 'pointing', 'secondary', 'size', 'stackable', 'tabular', 'text', 'vertical', 'widths'];\nexports.default = Menu;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Menu/MenuHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A menu item may include a header or may itself be a header.\n */\nfunction MenuHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(MenuHeader, props);\n  var ElementType = (0, _lib.getElementType)(MenuHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nMenuHeader.handledProps = ['as', 'children', 'className', 'content'];\nMenuHeader._meta = {\n  name: 'MenuHeader',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Menu'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MenuHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = MenuHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Menu/MenuItem.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _startCase2 = require('lodash/startCase');\n\nvar _startCase3 = _interopRequireDefault(_startCase2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A menu can contain an item.\n */\nvar MenuItem = function (_Component) {\n  (0, _inherits3.default)(MenuItem, _Component);\n\n  function MenuItem() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, MenuItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(MenuItem, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          content = _props.content,\n          disabled = _props.disabled,\n          fitted = _props.fitted,\n          header = _props.header,\n          icon = _props.icon,\n          link = _props.link,\n          name = _props.name,\n          onClick = _props.onClick,\n          position = _props.position;\n\n\n      var classes = (0, _classnames2.default)(color, position, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(icon === true || icon && !(name || content), 'icon'), (0, _lib.useKeyOnly)(header, 'header'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(fitted, 'fitted'), 'item', className);\n      var ElementType = (0, _lib.getElementType)(MenuItem, this.props, function () {\n        if (onClick) return 'a';\n      });\n      var rest = (0, _lib.getUnhandledProps)(MenuItem, this.props);\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n        _Icon2.default.create(icon),\n        content || (0, _startCase3.default)(name)\n      );\n    }\n  }]);\n  return MenuItem;\n}(_react.Component);\n\nMenuItem._meta = {\n  name: 'MenuItem',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Menu'\n};\nexports.default = MenuItem;\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A menu item can be active. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Additional colors can be specified. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A menu item can be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** A menu item or menu can remove element padding, vertically or horizontally. */\n  fitted: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['horizontally', 'vertically'])]),\n\n  /** A menu item may include a header or may itself be a header. */\n  header: _propTypes2.default.bool,\n\n  /** MenuItem can be only icon. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),\n\n  /** MenuItem index inside Menu. */\n  index: _propTypes2.default.number,\n\n  /** A menu item can be link. */\n  link: _propTypes2.default.bool,\n\n  /** Internal name of the MenuItem. */\n  name: _propTypes2.default.string,\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A menu item can take right position. */\n  position: _propTypes2.default.oneOf(['right'])\n} : void 0;\nMenuItem.handledProps = ['active', 'as', 'children', 'className', 'color', 'content', 'disabled', 'fitted', 'header', 'icon', 'index', 'link', 'name', 'onClick', 'position'];\n\n\nMenuItem.create = (0, _lib.createShorthandFactory)(MenuItem, function (val) {\n  return { content: val, name: val };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Menu/MenuMenu.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A menu can contain a sub menu.\n */\nfunction MenuMenu(props) {\n  var children = props.children,\n      className = props.className,\n      position = props.position;\n\n\n  var classes = (0, _classnames2.default)(position, 'menu', className);\n  var rest = (0, _lib.getUnhandledProps)(MenuMenu, props);\n  var ElementType = (0, _lib.getElementType)(MenuMenu, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nMenuMenu.handledProps = ['as', 'children', 'className', 'position'];\nMenuMenu._meta = {\n  name: 'MenuMenu',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Menu'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MenuMenu.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A sub menu can take right position. */\n  position: _propTypes2.default.oneOf(['right'])\n} : void 0;\n\nexports.default = MenuMenu;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Message = require('./Message');\n\nvar _Message2 = _interopRequireDefault(_Message);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Message2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/Message.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _MessageContent = require('./MessageContent');\n\nvar _MessageContent2 = _interopRequireDefault(_MessageContent);\n\nvar _MessageHeader = require('./MessageHeader');\n\nvar _MessageHeader2 = _interopRequireDefault(_MessageHeader);\n\nvar _MessageList = require('./MessageList');\n\nvar _MessageList2 = _interopRequireDefault(_MessageList);\n\nvar _MessageItem = require('./MessageItem');\n\nvar _MessageItem2 = _interopRequireDefault(_MessageItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\nvar Message = function (_Component) {\n  (0, _inherits3.default)(Message, _Component);\n\n  function Message() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Message);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.handleDismiss = function (e) {\n      var onDismiss = _this.props.onDismiss;\n\n\n      if (onDismiss) onDismiss(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Message, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          attached = _props.attached,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          error = _props.error,\n          floating = _props.floating,\n          header = _props.header,\n          hidden = _props.hidden,\n          icon = _props.icon,\n          info = _props.info,\n          list = _props.list,\n          negative = _props.negative,\n          onDismiss = _props.onDismiss,\n          positive = _props.positive,\n          size = _props.size,\n          success = _props.success,\n          visible = _props.visible,\n          warning = _props.warning;\n\n\n      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(info, 'info'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), 'message', className);\n\n      var dismissIcon = onDismiss && _react2.default.createElement(_Icon2.default, { name: 'close', onClick: this.handleDismiss });\n      var rest = (0, _lib.getUnhandledProps)(Message, this.props);\n      var ElementType = (0, _lib.getElementType)(Message, this.props);\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes }),\n          dismissIcon,\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        dismissIcon,\n        _Icon2.default.create(icon),\n        (!(0, _isNil3.default)(header) || !(0, _isNil3.default)(content) || !(0, _isNil3.default)(list)) && _react2.default.createElement(\n          _MessageContent2.default,\n          null,\n          _MessageHeader2.default.create(header),\n          _MessageList2.default.create(list),\n          (0, _lib.createHTMLParagraph)(content)\n        )\n      );\n    }\n  }]);\n  return Message;\n}(_react.Component);\n\nMessage._meta = {\n  name: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\nMessage.Content = _MessageContent2.default;\nMessage.Header = _MessageHeader2.default;\nMessage.List = _MessageList2.default;\nMessage.Item = _MessageItem2.default;\nexports.default = Message;\nprocess.env.NODE_ENV !== \"production\" ? Message.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['bottom'])]),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A message can be formatted to be different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: _propTypes2.default.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: _propTypes2.default.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: _propTypes2.default.bool,\n\n  /** A message can contain an icon. */\n  icon: _propTypes2.default.oneOfType([_lib.customPropTypes.itemShorthand, _propTypes2.default.bool]),\n\n  /** A message may be formatted to display information. */\n  info: _propTypes2.default.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: _lib.customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: _propTypes2.default.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: _propTypes2.default.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: _propTypes2.default.bool,\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: _propTypes2.default.bool,\n\n  /** A message can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: _propTypes2.default.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: _propTypes2.default.bool\n} : void 0;\nMessage.handledProps = ['as', 'attached', 'children', 'className', 'color', 'compact', 'content', 'error', 'floating', 'header', 'hidden', 'icon', 'info', 'list', 'negative', 'onDismiss', 'positive', 'size', 'success', 'visible', 'warning'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/MessageContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A message can contain a content.\n */\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(MessageContent, props);\n  var ElementType = (0, _lib.getElementType)(MessageContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nMessageContent.handledProps = ['as', 'children', 'className'];\nMessageContent._meta = {\n  name: 'MessageContent',\n  parent: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MessageContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = MessageContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/MessageHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A message can contain a header.\n */\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(MessageHeader, props);\n  var ElementType = (0, _lib.getElementType)(MessageHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nMessageHeader.handledProps = ['as', 'children', 'className', 'content'];\nMessageHeader._meta = {\n  name: 'MessageHeader',\n  parent: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MessageHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nMessageHeader.create = (0, _lib.createShorthandFactory)(MessageHeader, function (val) {\n  return { content: val };\n});\n\nexports.default = MessageHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/MessageList.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _MessageItem = require('./MessageItem');\n\nvar _MessageItem2 = _interopRequireDefault(_MessageItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A message can contain a list of items.\n */\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n\n  var classes = (0, _classnames2.default)('list', className);\n  var rest = (0, _lib.getUnhandledProps)(MessageList, props);\n  var ElementType = (0, _lib.getElementType)(MessageList, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? (0, _map3.default)(items, _MessageItem2.default.create) : children\n  );\n}\n\nMessageList.handledProps = ['as', 'children', 'className', 'items'];\nMessageList._meta = {\n  name: 'MessageList',\n  parent: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MessageList.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand Message.Items. */\n  items: _lib.customPropTypes.collectionShorthand\n} : void 0;\n\nMessageList.defaultProps = {\n  as: 'ul'\n};\n\nMessageList.create = (0, _lib.createShorthandFactory)(MessageList, function (val) {\n  return { items: val };\n});\n\nexports.default = MessageList;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Message/MessageItem.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A message list can contain an item.\n */\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(MessageItem, props);\n  var ElementType = (0, _lib.getElementType)(MessageItem, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nMessageItem.handledProps = ['as', 'children', 'className', 'content'];\nMessageItem._meta = {\n  name: 'MessageItem',\n  parent: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MessageItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nMessageItem.defaultProps = {\n  as: 'li'\n};\n\nMessageItem.create = (0, _lib.createShorthandFactory)(MessageItem, function (content) {\n  return { content: content };\n});\n\nexports.default = MessageItem;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Table = require('./Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Table2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/Table.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TableBody = require('./TableBody');\n\nvar _TableBody2 = _interopRequireDefault(_TableBody);\n\nvar _TableCell = require('./TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('./TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TableHeader = require('./TableHeader');\n\nvar _TableHeader2 = _interopRequireDefault(_TableHeader);\n\nvar _TableHeaderCell = require('./TableHeaderCell');\n\nvar _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);\n\nvar _TableRow = require('./TableRow');\n\nvar _TableRow2 = _interopRequireDefault(_TableRow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table displays a collections of data grouped into rows.\n */\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(definition, 'definition'), (0, _lib.useKeyOnly)(fixed, 'fixed'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(sortable, 'sortable'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(striped, 'striped'), (0, _lib.useKeyOnly)(structured, 'structured'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(basic, 'basic'), (0, _lib.useKeyOrValueAndKey)(compact, 'compact'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column'), 'table', className);\n  var rest = (0, _lib.getUnhandledProps)(Table, props);\n  var ElementType = (0, _lib.getElementType)(Table, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    headerRow && _react2.default.createElement(\n      _TableHeader2.default,\n      null,\n      _TableRow2.default.create(headerRow, { defaultProps: { cellAs: 'th' } })\n    ),\n    _react2.default.createElement(\n      _TableBody2.default,\n      null,\n      renderBodyRow && (0, _map3.default)(tableData, function (data, index) {\n        return _TableRow2.default.create(renderBodyRow(data, index));\n      })\n    ),\n    footerRow && _react2.default.createElement(\n      _TableFooter2.default,\n      null,\n      _TableRow2.default.create(footerRow)\n    )\n  );\n}\n\nTable.handledProps = ['as', 'attached', 'basic', 'celled', 'children', 'className', 'collapsing', 'color', 'columns', 'compact', 'definition', 'fixed', 'footerRow', 'headerRow', 'inverted', 'padded', 'renderBodyRow', 'selectable', 'singleLine', 'size', 'sortable', 'stackable', 'striped', 'structured', 'tableData', 'textAlign', 'unstackable', 'verticalAlign'];\nTable._meta = {\n  name: 'Table',\n  type: _lib.META.TYPES.COLLECTION\n};\n\nTable.defaultProps = {\n  as: 'table'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Attach table to other content */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['very']), _propTypes2.default.bool]),\n\n  /** A table may be divided each row into separate cells. */\n  celled: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: _propTypes2.default.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: _propTypes2.default.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: _propTypes2.default.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: _lib.customPropTypes.itemShorthand,\n\n  /** A table's colors can be inverted. */\n  inverted: _propTypes2.default.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['tableData']), _propTypes2.default.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: _propTypes2.default.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: _propTypes2.default.bool,\n\n  /** A table can also be small or large. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: _propTypes2.default.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: _propTypes2.default.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: _propTypes2.default.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: _propTypes2.default.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['renderBodyRow']), _propTypes2.default.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: _propTypes2.default.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nTable.Body = _TableBody2.default;\nTable.Cell = _TableCell2.default;\nTable.Footer = _TableFooter2.default;\nTable.Header = _TableHeader2.default;\nTable.HeaderCell = _TableHeaderCell2.default;\nTable.Row = _TableRow2.default;\n\nexports.default = Table;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableBody.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)(className);\n  var rest = (0, _lib.getUnhandledProps)(TableBody, props);\n  var ElementType = (0, _lib.getElementType)(TableBody, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nTableBody.handledProps = ['as', 'children', 'className'];\nTableBody._meta = {\n  name: 'TableBody',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableBody.defaultProps = {\n  as: 'tbody'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = TableBody;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableCell.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table row can have cells.\n */\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(width, 'wide'), className);\n  var rest = (0, _lib.getUnhandledProps)(TableCell, props);\n  var ElementType = (0, _lib.getElementType)(TableCell, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _Icon2.default.create(icon),\n    content\n  );\n}\n\nTableCell.handledProps = ['active', 'as', 'children', 'className', 'collapsing', 'content', 'disabled', 'error', 'icon', 'negative', 'positive', 'selectable', 'singleLine', 'textAlign', 'verticalAlign', 'warning', 'width'];\nTableCell._meta = {\n  name: 'TableCell',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableCell.defaultProps = {\n  as: 'td'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A cell can be active or selected by a user. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: _propTypes2.default.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: _propTypes2.default.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: _propTypes2.default.bool,\n\n  /** A cell can be selectable. */\n  selectable: _propTypes2.default.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: _propTypes2.default.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: _propTypes2.default.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\n\nTableCell.create = (0, _lib.createShorthandFactory)(TableCell, function (content) {\n  return { content: content };\n});\n\nexports.default = TableCell;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableFooter.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TableHeader = require('./TableHeader');\n\nvar _TableHeader2 = _interopRequireDefault(_TableHeader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table can have a footer.\n */\nfunction TableFooter(props) {\n  return _react2.default.createElement(_TableHeader2.default, props);\n}\n\nTableFooter.handledProps = ['as'];\nTableFooter._meta = {\n  name: 'TableFooter',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\n\nexports.default = TableFooter;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table can have a header.\n */\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      fullWidth = props.fullWidth;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(fullWidth, 'full-width'), className);\n  var rest = (0, _lib.getUnhandledProps)(TableHeader, props);\n  var ElementType = (0, _lib.getElementType)(TableHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nTableHeader.handledProps = ['as', 'children', 'className', 'fullWidth'];\nTableHeader._meta = {\n  name: 'TableHeader',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableHeader.defaultProps = {\n  as: 'thead'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: _propTypes2.default.bool\n} : void 0;\n\nexports.default = TableHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableHeaderCell.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TableCell = require('./TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table can have a header cell.\n */\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n\n  var classes = (0, _classnames2.default)((0, _lib.useValueAndKey)(sorted, 'sorted'), className);\n  var rest = (0, _lib.getUnhandledProps)(TableHeaderCell, props);\n\n  return _react2.default.createElement(_TableCell2.default, (0, _extends3.default)({}, rest, { as: as, className: classes }));\n}\n\nTableHeaderCell.handledProps = ['as', 'className', 'sorted'];\nTableHeaderCell._meta = {\n  name: 'TableHeaderCell',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableHeaderCell.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: _propTypes2.default.oneOf(['ascending', 'descending'])\n} : void 0;\n\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\n\nexports.default = TableHeaderCell;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/collections/Table/TableRow.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TableCell = require('./TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A table can have rows.\n */\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), className);\n  var rest = (0, _lib.getUnhandledProps)(TableRow, props);\n  var ElementType = (0, _lib.getElementType)(TableRow, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _map3.default)(cells, function (cell) {\n      return _TableCell2.default.create(cell, { defaultProps: { as: cellAs } });\n    })\n  );\n}\n\nTableRow.handledProps = ['active', 'as', 'cellAs', 'cells', 'children', 'className', 'disabled', 'error', 'negative', 'positive', 'textAlign', 'verticalAlign', 'warning'];\nTableRow._meta = {\n  name: 'TableRow',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A row can be active or selected by a user. */\n  active: _propTypes2.default.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: _lib.customPropTypes.as,\n\n  /** Shorthand array of props for TableCell. */\n  cells: _lib.customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A row can be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: _propTypes2.default.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: _propTypes2.default.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: _propTypes2.default.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: _propTypes2.default.bool\n} : void 0;\n\nTableRow.create = (0, _lib.createShorthandFactory)(TableRow, function (cells) {\n  return { cells: cells };\n});\n\nexports.default = TableRow;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Container/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Container = require('./Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Container2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Container/Container.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A container limits content to a maximum width.\n */\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useTextAlignProp)(textAlign), 'container', className);\n  var rest = (0, _lib.getUnhandledProps)(Container, props);\n  var ElementType = (0, _lib.getElementType)(Container, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nContainer.handledProps = ['as', 'children', 'className', 'fluid', 'text', 'textAlign'];\nContainer._meta = {\n  name: 'Container',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Container has no maximum with. */\n  fluid: _propTypes2.default.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: _propTypes2.default.bool,\n\n  /** Align container text. */\n  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)\n} : void 0;\n\nexports.default = Container;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Divider/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Divider = require('./Divider');\n\nvar _Divider2 = _interopRequireDefault(_Divider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Divider2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Divider/Divider.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A divider visually segments content into groups.\n */\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(section, 'section'), (0, _lib.useKeyOnly)(vertical, 'vertical'), 'divider', className);\n  var rest = (0, _lib.getUnhandledProps)(Divider, props);\n  var ElementType = (0, _lib.getElementType)(Divider, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nDivider.handledProps = ['as', 'children', 'className', 'clearing', 'fitted', 'hidden', 'horizontal', 'inverted', 'section', 'vertical'];\nDivider._meta = {\n  name: 'Divider',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Divider can clear the content above it. */\n  clearing: _propTypes2.default.bool,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: _propTypes2.default.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: _propTypes2.default.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** Divider can have it's colours inverted. */\n  inverted: _propTypes2.default.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: _propTypes2.default.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: _propTypes2.default.bool\n} : void 0;\n\nexports.default = Divider;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Header/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Header = require('./Header');\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Header2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Header/Header.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _HeaderSubheader = require('./HeaderSubheader');\n\nvar _HeaderSubheader2 = _interopRequireDefault(_HeaderSubheader);\n\nvar _HeaderContent = require('./HeaderContent');\n\nvar _HeaderContent2 = _interopRequireDefault(_HeaderContent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A header provides a short summary of content\n */\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(block, 'block'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(icon === true, 'icon'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(sub, 'sub'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useTextAlignProp)(textAlign), 'header', className);\n  var rest = (0, _lib.getUnhandledProps)(Header, props);\n  var ElementType = (0, _lib.getElementType)(Header, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var iconElement = _Icon2.default.create(icon);\n  var imageElement = _Image2.default.create(image);\n  var subheaderElement = _HeaderSubheader2.default.create(subheader);\n\n  if (iconElement || imageElement) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      iconElement || imageElement,\n      (content || subheaderElement) && _react2.default.createElement(\n        _HeaderContent2.default,\n        null,\n        content,\n        subheaderElement\n      )\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content,\n    subheaderElement\n  );\n}\n\nHeader.handledProps = ['as', 'attached', 'block', 'children', 'className', 'color', 'content', 'disabled', 'dividing', 'floated', 'icon', 'image', 'inverted', 'size', 'sub', 'subheader', 'textAlign'];\nHeader._meta = {\n  name: 'Header',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Header.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Color of the header. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: _propTypes2.default.bool,\n\n  /** Divide header from the content below it. */\n  dividing: _propTypes2.default.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: _propTypes2.default.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: _lib.customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)\n} : void 0;\n\nHeader.Content = _HeaderContent2.default;\nHeader.Subheader = _HeaderSubheader2.default;\n\nexports.default = Header;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Header/HeaderSubheader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Headers may contain subheaders.\n */\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('sub header', className);\n  var rest = (0, _lib.getUnhandledProps)(HeaderSubheader, props);\n  var ElementType = (0, _lib.getElementType)(HeaderSubheader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nHeaderSubheader.handledProps = ['as', 'children', 'className', 'content'];\nHeaderSubheader._meta = {\n  name: 'HeaderSubheader',\n  parent: 'Header',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HeaderSubheader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nHeaderSubheader.create = (0, _lib.createShorthandFactory)(HeaderSubheader, function (content) {\n  return { content: content };\n});\n\nexports.default = HeaderSubheader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Header/HeaderContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(HeaderContent, props);\n  var ElementType = (0, _lib.getElementType)(HeaderContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nHeaderContent.handledProps = ['as', 'children', 'className'];\nHeaderContent._meta = {\n  name: 'HeaderContent',\n  parent: 'Header',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HeaderContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = HeaderContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _List = require('./List');\n\nvar _List2 = _interopRequireDefault(_List);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _List2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/List.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _ListContent = require('./ListContent');\n\nvar _ListContent2 = _interopRequireDefault(_ListContent);\n\nvar _ListDescription = require('./ListDescription');\n\nvar _ListDescription2 = _interopRequireDefault(_ListDescription);\n\nvar _ListHeader = require('./ListHeader');\n\nvar _ListHeader2 = _interopRequireDefault(_ListHeader);\n\nvar _ListIcon = require('./ListIcon');\n\nvar _ListIcon2 = _interopRequireDefault(_ListIcon);\n\nvar _ListItem = require('./ListItem');\n\nvar _ListItem2 = _interopRequireDefault(_ListItem);\n\nvar _ListList = require('./ListList');\n\nvar _ListList2 = _interopRequireDefault(_ListList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list groups related content.\n */\nvar List = function (_Component) {\n  (0, _inherits3.default)(List, _Component);\n\n  function List() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = List.__proto__ || Object.getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          (0, _invoke3.default)(predefinedProps, 'onClick', e, itemProps);\n          (0, _invoke3.default)(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(List, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          animated = _props.animated,\n          bulleted = _props.bulleted,\n          celled = _props.celled,\n          children = _props.children,\n          className = _props.className,\n          divided = _props.divided,\n          floated = _props.floated,\n          horizontal = _props.horizontal,\n          inverted = _props.inverted,\n          items = _props.items,\n          link = _props.link,\n          ordered = _props.ordered,\n          relaxed = _props.relaxed,\n          selection = _props.selection,\n          size = _props.size,\n          verticalAlign = _props.verticalAlign;\n\n\n      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(animated, 'animated'), (0, _lib.useKeyOnly)(bulleted, 'bulleted'), (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'list', className);\n      var rest = (0, _lib.getUnhandledProps)(List, this.props);\n      var ElementType = (0, _lib.getElementType)(List, this.props);\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { role: 'list', className: classes }),\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { role: 'list', className: classes }),\n        (0, _map3.default)(items, function (item) {\n          return _ListItem2.default.create(item, { overrideProps: _this2.handleItemOverrides });\n        })\n      );\n    }\n  }]);\n  return List;\n}(_react.Component);\n\nList._meta = {\n  name: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\nList.Content = _ListContent2.default;\nList.Description = _ListDescription2.default;\nList.Header = _ListHeader2.default;\nList.Icon = _ListIcon2.default;\nList.Item = _ListItem2.default;\nList.List = _ListList2.default;\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: _propTypes2.default.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: _propTypes2.default.bool,\n\n  /** A list can divide its items into cells. */\n  celled: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A list can show divisions between content. */\n  divided: _propTypes2.default.bool,\n\n  /** An list can be floated left or right. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: _propTypes2.default.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: _propTypes2.default.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: _propTypes2.default.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: _propTypes2.default.bool,\n\n  /** A list can vary in size. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\nList.handledProps = ['animated', 'as', 'bulleted', 'celled', 'children', 'className', 'divided', 'floated', 'horizontal', 'inverted', 'items', 'link', 'onItemClick', 'ordered', 'relaxed', 'selection', 'size', 'verticalAlign'];\nexports.default = List;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _ListDescription = require('./ListDescription');\n\nvar _ListDescription2 = _interopRequireDefault(_ListDescription);\n\nvar _ListHeader = require('./ListHeader');\n\nvar _ListHeader2 = _interopRequireDefault(_ListHeader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list item can contain a content.\n */\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);\n  var rest = (0, _lib.getUnhandledProps)(ListContent, props);\n  var ElementType = (0, _lib.getElementType)(ListContent, props);\n\n  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _ListHeader2.default.create(header),\n    _ListDescription2.default.create(description),\n    content\n  );\n}\n\nListContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'floated', 'header', 'verticalAlign'];\nListContent._meta = {\n  name: 'ListContent',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ListContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nListContent.create = (0, _lib.createShorthandFactory)(ListContent, function (content) {\n  return { content: content };\n});\n\nexports.default = ListContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListDescription.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list item can contain a description.\n */\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)(className, 'description');\n  var rest = (0, _lib.getUnhandledProps)(ListDescription, props);\n  var ElementType = (0, _lib.getElementType)(ListDescription, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nListDescription.handledProps = ['as', 'children', 'className', 'content'];\nListDescription._meta = {\n  name: 'ListDescription',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ListDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nListDescription.create = (0, _lib.createShorthandFactory)(ListDescription, function (content) {\n  return { content: content };\n});\n\nexports.default = ListDescription;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list item can contain a header.\n */\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(ListHeader, props);\n  var ElementType = (0, _lib.getElementType)(ListHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nListHeader.handledProps = ['as', 'children', 'className', 'content'];\nListHeader._meta = {\n  name: 'ListHeader',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ListHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nListHeader.create = (0, _lib.createShorthandFactory)(ListHeader, function (content) {\n  return { content: content };\n});\n\nexports.default = ListHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListIcon.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list item can contain an icon.\n */\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n\n  var classes = (0, _classnames2.default)((0, _lib.useVerticalAlignProp)(verticalAlign), className);\n  var rest = (0, _lib.getUnhandledProps)(ListIcon, props);\n\n  return _react2.default.createElement(_Icon2.default, (0, _extends3.default)({}, rest, { className: classes }));\n}\n\nListIcon.handledProps = ['className', 'verticalAlign'];\nListIcon._meta = {\n  name: 'ListIcon',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ListIcon.propTypes = {\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nListIcon.create = (0, _lib.createShorthandFactory)(ListIcon, function (name) {\n  return { name: name };\n});\n\nexports.default = ListIcon;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListItem.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isPlainObject2 = require('lodash/isPlainObject');\n\nvar _isPlainObject3 = _interopRequireDefault(_isPlainObject2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _ListContent = require('./ListContent');\n\nvar _ListContent2 = _interopRequireDefault(_ListContent);\n\nvar _ListDescription = require('./ListDescription');\n\nvar _ListDescription2 = _interopRequireDefault(_ListDescription);\n\nvar _ListHeader = require('./ListHeader');\n\nvar _ListHeader2 = _interopRequireDefault(_ListHeader);\n\nvar _ListIcon = require('./ListIcon');\n\nvar _ListIcon2 = _interopRequireDefault(_ListIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list item can contain a set of items.\n */\nvar ListItem = function (_Component) {\n  (0, _inherits3.default)(ListItem, _Component);\n\n  function ListItem() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, ListItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(ListItem, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          content = _props.content,\n          description = _props.description,\n          disabled = _props.disabled,\n          header = _props.header,\n          icon = _props.icon,\n          image = _props.image,\n          value = _props.value;\n\n\n      var ElementType = (0, _lib.getElementType)(ListItem, this.props);\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(ElementType !== 'li', 'item'), className);\n      var rest = (0, _lib.getUnhandledProps)(ListItem, this.props);\n      var valueProp = ElementType === 'li' ? { value: value } : { 'data-value': value };\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      var iconElement = _ListIcon2.default.create(icon);\n      var imageElement = _Image2.default.create(image);\n\n      // See description of `content` prop for explanation about why this is necessary.\n      if (!(0, _react.isValidElement)(content) && (0, _isPlainObject3.default)(content)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),\n          iconElement || imageElement,\n          _ListContent2.default.create(content, { header: header, description: description })\n        );\n      }\n\n      var headerElement = _ListHeader2.default.create(header);\n      var descriptionElement = _ListDescription2.default.create(description);\n      if (iconElement || imageElement) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),\n          iconElement || imageElement,\n          (content || headerElement || descriptionElement) && _react2.default.createElement(\n            _ListContent2.default,\n            null,\n            headerElement,\n            descriptionElement,\n            content\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),\n        headerElement,\n        descriptionElement,\n        content\n      );\n    }\n  }]);\n  return ListItem;\n}(_react.Component);\n\nListItem._meta = {\n  name: 'ListItem',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A list item can active. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** Shorthand for ListHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _lib.customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: _propTypes2.default.func,\n\n  /** A value for an ordered list. */\n  value: _propTypes2.default.string\n} : void 0;\nListItem.handledProps = ['active', 'as', 'children', 'className', 'content', 'description', 'disabled', 'header', 'icon', 'image', 'onClick', 'value'];\n\n\nListItem.create = (0, _lib.createShorthandFactory)(ListItem, function (content) {\n  return { content: content };\n});\n\nexports.default = ListItem;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/List/ListList.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A list can contain a sub list.\n */\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className;\n\n\n  var rest = (0, _lib.getUnhandledProps)(ListList, props);\n  var ElementType = (0, _lib.getElementType)(ListList, props);\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nListList.handledProps = ['as', 'children', 'className'];\nListList._meta = {\n  name: 'ListList',\n  parent: 'List',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ListList.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = ListList;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Loader/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Loader = require('./Loader');\n\nvar _Loader2 = _interopRequireDefault(_Loader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Loader2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Loader/Loader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(children || content, 'text'), (0, _lib.useKeyOrValueAndKey)(inline, 'inline'), 'loader', className);\n  var rest = (0, _lib.getUnhandledProps)(Loader, props);\n  var ElementType = (0, _lib.getElementType)(Loader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nLoader.handledProps = ['active', 'as', 'children', 'className', 'content', 'disabled', 'indeterminate', 'inline', 'inverted', 'size'];\nLoader._meta = {\n  name: 'Loader',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Loader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: _propTypes2.default.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: _propTypes2.default.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: _propTypes2.default.bool,\n\n  /** Loaders can have different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES)\n} : void 0;\n\nexports.default = Loader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Rail/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Rail = require('./Rail');\n\nvar _Rail2 = _interopRequireDefault(_Rail);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Rail2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Rail/Rail.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\nfunction Rail(props) {\n  var attached = props.attached,\n      children = props.children,\n      className = props.className,\n      close = props.close,\n      dividing = props.dividing,\n      internal = props.internal,\n      position = props.position,\n      size = props.size;\n\n\n  var classes = (0, _classnames2.default)('ui', position, size, (0, _lib.useKeyOnly)(attached, 'attached'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useKeyOnly)(internal, 'internal'), (0, _lib.useKeyOrValueAndKey)(close, 'close'), 'rail', className);\n  var rest = (0, _lib.getUnhandledProps)(Rail, props);\n  var ElementType = (0, _lib.getElementType)(Rail, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nRail.handledProps = ['as', 'attached', 'children', 'className', 'close', 'dividing', 'internal', 'position', 'size'];\nRail._meta = {\n  name: 'Rail',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Rail.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /** A rail can create a division between itself and a container. */\n  dividing: _propTypes2.default.bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: _propTypes2.default.bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: _propTypes2.default.oneOf(_lib.SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : void 0;\n\nexports.default = Rail;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Reveal/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Reveal = require('./Reveal');\n\nvar _Reveal2 = _interopRequireDefault(_Reveal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Reveal2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Reveal/Reveal.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _RevealContent = require('./RevealContent');\n\nvar _RevealContent2 = _interopRequireDefault(_RevealContent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A reveal displays additional content in place of previous content when activated.\n */\nfunction Reveal(props) {\n  var active = props.active,\n      animated = props.animated,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      instant = props.instant;\n\n\n  var classes = (0, _classnames2.default)('ui', animated, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(instant, 'instant'), 'reveal', className);\n  var rest = (0, _lib.getUnhandledProps)(Reveal, props);\n  var ElementType = (0, _lib.getElementType)(Reveal, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nReveal.handledProps = ['active', 'animated', 'as', 'children', 'className', 'disabled', 'instant'];\nReveal._meta = {\n  name: 'Reveal',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Reveal.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** An active reveal displays its hidden content. */\n  active: _propTypes2.default.bool,\n\n  /** An animation name that will be applied to Reveal. */\n  animated: _propTypes2.default.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A disabled reveal will not animate when hovered. */\n  disabled: _propTypes2.default.bool,\n\n  /** An element can show its content without delay. */\n  instant: _propTypes2.default.bool\n} : void 0;\n\nReveal.Content = _RevealContent2.default;\n\nexports.default = Reveal;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Reveal/RevealContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A content sub-component for the Reveal.\n */\nfunction RevealContent(props) {\n  var children = props.children,\n      className = props.className,\n      hidden = props.hidden,\n      visible = props.visible;\n\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(visible, 'visible'), 'content', className);\n  var rest = (0, _lib.getUnhandledProps)(RevealContent, props);\n  var ElementType = (0, _lib.getElementType)(RevealContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nRevealContent.handledProps = ['as', 'children', 'className', 'hidden', 'visible'];\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? RevealContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: _propTypes2.default.bool,\n\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: _propTypes2.default.bool\n} : void 0;\n\nexports.default = RevealContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Segment/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Segment = require('./Segment');\n\nvar _Segment2 = _interopRequireDefault(_Segment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Segment2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Segment/Segment.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _SegmentGroup = require('./SegmentGroup');\n\nvar _SegmentGroup2 = _interopRequireDefault(_SegmentGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A segment is used to create a grouping of related content.\n */\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stacked, 'stacked'), (0, _lib.useKeyOnly)(tertiary, 'tertiary'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), 'segment', className);\n  var rest = (0, _lib.getUnhandledProps)(Segment, props);\n  var ElementType = (0, _lib.getElementType)(Segment, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nSegment.handledProps = ['as', 'attached', 'basic', 'children', 'circular', 'className', 'clearing', 'color', 'compact', 'disabled', 'floated', 'inverted', 'loading', 'padded', 'piled', 'raised', 'secondary', 'size', 'stacked', 'tertiary', 'textAlign', 'vertical'];\nSegment.Group = _SegmentGroup2.default;\n\nSegment._meta = {\n  name: 'Segment',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Segment.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** A segment can be circular. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A segment can clear floated content. */\n  clearing: _propTypes2.default.bool,\n\n  /** Segment can be colored. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: _propTypes2.default.bool,\n\n  /** A segment may show its content is disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: _propTypes2.default.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: _propTypes2.default.bool,\n\n  /** A segment can increase its padding. */\n  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: _propTypes2.default.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: _propTypes2.default.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: _propTypes2.default.bool,\n\n  /** A segment can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: _propTypes2.default.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: _propTypes2.default.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: _propTypes2.default.bool\n} : void 0;\n\nexports.default = Segment;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Segment/SegmentGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A group of segments can be formatted to appear together.\n */\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(stacked, 'stacked'), 'segments', className);\n  var rest = (0, _lib.getUnhandledProps)(SegmentGroup, props);\n  var ElementType = (0, _lib.getElementType)(SegmentGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nSegmentGroup.handledProps = ['as', 'children', 'className', 'compact', 'horizontal', 'piled', 'raised', 'size', 'stacked'];\nSegmentGroup._meta = {\n  name: 'SegmentGroup',\n  parent: 'Segment',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SegmentGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: _propTypes2.default.bool,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: _propTypes2.default.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: _propTypes2.default.bool,\n\n  /** A segment group can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: _propTypes2.default.bool\n} : void 0;\n\nexports.default = SegmentGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Step = require('./Step');\n\nvar _Step2 = _interopRequireDefault(_Step);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Step2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/Step.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _StepContent = require('./StepContent');\n\nvar _StepContent2 = _interopRequireDefault(_StepContent);\n\nvar _StepDescription = require('./StepDescription');\n\nvar _StepDescription2 = _interopRequireDefault(_StepDescription);\n\nvar _StepGroup = require('./StepGroup');\n\nvar _StepGroup2 = _interopRequireDefault(_StepGroup);\n\nvar _StepTitle = require('./StepTitle');\n\nvar _StepTitle2 = _interopRequireDefault(_StepTitle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A step shows the completion status of an activity in a series of activities.\n */\nvar Step = function (_Component) {\n  (0, _inherits3.default)(Step, _Component);\n\n  function Step() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Step);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Step.__proto__ || Object.getPrototypeOf(Step)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Step, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          completed = _props.completed,\n          description = _props.description,\n          disabled = _props.disabled,\n          href = _props.href,\n          icon = _props.icon,\n          link = _props.link,\n          onClick = _props.onClick,\n          title = _props.title;\n\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(completed, 'completed'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(link, 'link'), 'step', className);\n      var rest = (0, _lib.getUnhandledProps)(Step, this.props);\n      var ElementType = (0, _lib.getElementType)(Step, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),\n        _Icon2.default.create(icon),\n        _react2.default.createElement(_StepContent2.default, { description: description, title: title })\n      );\n    }\n  }]);\n  return Step;\n}(_react.Component);\n\nStep._meta = {\n  name: 'Step',\n  type: _lib.META.TYPES.ELEMENT\n};\nStep.Content = _StepContent2.default;\nStep.Description = _StepDescription2.default;\nStep.Group = _StepGroup2.default;\nStep.Title = _StepTitle2.default;\nexports.default = Step;\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A step can be highlighted as active. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A step can show that a user has completed it. */\n  completed: _propTypes2.default.bool,\n\n  /** Shorthand for StepDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Show that the Loader is inactive. */\n  disabled: _propTypes2.default.bool,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: _propTypes2.default.string,\n\n  /** Shorthand for Icon. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** A step can be link. */\n  link: _propTypes2.default.bool,\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A step can show a ordered sequence of steps. Passed from StepGroup. */\n  ordered: _propTypes2.default.bool,\n\n  /** Shorthand for StepTitle. */\n  title: _lib.customPropTypes.itemShorthand\n} : void 0;\nStep.handledProps = ['active', 'as', 'children', 'className', 'completed', 'description', 'disabled', 'href', 'icon', 'link', 'onClick', 'ordered', 'title'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/StepContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _StepDescription = require('./StepDescription');\n\nvar _StepDescription2 = _interopRequireDefault(_StepDescription);\n\nvar _StepTitle = require('./StepTitle');\n\nvar _StepTitle2 = _interopRequireDefault(_StepTitle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A step can contain a content.\n */\nfunction StepContent(props) {\n  var children = props.children,\n      className = props.className,\n      description = props.description,\n      title = props.title;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(StepContent, props);\n  var ElementType = (0, _lib.getElementType)(StepContent, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_StepTitle2.default, function (val) {\n      return { title: val };\n    }, title),\n    (0, _lib.createShorthand)(_StepDescription2.default, function (val) {\n      return { description: val };\n    }, description)\n  );\n}\n\nStepContent.handledProps = ['as', 'children', 'className', 'description', 'title'];\nStepContent._meta = {\n  name: 'StepContent',\n  parent: 'Step',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StepContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Shorthand for StepDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for StepTitle. */\n  title: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = StepContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/StepDescription.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction StepDescription(props) {\n  var children = props.children,\n      className = props.className,\n      description = props.description;\n\n  var classes = (0, _classnames2.default)('description', className);\n  var rest = (0, _lib.getUnhandledProps)(StepDescription, props);\n  var ElementType = (0, _lib.getElementType)(StepDescription, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? description : children\n  );\n}\n\nStepDescription.handledProps = ['as', 'children', 'className', 'description'];\nStepDescription._meta = {\n  name: 'StepDescription',\n  parent: 'Step',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StepDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Shorthand for primary content. */\n  description: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = StepDescription;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/StepTitle.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A step can contain a title.\n */\nfunction StepTitle(props) {\n  var children = props.children,\n      className = props.className,\n      title = props.title;\n\n  var classes = (0, _classnames2.default)('title', className);\n  var rest = (0, _lib.getUnhandledProps)(StepTitle, props);\n  var ElementType = (0, _lib.getElementType)(StepTitle, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? title : children\n  );\n}\n\nStepTitle.handledProps = ['as', 'children', 'className', 'title'];\nStepTitle._meta = {\n  name: 'StepTitle',\n  parent: 'Step',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StepTitle.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Shorthand for primary content. */\n  title: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = StepTitle;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/elements/Step/StepGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Step = require('./Step');\n\nvar _Step2 = _interopRequireDefault(_Step);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A set of steps.\n */\nfunction StepGroup(props) {\n  var children = props.children,\n      className = props.className,\n      fluid = props.fluid,\n      items = props.items,\n      ordered = props.ordered,\n      size = props.size,\n      stackable = props.stackable,\n      vertical = props.vertical;\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useValueAndKey)(stackable, 'stackable'), 'steps', className);\n  var rest = (0, _lib.getUnhandledProps)(StepGroup, props);\n  var ElementType = (0, _lib.getElementType)(StepGroup, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var content = (0, _map3.default)(items, function (item) {\n    var key = item.key || [item.title, item.description].join('-');\n    return _react2.default.createElement(_Step2.default, (0, _extends3.default)({ key: key }, item));\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content\n  );\n}\n\nStepGroup.handledProps = ['as', 'children', 'className', 'fluid', 'items', 'ordered', 'size', 'stackable', 'vertical'];\nStepGroup._meta = {\n  name: 'StepGroup',\n  parent: 'Step',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StepGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A fluid step takes up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Shorthand array of props for Step. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A step can show a ordered sequence of steps. */\n  ordered: _propTypes2.default.bool,\n\n  /** Steps can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** A step can stack vertically only on smaller screens. */\n  stackable: _propTypes2.default.oneOf(['tablet']),\n\n  /** A step can be displayed stacked vertically. */\n  vertical: _propTypes2.default.bool\n} : void 0;\n\nexports.default = StepGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Accordion/Accordion.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _keys2 = require('lodash/keys');\n\nvar _keys3 = _interopRequireDefault(_keys2);\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _isFunction2 = require('lodash/isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _AccordionContent = require('./AccordionContent');\n\nvar _AccordionContent2 = _interopRequireDefault(_AccordionContent);\n\nvar _AccordionTitle = require('./AccordionTitle');\n\nvar _AccordionTitle2 = _interopRequireDefault(_AccordionTitle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\nvar Accordion = function (_Component) {\n  (0, _inherits3.default)(Accordion, _Component);\n\n  function Accordion() {\n    var _ref;\n\n    (0, _classCallCheck3.default)(this, Accordion);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {};\n\n    _this.handleTitleClick = function (e, index) {\n      var _this$props = _this.props,\n          onTitleClick = _this$props.onTitleClick,\n          exclusive = _this$props.exclusive;\n      var activeIndex = _this.state.activeIndex;\n\n\n      var newIndex = void 0;\n      if (exclusive) {\n        newIndex = index === activeIndex ? -1 : index;\n      } else {\n        // check to see if index is in array, and remove it, if not then add it\n        newIndex = (0, _includes3.default)(activeIndex, index) ? (0, _without3.default)(activeIndex, index) : [].concat((0, _toConsumableArray3.default)(activeIndex), [index]);\n      }\n      _this.trySetState({ activeIndex: newIndex });\n      if (onTitleClick) onTitleClick(e, index);\n    };\n\n    _this.isIndexActive = function (index) {\n      var exclusive = _this.props.exclusive;\n      var activeIndex = _this.state.activeIndex;\n\n      return exclusive ? activeIndex === index : (0, _includes3.default)(activeIndex, index);\n    };\n\n    _this.renderChildren = function () {\n      var children = _this.props.children;\n\n      var titleIndex = 0;\n      var contentIndex = 0;\n\n      return _react.Children.map(children, function (child) {\n        var isTitle = child.type === _AccordionTitle2.default;\n        var isContent = child.type === _AccordionContent2.default;\n\n        if (isTitle) {\n          var currentIndex = titleIndex;\n          var isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(titleIndex);\n          var onClick = function onClick(e) {\n            _this.handleTitleClick(e, currentIndex);\n            if (child.props.onClick) child.props.onClick(e, currentIndex);\n          };\n          titleIndex++;\n          return (0, _react.cloneElement)(child, (0, _extends3.default)({}, child.props, { active: isActive, onClick: onClick }));\n        }\n\n        if (isContent) {\n          var _isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(contentIndex);\n          contentIndex++;\n          return (0, _react.cloneElement)(child, (0, _extends3.default)({}, child.props, { active: _isActive }));\n        }\n\n        return child;\n      });\n    };\n\n    _this.renderPanels = function () {\n      var panels = _this.props.panels;\n\n      var children = [];\n\n      (0, _each3.default)(panels, function (panel, i) {\n        var isActive = (0, _has3.default)(panel, 'active') ? panel.active : _this.isIndexActive(i);\n        var onClick = function onClick(e) {\n          _this.handleTitleClick(e, i);\n          if (panel.onClick) panel.onClick(e, i);\n        };\n\n        // implement all methods of creating a key that are supported in factories\n        var key = panel.key || (0, _isFunction3.default)(panel.childKey) && panel.childKey(panel) || panel.childKey && panel.childKey || panel.title;\n\n        children.push(_AccordionTitle2.default.create({ active: isActive, onClick: onClick, key: key + '-title', content: panel.title }));\n        children.push(_AccordionContent2.default.create({ active: isActive, key: key + '-content', content: panel.content }));\n      });\n\n      return children;\n    };\n\n    _this.state = {\n      activeIndex: _this.props.exclusive ? -1 : [-1]\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(Accordion, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          fluid = _props.fluid,\n          inverted = _props.inverted,\n          panels = _props.panels,\n          styled = _props.styled;\n\n\n      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), 'accordion', className);\n      var rest = (0, _omit3.default)(this.props, (0, _keys3.default)(Accordion.propTypes));\n      var ElementType = (0, _lib.getElementType)(Accordion, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        panels ? this.renderPanels() : this.renderChildren()\n      );\n    }\n  }]);\n  return Accordion;\n}(_lib.AutoControlledComponent);\n\nAccordion.defaultProps = {\n  exclusive: true\n};\nAccordion.autoControlledProps = ['activeIndex'];\nAccordion._meta = {\n  name: 'Accordion',\n  type: _lib.META.TYPES.MODULE\n};\nAccordion.Content = _AccordionContent2.default;\nAccordion.Title = _AccordionTitle2.default;\nexports.default = Accordion;\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Index of the currently active panel. */\n  activeIndex: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number]),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number]),\n\n  /** Only allow one panel open at a time. */\n  exclusive: _propTypes2.default.bool,\n\n  /** Format to take up the width of it's container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {number} index - The index of the clicked panel.\n   */\n  onTitleClick: _propTypes2.default.func,\n\n  /**\n   * Create simple accordion panels from an array of { text: <string>, content: <custom> } objects.\n   * Object can optionally define an `active` key to open/close the panel.\n   * Object can opitonally define a `key` key used for title and content nodes' keys.\n   * Mutually exclusive with children.\n   * TODO: AccordionPanel should be a sub-component\n   */\n  panels: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    key: _propTypes2.default.string,\n    active: _propTypes2.default.bool,\n    title: _lib.customPropTypes.contentShorthand,\n    content: _lib.customPropTypes.contentShorthand,\n    onClick: _propTypes2.default.func\n  }))]),\n\n  /** Adds some basic styling to accordion panels. */\n  styled: _propTypes2.default.bool\n} : void 0;\nAccordion.handledProps = ['activeIndex', 'as', 'children', 'className', 'defaultActiveIndex', 'exclusive', 'fluid', 'inverted', 'onTitleClick', 'panels', 'styled'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Accordion/AccordionContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A content sub-component for Accordion component.\n */\nfunction AccordionContent(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('content', (0, _lib.useKeyOnly)(active, 'active'), className);\n  var rest = (0, _lib.getUnhandledProps)(AccordionContent, props);\n  var ElementType = (0, _lib.getElementType)(AccordionContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nAccordionContent.handledProps = ['active', 'as', 'children', 'className', 'content'];\nprocess.env.NODE_ENV !== \"production\" ? AccordionContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Whether or not the content is visible. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nAccordionContent._meta = {\n  name: 'AccordionContent',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Accordion'\n};\n\nAccordionContent.create = (0, _lib.createShorthandFactory)(AccordionContent, function (content) {\n  return { content: content };\n});\n\nexports.default = AccordionContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Accordion/AccordionTitle.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A title sub-component for Accordion component.\n */\nvar AccordionTitle = function (_Component) {\n  (0, _inherits3.default)(AccordionTitle, _Component);\n\n  function AccordionTitle() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, AccordionTitle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AccordionTitle.__proto__ || Object.getPrototypeOf(AccordionTitle)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(AccordionTitle, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          children = _props.children,\n          className = _props.className,\n          content = _props.content;\n\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'title', className);\n      var rest = (0, _lib.getUnhandledProps)(AccordionTitle, this.props);\n      var ElementType = (0, _lib.getElementType)(AccordionTitle, this.props);\n\n      if ((0, _isNil3.default)(content)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n        _react2.default.createElement(_Icon2.default, { name: 'dropdown' }),\n        content\n      );\n    }\n  }]);\n  return AccordionTitle;\n}(_react.Component);\n\nAccordionTitle._meta = {\n  name: 'AccordionTitle',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Accordion'\n};\nexports.default = AccordionTitle;\nprocess.env.NODE_ENV !== \"production\" ? AccordionTitle.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Whether or not the title is in the open state. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func\n} : void 0;\nAccordionTitle.handledProps = ['active', 'as', 'children', 'className', 'content', 'onClick'];\n\n\nAccordionTitle.create = (0, _lib.createShorthandFactory)(AccordionTitle, function (content) {\n  return { content: content };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Embed/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Embed = require('./Embed');\n\nvar _Embed2 = _interopRequireDefault(_Embed);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Embed2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Embed/Embed.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An embed displays content from other websites like YouTube videos or Google Maps.\n */\nvar Embed = function (_Component) {\n  (0, _inherits3.default)(Embed, _Component);\n\n  function Embed() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Embed);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Embed.__proto__ || Object.getPrototypeOf(Embed)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      var active = _this.state.active;\n\n\n      if (onClick) onClick(e, (0, _extends3.default)({}, _this.props, { active: true }));\n      if (!active) _this.trySetState({ active: true });\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Embed, [{\n    key: 'getSrc',\n    value: function getSrc() {\n      var _props = this.props,\n          _props$autoplay = _props.autoplay,\n          autoplay = _props$autoplay === undefined ? true : _props$autoplay,\n          _props$brandedUI = _props.brandedUI,\n          brandedUI = _props$brandedUI === undefined ? false : _props$brandedUI,\n          _props$color = _props.color,\n          color = _props$color === undefined ? '#444444' : _props$color,\n          _props$hd = _props.hd,\n          hd = _props$hd === undefined ? true : _props$hd,\n          id = _props.id,\n          source = _props.source,\n          url = _props.url;\n\n\n      if (source === 'youtube') {\n        return ['//www.youtube.com/embed/' + id, '?autohide=true', '&amp;autoplay=' + autoplay, '&amp;color=' + encodeURIComponent(color), '&amp;hq=' + hd, '&amp;jsapi=false', '&amp;modestbranding=' + brandedUI].join('');\n      }\n\n      if (source === 'vimeo') {\n        return ['//player.vimeo.com/video/' + id, '?api=false', '&amp;autoplay=' + autoplay, '&amp;byline=false', '&amp;color=' + encodeURIComponent(color), '&amp;portrait=false', '&amp;title=false'].join('');\n      }\n\n      return url;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          aspectRatio = _props2.aspectRatio,\n          className = _props2.className,\n          icon = _props2.icon,\n          placeholder = _props2.placeholder;\n      var active = this.state.active;\n\n\n      var classes = (0, _classnames2.default)('ui', aspectRatio, (0, _lib.useKeyOnly)(active, 'active'), 'embed', className);\n      var rest = (0, _lib.getUnhandledProps)(Embed, this.props);\n      var ElementType = (0, _lib.getElementType)(Embed, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n        _Icon2.default.create(icon),\n        placeholder && _react2.default.createElement('img', { className: 'placeholder', src: placeholder }),\n        this.renderEmbed()\n      );\n    }\n  }, {\n    key: 'renderEmbed',\n    value: function renderEmbed() {\n      var _props3 = this.props,\n          children = _props3.children,\n          source = _props3.source;\n      var active = this.state.active;\n\n\n      if (!active) return null;\n      if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n        'div',\n        { className: 'embed' },\n        children\n      );\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'embed' },\n        _react2.default.createElement('iframe', {\n          title: 'Embedded content from ' + source + '.',\n          allowFullScreen: '',\n          frameBorder: '0',\n          height: '100%',\n          scrolling: 'no',\n          src: this.getSrc(),\n          width: '100%'\n        })\n      );\n    }\n  }]);\n  return Embed;\n}(_lib.AutoControlledComponent);\n\nEmbed.autoControlledProps = ['active'];\nEmbed.defaultProps = {\n  icon: 'video play'\n};\nEmbed._meta = {\n  name: 'Embed',\n  type: _lib.META.TYPES.MODULE\n};\nexports.default = Embed;\nprocess.env.NODE_ENV !== \"production\" ? Embed.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** An embed can be active. */\n  active: _propTypes2.default.bool,\n\n  /** An embed can specify an alternative aspect ratio. */\n  aspectRatio: _propTypes2.default.oneOf(['4:3', '16:9', '21:9']),\n\n  /** Setting to true or false will force autoplay. */\n  autoplay: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),\n\n  /** Whether to show networks branded UI like title cards, or after video calls to action. */\n  brandedUI: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Specifies a default chrome color with Vimeo or YouTube. */\n  color: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.string]),\n\n  /** Initial value of active. */\n  defaultActive: _propTypes2.default.bool,\n\n  /** Whether to show networks branded UI like title cards, or after video calls to action. */\n  hd: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),\n\n  /** Specifies an icon to use with placeholder content. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** Specifies an id for source. */\n  id: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.string]),\n\n  /**\n   * Сalled on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A placeholder image for embed. */\n  placeholder: _propTypes2.default.string,\n\n  /** Specifies a source to use. */\n  source: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['sourceUrl']), _propTypes2.default.oneOf(['youtube', 'vimeo'])]),\n\n  /** Specifies a url to use for embed. */\n  url: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['source']), _propTypes2.default.string])\n} : void 0;\nEmbed.handledProps = ['active', 'as', 'aspectRatio', 'autoplay', 'brandedUI', 'children', 'className', 'color', 'defaultActive', 'hd', 'icon', 'id', 'onClick', 'placeholder', 'source', 'url'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Popup/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Popup = require('./Popup');\n\nvar _Popup2 = _interopRequireDefault(_Popup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Popup2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Popup/Popup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.POSITIONS = undefined;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _omit2 = require('lodash/omit');\n\nvar _omit3 = _interopRequireDefault(_omit2);\n\nvar _assign2 = require('lodash/assign');\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _mapValues2 = require('lodash/mapValues');\n\nvar _mapValues3 = _interopRequireDefault(_mapValues2);\n\nvar _isNumber2 = require('lodash/isNumber');\n\nvar _isNumber3 = _interopRequireDefault(_isNumber2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Portal = require('../../addons/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _PopupContent = require('./PopupContent');\n\nvar _PopupContent2 = _interopRequireDefault(_PopupContent);\n\nvar _PopupHeader = require('./PopupHeader');\n\nvar _PopupHeader2 = _interopRequireDefault(_PopupHeader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('popup');\n\nvar POSITIONS = exports.POSITIONS = ['top left', 'top right', 'bottom right', 'bottom left', 'right center', 'left center', 'top center', 'bottom center'];\n\n/**\n * A Popup displays additional information on top of a page.\n */\n\nvar Popup = function (_Component) {\n  (0, _inherits3.default)(Popup, _Component);\n\n  function Popup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Popup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Popup.__proto__ || Object.getPrototypeOf(Popup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.hideOnScroll = function (e) {\n      _this.setState({ closed: true });\n      window.removeEventListener('scroll', _this.hideOnScroll);\n      setTimeout(function () {\n        return _this.setState({ closed: false });\n      }, 50);\n    }, _this.handleClose = function (e) {\n      debug('handleClose()');\n      var onClose = _this.props.onClose;\n\n      if (onClose) onClose(e, _this.props);\n    }, _this.handleOpen = function (e) {\n      debug('handleOpen()');\n      _this.coords = e.currentTarget.getBoundingClientRect();\n\n      var onOpen = _this.props.onOpen;\n\n      if (onOpen) onOpen(e, _this.props);\n    }, _this.handlePortalMount = function (e) {\n      debug('handlePortalMount()');\n      if (_this.props.hideOnScroll) {\n        window.addEventListener('scroll', _this.hideOnScroll);\n      }\n\n      var onMount = _this.props.onMount;\n\n      if (onMount) onMount(e, _this.props);\n    }, _this.handlePortalUnmount = function (e) {\n      debug('handlePortalUnmount()');\n      var onUnmount = _this.props.onUnmount;\n\n      if (onUnmount) onUnmount(e, _this.props);\n    }, _this.handlePopupRef = function (popupRef) {\n      debug('popupMounted()');\n      _this.popupCoords = popupRef ? popupRef.getBoundingClientRect() : null;\n      _this.setPopupStyle();\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Popup, [{\n    key: 'computePopupStyle',\n    value: function computePopupStyle(positions) {\n      var style = { position: 'absolute' };\n\n      // Do not access window/document when server side rendering\n      if (!_lib.isBrowser) return style;\n\n      var offset = this.props.offset;\n      var _window = window,\n          pageYOffset = _window.pageYOffset,\n          pageXOffset = _window.pageXOffset;\n      var _document$documentEle = document.documentElement,\n          clientWidth = _document$documentEle.clientWidth,\n          clientHeight = _document$documentEle.clientHeight;\n\n\n      if ((0, _includes3.default)(positions, 'right')) {\n        style.right = Math.round(clientWidth - (this.coords.right + pageXOffset));\n        style.left = 'auto';\n      } else if ((0, _includes3.default)(positions, 'left')) {\n        style.left = Math.round(this.coords.left + pageXOffset);\n        style.right = 'auto';\n      } else {\n        // if not left nor right, we are horizontally centering the element\n        var xOffset = (this.coords.width - this.popupCoords.width) / 2;\n        style.left = Math.round(this.coords.left + xOffset + pageXOffset);\n        style.right = 'auto';\n      }\n\n      if ((0, _includes3.default)(positions, 'top')) {\n        style.bottom = Math.round(clientHeight - (this.coords.top + pageYOffset));\n        style.top = 'auto';\n      } else if ((0, _includes3.default)(positions, 'bottom')) {\n        style.top = Math.round(this.coords.bottom + pageYOffset);\n        style.bottom = 'auto';\n      } else {\n        // if not top nor bottom, we are vertically centering the element\n        var yOffset = (this.coords.height + this.popupCoords.height) / 2;\n        style.top = Math.round(this.coords.bottom + pageYOffset - yOffset);\n        style.bottom = 'auto';\n\n        var _xOffset = this.popupCoords.width + 8;\n        if ((0, _includes3.default)(positions, 'right')) {\n          style.right -= _xOffset;\n        } else {\n          style.left -= _xOffset;\n        }\n      }\n\n      if (offset) {\n        if ((0, _isNumber3.default)(style.right)) {\n          style.right -= offset;\n        } else {\n          style.left -= offset;\n        }\n      }\n\n      return style;\n    }\n\n    // check if the style would display\n    // the popup outside of the view port\n\n  }, {\n    key: 'isStyleInViewport',\n    value: function isStyleInViewport(style) {\n      var _window2 = window,\n          pageYOffset = _window2.pageYOffset,\n          pageXOffset = _window2.pageXOffset;\n      var _document$documentEle2 = document.documentElement,\n          clientWidth = _document$documentEle2.clientWidth,\n          clientHeight = _document$documentEle2.clientHeight;\n\n\n      var element = {\n        top: style.top,\n        left: style.left,\n        width: this.popupCoords.width,\n        height: this.popupCoords.height\n      };\n      if ((0, _isNumber3.default)(style.right)) {\n        element.left = clientWidth - style.right - element.width;\n      }\n      if ((0, _isNumber3.default)(style.bottom)) {\n        element.top = clientHeight - style.bottom - element.height;\n      }\n\n      // hidden on top\n      if (element.top < pageYOffset) return false;\n      // hidden on the bottom\n      if (element.top + element.height > pageYOffset + clientHeight) return false;\n      // hidden the left\n      if (element.left < pageXOffset) return false;\n      // hidden on the right\n      if (element.left + element.width > pageXOffset + clientWidth) return false;\n\n      return true;\n    }\n  }, {\n    key: 'setPopupStyle',\n    value: function setPopupStyle() {\n      if (!this.coords || !this.popupCoords) return;\n      var position = this.props.position;\n      var style = this.computePopupStyle(position);\n\n      // Lets detect if the popup is out of the viewport and adjust\n      // the position accordingly\n      var positions = (0, _without3.default)(POSITIONS, position);\n      for (var i = 0; !this.isStyleInViewport(style) && i < positions.length; i++) {\n        style = this.computePopupStyle(positions[i]);\n        position = positions[i];\n      }\n\n      // Append 'px' to every numerical values in the style\n      style = (0, _mapValues3.default)(style, function (value) {\n        return (0, _isNumber3.default)(value) ? value + 'px' : value;\n      });\n      this.setState({ style: style, position: position });\n    }\n  }, {\n    key: 'getPortalProps',\n    value: function getPortalProps() {\n      var portalProps = {};\n\n      var _props = this.props,\n          on = _props.on,\n          hoverable = _props.hoverable;\n\n\n      if (hoverable) {\n        portalProps.closeOnPortalMouseLeave = true;\n        portalProps.mouseLeaveDelay = 300;\n      }\n\n      if (on === 'click') {\n        portalProps.openOnTriggerClick = true;\n        portalProps.closeOnTriggerClick = true;\n        portalProps.closeOnDocumentClick = true;\n      } else if (on === 'focus') {\n        portalProps.openOnTriggerFocus = true;\n        portalProps.closeOnTriggerBlur = true;\n      } else if (on === 'hover') {\n        portalProps.openOnTriggerMouseEnter = true;\n        portalProps.closeOnTriggerMouseLeave = true;\n        // Taken from SUI: https://git.io/vPmCm\n        portalProps.mouseLeaveDelay = 70;\n        portalProps.mouseEnterDelay = 50;\n      }\n\n      return portalProps;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          basic = _props2.basic,\n          children = _props2.children,\n          className = _props2.className,\n          content = _props2.content,\n          flowing = _props2.flowing,\n          header = _props2.header,\n          inverted = _props2.inverted,\n          size = _props2.size,\n          trigger = _props2.trigger,\n          wide = _props2.wide;\n      var _state = this.state,\n          position = _state.position,\n          closed = _state.closed;\n\n      var style = (0, _assign3.default)({}, this.state.style, this.props.style);\n      var classes = (0, _classnames2.default)('ui', position, size, (0, _lib.useKeyOrValueAndKey)(wide, 'wide'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(flowing, 'flowing'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'popup transition visible', className);\n\n      if (closed) return trigger;\n\n      var unhandled = (0, _lib.getUnhandledProps)(Popup, this.props);\n      var portalPropNames = _Portal2.default.handledProps;\n\n      var rest = (0, _omit3.default)(unhandled, portalPropNames);\n      var portalProps = (0, _pick3.default)(unhandled, portalPropNames);\n      var ElementType = (0, _lib.getElementType)(Popup, this.props);\n\n      var popupJSX = _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, style: style, ref: this.handlePopupRef }),\n        children,\n        (0, _isNil3.default)(children) && _PopupHeader2.default.create(header),\n        (0, _isNil3.default)(children) && _PopupContent2.default.create(content)\n      );\n\n      var mergedPortalProps = (0, _extends3.default)({}, this.getPortalProps(), portalProps);\n      debug('portal props:', mergedPortalProps);\n\n      return _react2.default.createElement(\n        _Portal2.default,\n        (0, _extends3.default)({}, mergedPortalProps, {\n          trigger: trigger,\n          onClose: this.handleClose,\n          onMount: this.handlePortalMount,\n          onOpen: this.handleOpen,\n          onUnmount: this.handlePortalUnmount\n        }),\n        popupJSX\n      );\n    }\n  }]);\n  return Popup;\n}(_react.Component);\n\nPopup.defaultProps = {\n  position: 'top left',\n  on: 'hover'\n};\nPopup._meta = {\n  name: 'Popup',\n  type: _lib.META.TYPES.MODULE\n};\nPopup.Content = _PopupContent2.default;\nPopup.Header = _PopupHeader2.default;\nexports.default = Popup;\nprocess.env.NODE_ENV !== \"production\" ? Popup.propTypes = {\n  /** Display the popup without the pointing arrow. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Simple text content for the popover. */\n  content: _lib.customPropTypes.itemShorthand,\n\n  /** A flowing Popup has no maximum width and continues to flow to fit its content. */\n  flowing: _propTypes2.default.bool,\n\n  /** Takes up the entire width of its offset container. */\n  // TODO: implement the Popup fluid layout\n  // fluid: PropTypes.bool,\n\n  /** Header displayed above the content in bold. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Hide the Popup when scrolling the window. */\n  hideOnScroll: _propTypes2.default.bool,\n\n  /** Whether the popup should not close on hover. */\n  hoverable: _propTypes2.default.bool,\n\n  /** Invert the colors of the Popup. */\n  inverted: _propTypes2.default.bool,\n\n  /** Horizontal offset in pixels to be applied to the Popup. */\n  offset: _propTypes2.default.number,\n\n  /** Event triggering the popup. */\n  on: _propTypes2.default.oneOf(['hover', 'click', 'focus']),\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: _propTypes2.default.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: _propTypes2.default.func,\n\n  /**\n   * Called when the portal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: _propTypes2.default.func,\n\n  /** Position for the popover. */\n  position: _propTypes2.default.oneOf(POSITIONS),\n\n  /** Popup size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big', 'massive')),\n\n  /** Custom Popup style. */\n  style: _propTypes2.default.object,\n\n  /** Element to be rendered in-place where the popup is defined. */\n  trigger: _propTypes2.default.node,\n\n  /** Popup width. */\n  wide: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])])\n} : void 0;\nPopup.handledProps = ['basic', 'children', 'className', 'content', 'flowing', 'header', 'hideOnScroll', 'hoverable', 'inverted', 'offset', 'on', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'position', 'size', 'style', 'trigger', 'wide'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Popup/PopupContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = PopupContent;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A PopupContent displays the content body of a Popover.\n */\nfunction PopupContent(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(PopupContent, props);\n  var ElementType = (0, _lib.getElementType)(PopupContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nPopupContent.handledProps = ['as', 'children', 'className'];\nprocess.env.NODE_ENV !== \"production\" ? PopupContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** The content of the Popup */\n  children: _propTypes2.default.node,\n\n  /** Classes to add to the Popup content className. */\n  className: _propTypes2.default.string\n} : void 0;\n\nPopupContent._meta = {\n  name: 'PopupContent',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Popup'\n};\n\nPopupContent.create = (0, _lib.createShorthandFactory)(PopupContent, function (children) {\n  return { children: children };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Popup/PopupHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = PopupHeader;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A PopupHeader displays a header in a Popover.\n */\nfunction PopupHeader(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(PopupHeader, props);\n  var ElementType = (0, _lib.getElementType)(PopupHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nPopupHeader.handledProps = ['as', 'children', 'className'];\nprocess.env.NODE_ENV !== \"production\" ? PopupHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nPopupHeader._meta = {\n  name: 'PopupHeader',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Popup'\n};\n\nPopupHeader.create = (0, _lib.createShorthandFactory)(PopupHeader, function (children) {\n  return { children: children };\n});","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Progress/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Progress = require('./Progress');\n\nvar _Progress2 = _interopRequireDefault(_Progress);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Progress2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Progress/Progress.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _round2 = require('lodash/round');\n\nvar _round3 = _interopRequireDefault(_round2);\n\nvar _clamp2 = require('lodash/clamp');\n\nvar _clamp3 = _interopRequireDefault(_clamp2);\n\nvar _isUndefined2 = require('lodash/isUndefined');\n\nvar _isUndefined3 = _interopRequireDefault(_isUndefined2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A progress bar shows the progression of a task.\n */\nvar Progress = function (_Component) {\n  (0, _inherits3.default)(Progress, _Component);\n\n  function Progress() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Progress);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Progress.__proto__ || Object.getPrototypeOf(Progress)).call.apply(_ref, [this].concat(args))), _this), _this.calculatePercent = function () {\n      var _this$props = _this.props,\n          percent = _this$props.percent,\n          total = _this$props.total,\n          value = _this$props.value;\n\n\n      if (!(0, _isUndefined3.default)(percent)) return percent;\n      if (!(0, _isUndefined3.default)(total) && !(0, _isUndefined3.default)(value)) return value / total * 100;\n    }, _this.getPercent = function () {\n      var precision = _this.props.precision;\n\n      var percent = (0, _clamp3.default)(_this.calculatePercent(), 0, 100);\n\n      if ((0, _isUndefined3.default)(precision)) return percent;\n      return (0, _round3.default)(percent, precision);\n    }, _this.isAutoSuccess = function () {\n      var _this$props2 = _this.props,\n          autoSuccess = _this$props2.autoSuccess,\n          percent = _this$props2.percent,\n          total = _this$props2.total,\n          value = _this$props2.value;\n\n\n      return autoSuccess && (percent >= 100 || value >= total);\n    }, _this.renderLabel = function () {\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          label = _this$props3.label;\n\n\n      if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n        'div',\n        { className: 'label' },\n        children\n      );\n      return (0, _lib.createHTMLDivision)(label, { defaultProps: { className: 'label' } });\n    }, _this.renderProgress = function (percent) {\n      var _this$props4 = _this.props,\n          precision = _this$props4.precision,\n          progress = _this$props4.progress,\n          total = _this$props4.total,\n          value = _this$props4.value;\n\n\n      if (!progress && (0, _isUndefined3.default)(precision)) return;\n      return _react2.default.createElement(\n        'div',\n        { className: 'progress' },\n        progress !== 'ratio' ? percent + '%' : value + '/' + total\n      );\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Progress, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          attached = _props.attached,\n          className = _props.className,\n          color = _props.color,\n          disabled = _props.disabled,\n          error = _props.error,\n          indicating = _props.indicating,\n          inverted = _props.inverted,\n          size = _props.size,\n          success = _props.success,\n          warning = _props.warning;\n\n\n      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(active || indicating, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(indicating, 'indicating'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(success || this.isAutoSuccess(), 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useValueAndKey)(attached, 'attached'), 'progress', className);\n      var rest = (0, _lib.getUnhandledProps)(Progress, this.props);\n      var ElementType = (0, _lib.getElementType)(Progress, this.props);\n      var percent = this.getPercent();\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        _react2.default.createElement(\n          'div',\n          { className: 'bar', style: { width: percent + '%' } },\n          this.renderProgress(percent)\n        ),\n        this.renderLabel()\n      );\n    }\n  }]);\n  return Progress;\n}(_react.Component);\n\nProgress._meta = {\n  name: 'Progress',\n  type: _lib.META.TYPES.MODULE\n};\nprocess.env.NODE_ENV !== \"production\" ? Progress.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A progress bar can show activity. */\n  active: _propTypes2.default.bool,\n\n  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n  attached: _propTypes2.default.oneOf(['top', 'bottom']),\n\n  /** Whether success state should automatically trigger when progress completes. */\n  autoSuccess: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A progress bar can have different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A progress bar be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** A progress bar can show a error state. */\n  error: _propTypes2.default.bool,\n\n  /** An indicating progress bar visually indicates the current level of progress of a task. */\n  indicating: _propTypes2.default.bool,\n\n  /** A progress bar can have its colors inverted. */\n  inverted: _propTypes2.default.bool,\n\n  /** Can be set to either to display progress as percent or ratio. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** Current percent complete. */\n  percent: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['total', 'value']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),\n\n  /** Decimal point precision for calculated progress. */\n  precision: _propTypes2.default.number,\n\n  /** A progress bar can contain a text value indicating current progress. */\n  progress: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['percent', 'ratio'])]),\n\n  /** A progress bar can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'huge', 'massive')),\n\n  /** A progress bar can show a success state. */\n  success: _propTypes2.default.bool,\n\n  /**\n   * For use with value.\n   * Together, these will calculate the percent.\n   * Mutually excludes percent.\n   */\n  total: _lib.customPropTypes.every([_lib.customPropTypes.demand(['value']), _lib.customPropTypes.disallow(['percent']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),\n\n  /**\n   * For use with total. Together, these will calculate the percent. Mutually excludes percent.\n   */\n  value: _lib.customPropTypes.every([_lib.customPropTypes.demand(['total']), _lib.customPropTypes.disallow(['percent']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),\n\n  /** A progress bar can show a warning state. */\n  warning: _propTypes2.default.bool\n} : void 0;\nProgress.handledProps = ['active', 'as', 'attached', 'autoSuccess', 'children', 'className', 'color', 'disabled', 'error', 'indicating', 'inverted', 'label', 'percent', 'precision', 'progress', 'size', 'success', 'total', 'value', 'warning'];\nexports.default = Progress;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Rating/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Rating = require('./Rating');\n\nvar _Rating2 = _interopRequireDefault(_Rating);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Rating2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Rating/Rating.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _times2 = require('lodash/times');\n\nvar _times3 = _interopRequireDefault(_times2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _RatingIcon = require('./RatingIcon');\n\nvar _RatingIcon2 = _interopRequireDefault(_RatingIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A rating indicates user interest in content.\n */\nvar Rating = function (_Component) {\n  (0, _inherits3.default)(Rating, _Component);\n\n  function Rating() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Rating);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Rating.__proto__ || Object.getPrototypeOf(Rating)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Rating, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          disabled = _props.disabled,\n          icon = _props.icon,\n          maxRating = _props.maxRating,\n          size = _props.size;\n      var _state = this.state,\n          rating = _state.rating,\n          selectedIndex = _state.selectedIndex,\n          isSelecting = _state.isSelecting;\n\n\n      var classes = (0, _classnames2.default)('ui', icon, size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);\n      var rest = (0, _lib.getUnhandledProps)(Rating, this.props);\n      var ElementType = (0, _lib.getElementType)(Rating, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, role: 'radiogroup', onMouseLeave: this.handleMouseLeave }),\n        (0, _times3.default)(maxRating, function (i) {\n          return _react2.default.createElement(_RatingIcon2.default, {\n            active: rating >= i + 1,\n            'aria-checked': rating === i + 1,\n            'aria-posinset': i + 1,\n            'aria-setsize': maxRating,\n            index: i,\n            key: i,\n            onClick: _this2.handleIconClick,\n            onMouseEnter: _this2.handleIconMouseEnter,\n            selected: selectedIndex >= i && isSelecting\n          });\n        })\n      );\n    }\n  }]);\n  return Rating;\n}(_lib.AutoControlledComponent);\n\nRating.autoControlledProps = ['rating'];\nRating.defaultProps = {\n  clearable: 'auto',\n  maxRating: 1\n};\nRating._meta = {\n  name: 'Rating',\n  type: _lib.META.TYPES.MODULE\n};\nRating.Icon = _RatingIcon2.default;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleIconClick = function (e, _ref2) {\n    var index = _ref2.index;\n    var _props2 = _this3.props,\n        clearable = _props2.clearable,\n        disabled = _props2.disabled,\n        maxRating = _props2.maxRating,\n        onRate = _props2.onRate;\n    var rating = _this3.state.rating;\n\n    if (disabled) return;\n\n    // default newRating is the clicked icon\n    // allow toggling a binary rating\n    // allow clearing ratings\n    var newRating = index + 1;\n    if (clearable === 'auto' && maxRating === 1) {\n      newRating = +!rating;\n    } else if (clearable === true && newRating === rating) {\n      newRating = 0;\n    }\n\n    // set rating\n    _this3.trySetState({ rating: newRating }, { isSelecting: false });\n    if (onRate) onRate(e, (0, _extends3.default)({}, _this3.props, { rating: newRating }));\n  };\n\n  this.handleIconMouseEnter = function (e, _ref3) {\n    var index = _ref3.index;\n\n    if (_this3.props.disabled) return;\n\n    _this3.setState({ selectedIndex: index, isSelecting: true });\n  };\n\n  this.handleMouseLeave = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _invoke3.default.apply(undefined, [_this3.props, 'onMouseLeave'].concat(args));\n\n    if (_this3.props.disabled) return;\n\n    _this3.setState({ selectedIndex: -1, isSelecting: false });\n  };\n};\n\nexports.default = Rating;\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /**\n   * You can clear the rating by clicking on the current start rating.\n   * By default a rating will be only clearable if there is 1 icon.\n   * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n   */\n  clearable: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['auto'])]),\n\n  /** The initial rating value. */\n  defaultRating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** You can disable or enable interactive rating.  Makes a read-only rating. */\n  disabled: _propTypes2.default.bool,\n\n  /** A rating can use a set of star or heart icons. */\n  icon: _propTypes2.default.oneOf(['star', 'heart']),\n\n  /** The total number of icons. */\n  maxRating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /**\n   * Called after user selects a new rating.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed rating.\n   */\n  onRate: _propTypes2.default.func,\n\n  /** The current number of active icons. */\n  rating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** A progress bar can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big'))\n} : void 0;\nRating.handledProps = ['as', 'className', 'clearable', 'defaultRating', 'disabled', 'icon', 'maxRating', 'onRate', 'rating', 'size'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Rating/RatingIcon.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An internal icon sub-component for Rating component\n */\nvar RatingIcon = function (_Component) {\n  (0, _inherits3.default)(RatingIcon, _Component);\n\n  function RatingIcon() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, RatingIcon);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RatingIcon.__proto__ || Object.getPrototypeOf(RatingIcon)).call.apply(_ref, [this].concat(args))), _this), _this.defaultProps = {\n      as: 'i'\n    }, _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _this.handleKeyUp = function (e) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          onKeyUp = _this$props.onKeyUp;\n\n\n      if (onKeyUp) onKeyUp(e, _this.props);\n\n      if (onClick) {\n        switch (_lib.keyboardKey.getCode(e)) {\n          case _lib.keyboardKey.Enter:\n          case _lib.keyboardKey.Spacebar:\n            e.preventDefault();\n            onClick(e, _this.props);\n            break;\n          default:\n            return;\n        }\n      }\n    }, _this.handleMouseEnter = function (e) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n\n      if (onMouseEnter) onMouseEnter(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(RatingIcon, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          className = _props.className,\n          selected = _props.selected;\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(selected, 'selected'), 'icon', className);\n      var rest = (0, _lib.getUnhandledProps)(RatingIcon, this.props);\n      var ElementType = (0, _lib.getElementType)(RatingIcon, this.props);\n\n      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, {\n        className: classes,\n        onClick: this.handleClick,\n        onKeyUp: this.handleKeyUp,\n        onMouseEnter: this.handleMouseEnter,\n        tabIndex: 0,\n        role: 'radio'\n      }));\n    }\n  }]);\n  return RatingIcon;\n}(_react.Component);\n\nRatingIcon._meta = {\n  name: 'RatingIcon',\n  parent: 'Rating',\n  type: _lib.META.TYPES.MODULE\n};\nexports.default = RatingIcon;\nprocess.env.NODE_ENV !== \"production\" ? RatingIcon.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Indicates activity of an icon. */\n  active: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** An index of icon inside Rating. */\n  index: _propTypes2.default.number,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * Called on keyup.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onKeyUp: _propTypes2.default.func,\n\n  /**\n   * Called on mouseenter.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onMouseEnter: _propTypes2.default.func,\n\n  /** Indicates selection of an icon. */\n  selected: _propTypes2.default.bool\n} : void 0;\nRatingIcon.handledProps = ['active', 'as', 'className', 'index', 'onClick', 'onKeyUp', 'onMouseEnter', 'selected'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Search/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Search = require('./Search');\n\nvar _Search2 = _interopRequireDefault(_Search);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Search2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Search/Search.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get3 = require('babel-runtime/helpers/get');\n\nvar _get4 = _interopRequireDefault(_get3);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _partialRight2 = require('lodash/partialRight');\n\nvar _partialRight3 = _interopRequireDefault(_partialRight2);\n\nvar _inRange2 = require('lodash/inRange');\n\nvar _inRange3 = _interopRequireDefault(_inRange2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _get5 = require('lodash/get');\n\nvar _get6 = _interopRequireDefault(_get5);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Input = require('../../elements/Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _SearchCategory = require('./SearchCategory');\n\nvar _SearchCategory2 = _interopRequireDefault(_SearchCategory);\n\nvar _SearchResult = require('./SearchResult');\n\nvar _SearchResult2 = _interopRequireDefault(_SearchResult);\n\nvar _SearchResults = require('./SearchResults');\n\nvar _SearchResults2 = _interopRequireDefault(_SearchResults);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _lib.makeDebugger)('search');\n\n/**\n * A search module allows a user to query for results from a selection of data\n */\n\nvar Search = function (_Component) {\n  (0, _inherits3.default)(Search, _Component);\n\n  function Search() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Search);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Search.__proto__ || Object.getPrototypeOf(Search)).call.apply(_ref, [this].concat(args))), _this), _this.handleResultSelect = function (e, result) {\n      debug('handleResultSelect()');\n      debug(result);\n      var onResultSelect = _this.props.onResultSelect;\n\n      if (onResultSelect) onResultSelect(e, result);\n    }, _this.closeOnEscape = function (e) {\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;\n      e.preventDefault();\n      _this.close();\n    }, _this.moveSelectionOnKeyDown = function (e) {\n      debug('moveSelectionOnKeyDown()');\n      debug(_lib.keyboardKey.getName(e));\n      switch (_lib.keyboardKey.getCode(e)) {\n        case _lib.keyboardKey.ArrowDown:\n          e.preventDefault();\n          _this.moveSelectionBy(1);\n          break;\n        case _lib.keyboardKey.ArrowUp:\n          e.preventDefault();\n          _this.moveSelectionBy(-1);\n          break;\n        default:\n          break;\n      }\n    }, _this.selectItemOnEnter = function (e) {\n      debug('selectItemOnEnter()');\n      debug(_lib.keyboardKey.getName(e));\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;\n      e.preventDefault();\n\n      var result = _this.getSelectedResult();\n\n      // prevent selecting null if there was no selected item value\n      if (!result) return;\n\n      // notify the onResultSelect prop that the user is trying to change value\n      _this.setValue(result.title);\n      _this.handleResultSelect(e, result);\n      _this.close();\n    }, _this.closeOnDocumentClick = function (e) {\n      debug('closeOnDocumentClick()');\n      debug(e);\n      _this.close();\n    }, _this.handleMouseDown = function (e) {\n      debug('handleMouseDown()');\n      var onMouseDown = _this.props.onMouseDown;\n\n      if (onMouseDown) onMouseDown(e, _this.props);\n      _this.isMouseDown = true;\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n      document.addEventListener('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleDocumentMouseUp = function () {\n      debug('handleDocumentMouseUp()');\n      _this.isMouseDown = false;\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n      document.removeEventListener('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleInputClick = function (e) {\n      debug('handleInputClick()', e);\n\n      // prevent closeOnDocumentClick()\n      e.nativeEvent.stopImmediatePropagation();\n\n      _this.tryOpen();\n    }, _this.handleItemClick = function (e, _ref2) {\n      var id = _ref2.id;\n\n      debug('handleItemClick()');\n      debug(id);\n      var result = _this.getSelectedResult(id);\n\n      // prevent closeOnDocumentClick()\n      e.nativeEvent.stopImmediatePropagation();\n\n      // notify the onResultSelect prop that the user is trying to change value\n      _this.setValue(result.title);\n      _this.handleResultSelect(e, result);\n      _this.close();\n    }, _this.handleFocus = function (e) {\n      debug('handleFocus()');\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) onFocus(e, _this.props);\n      _this.setState({ focus: true });\n    }, _this.handleBlur = function (e) {\n      debug('handleBlur()');\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) onBlur(e, _this.props);\n      _this.setState({ focus: false });\n    }, _this.handleSearchChange = function (e) {\n      debug('handleSearchChange()');\n      debug(e.target.value);\n      // prevent propagating to this.props.onChange()\n      e.stopPropagation();\n      var _this$props = _this.props,\n          onSearchChange = _this$props.onSearchChange,\n          minCharacters = _this$props.minCharacters;\n      var open = _this.state.open;\n\n      var newQuery = e.target.value;\n\n      if (onSearchChange) onSearchChange(e, newQuery);\n\n      // open search dropdown on search query\n      if (newQuery.length < minCharacters) {\n        _this.close();\n      } else if (!open) {\n        _this.tryOpen(newQuery);\n      }\n\n      _this.setValue(newQuery);\n    }, _this.getFlattenedResults = function () {\n      var _this$props2 = _this.props,\n          category = _this$props2.category,\n          results = _this$props2.results;\n\n\n      return !category ? results : (0, _reduce3.default)(results, function (memo, categoryData) {\n        return memo.concat(categoryData.results);\n      }, []);\n    }, _this.getSelectedResult = function () {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;\n\n      var results = _this.getFlattenedResults();\n      return (0, _get6.default)(results, index);\n    }, _this.setValue = function (value) {\n      debug('setValue()');\n      debug('value', value);\n\n      var selectFirstResult = _this.props.selectFirstResult;\n\n\n      _this.trySetState({ value: value }, { selectedIndex: selectFirstResult ? 0 : -1 });\n    }, _this.moveSelectionBy = function (offset) {\n      debug('moveSelectionBy()');\n      debug('offset: ' + offset);\n      var selectedIndex = _this.state.selectedIndex;\n\n\n      var results = _this.getFlattenedResults();\n      var lastIndex = results.length - 1;\n\n      // next is after last, wrap to beginning\n      // next is before first, wrap to end\n      var nextIndex = selectedIndex + offset;\n      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;\n\n      _this.setState({ selectedIndex: nextIndex });\n      _this.scrollSelectedItemIntoView();\n    }, _this.scrollSelectedItemIntoView = function () {\n      debug('scrollSelectedItemIntoView()');\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n      var menu = document.querySelector('.ui.search.active.visible .results.visible');\n      var item = menu.querySelector('.result.active');\n      debug('menu (results): ' + menu);\n      debug('item (result): ' + item);\n      var isOutOfUpperView = item.offsetTop < menu.scrollTop;\n      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;\n\n      if (isOutOfUpperView) {\n        menu.scrollTop = item.offsetTop;\n      } else if (isOutOfLowerView) {\n        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;\n      }\n    }, _this.tryOpen = function () {\n      var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;\n\n      debug('open()');\n\n      var minCharacters = _this.props.minCharacters;\n\n      if (currentValue.length < minCharacters) return;\n\n      _this.open();\n    }, _this.open = function () {\n      debug('open()');\n      _this.trySetState({ open: true });\n    }, _this.close = function () {\n      debug('close()');\n      _this.trySetState({ open: false });\n    }, _this.renderSearchInput = function (rest) {\n      var _this$props3 = _this.props,\n          icon = _this$props3.icon,\n          input = _this$props3.input;\n      var value = _this.state.value;\n\n\n      return _Input2.default.create(input, { defaultProps: (0, _extends3.default)({}, rest, {\n          icon: icon,\n          input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },\n          onBlur: _this.handleBlur,\n          onChange: _this.handleSearchChange,\n          onClick: _this.handleInputClick,\n          onFocus: _this.handleFocus,\n          value: value\n        }) });\n    }, _this.renderNoResults = function () {\n      var _this$props4 = _this.props,\n          noResultsDescription = _this$props4.noResultsDescription,\n          noResultsMessage = _this$props4.noResultsMessage;\n\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'message empty' },\n        _react2.default.createElement(\n          'div',\n          { className: 'header' },\n          noResultsMessage\n        ),\n        noResultsDescription && _react2.default.createElement(\n          'div',\n          { className: 'description' },\n          noResultsDescription\n        )\n      );\n    }, _this.renderResult = function (_ref3, index, _array) {\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var childKey = _ref3.childKey,\n          result = (0, _objectWithoutProperties3.default)(_ref3, ['childKey']);\n      var resultRenderer = _this.props.resultRenderer;\n      var selectedIndex = _this.state.selectedIndex;\n\n      var offsetIndex = index + offset;\n\n      return _react2.default.createElement(_SearchResult2.default, (0, _extends3.default)({\n        key: childKey || result.title,\n        active: selectedIndex === offsetIndex,\n        onClick: _this.handleItemClick,\n        renderer: resultRenderer\n      }, result, {\n        id: offsetIndex // Used to lookup the result on item click\n      }));\n    }, _this.renderResults = function () {\n      var results = _this.props.results;\n\n\n      return (0, _map3.default)(results, _this.renderResult);\n    }, _this.renderCategories = function () {\n      var _this$props5 = _this.props,\n          categoryRenderer = _this$props5.categoryRenderer,\n          categories = _this$props5.results;\n      var selectedIndex = _this.state.selectedIndex;\n\n\n      var count = 0;\n\n      return (0, _map3.default)(categories, function (_ref4, name, index) {\n        var childKey = _ref4.childKey,\n            category = (0, _objectWithoutProperties3.default)(_ref4, ['childKey']);\n\n        var categoryProps = (0, _extends3.default)({\n          key: childKey || category.name,\n          active: (0, _inRange3.default)(selectedIndex, count, count + category.results.length),\n          renderer: categoryRenderer\n        }, category);\n        var renderFn = (0, _partialRight3.default)(_this.renderResult, count);\n\n        count = count + category.results.length;\n\n        return _react2.default.createElement(\n          _SearchCategory2.default,\n          categoryProps,\n          category.results.map(renderFn)\n        );\n      });\n    }, _this.renderMenuContent = function () {\n      var _this$props6 = _this.props,\n          category = _this$props6.category,\n          showNoResults = _this$props6.showNoResults,\n          results = _this$props6.results;\n\n\n      if ((0, _isEmpty3.default)(results)) {\n        return showNoResults ? _this.renderNoResults() : null;\n      }\n\n      return category ? _this.renderCategories() : _this.renderResults();\n    }, _this.renderResultsMenu = function () {\n      var open = _this.state.open;\n\n      var resultsClasses = open ? 'visible' : '';\n      var menuContent = _this.renderMenuContent();\n\n      if (!menuContent) return;\n\n      return _react2.default.createElement(\n        _SearchResults2.default,\n        { className: resultsClasses },\n        menuContent\n      );\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Search, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if ((0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this)) (0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this).call(this);\n      debug('componentWillMount()');\n      var _state = this.state,\n          open = _state.open,\n          value = _state.value;\n\n\n      this.setValue(value);\n      if (open) this.open();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      (0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n      debug('componentWillReceiveProps()');\n      // TODO objectDiff still runs in prod, stop it\n      debug('changed props:', (0, _lib.objectDiff)(nextProps, this.props));\n\n      if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {\n        debug('value changed, setting', nextProps.value);\n        this.setValue(nextProps.value);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      // eslint-disable-line complexity\n      debug('componentDidUpdate()');\n      // TODO objectDiff still runs in prod, stop it\n      debug('to state:', (0, _lib.objectDiff)(prevState, this.state));\n\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n\n      // focused / blurred\n      if (!prevState.focus && this.state.focus) {\n        debug('search focused');\n        if (!this.isMouseDown) {\n          debug('mouse is not down, opening');\n          this.tryOpen();\n        }\n        if (this.state.open) {\n          document.addEventListener('keydown', this.moveSelectionOnKeyDown);\n          document.addEventListener('keydown', this.selectItemOnEnter);\n        }\n      } else if (prevState.focus && !this.state.focus) {\n        debug('search blurred');\n        if (!this.isMouseDown) {\n          debug('mouse is not down, closing');\n          this.close();\n        }\n        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.removeEventListener('keydown', this.selectItemOnEnter);\n      }\n\n      // opened / closed\n      if (!prevState.open && this.state.open) {\n        debug('search opened');\n        this.open();\n        document.addEventListener('keydown', this.closeOnEscape);\n        document.addEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.addEventListener('keydown', this.selectItemOnEnter);\n        document.addEventListener('click', this.closeOnDocumentClick);\n      } else if (prevState.open && !this.state.open) {\n        debug('search closed');\n        this.close();\n        document.removeEventListener('keydown', this.closeOnEscape);\n        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n        document.removeEventListener('keydown', this.selectItemOnEnter);\n        document.removeEventListener('click', this.closeOnDocumentClick);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      debug('componentWillUnmount()');\n\n      // Do not access document when server side rendering\n      if (!_lib.isBrowser) return;\n\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown);\n      document.removeEventListener('keydown', this.selectItemOnEnter);\n      document.removeEventListener('keydown', this.closeOnEscape);\n      document.removeEventListener('click', this.closeOnDocumentClick);\n    }\n\n    // ----------------------------------------\n    // Document Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Component Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Getters\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Setters\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Behavior\n    // ----------------------------------------\n\n    // Open if the current value is greater than the minCharacters prop\n\n\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n\n    /**\n     * Offset is needed for determining the active item for results within a\n     * category. Since the index is reset to 0 for each new category, an offset\n     * must be passed in.\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      debug('render()');\n      debug('props', this.props);\n      debug('state', this.state);\n      var _state2 = this.state,\n          searchClasses = _state2.searchClasses,\n          focus = _state2.focus,\n          open = _state2.open;\n      var _props = this.props,\n          aligned = _props.aligned,\n          category = _props.category,\n          className = _props.className,\n          fluid = _props.fluid,\n          loading = _props.loading,\n          size = _props.size;\n\n      // Classes\n\n      var classes = (0, _classnames2.default)('ui', open && 'active visible', size, searchClasses, (0, _lib.useKeyOnly)(category, 'category'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(aligned, 'aligned'), 'search', className);\n      var unhandled = (0, _lib.getUnhandledProps)(Search, this.props);\n      var ElementType = (0, _lib.getElementType)(Search, this.props);\n\n      var _partitionHTMLInputPr = (0, _lib.partitionHTMLInputProps)(unhandled, _lib.htmlInputAttrs),\n          _partitionHTMLInputPr2 = (0, _slicedToArray3.default)(_partitionHTMLInputPr, 2),\n          htmlInputProps = _partitionHTMLInputPr2[0],\n          rest = _partitionHTMLInputPr2[1];\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, {\n          className: classes,\n          onBlur: this.handleBlur,\n          onFocus: this.handleFocus,\n          onMouseDown: this.handleMouseDown\n        }),\n        this.renderSearchInput(htmlInputProps),\n        this.renderResultsMenu()\n      );\n    }\n  }]);\n  return Search;\n}(_lib.AutoControlledComponent);\n\nSearch.defaultProps = {\n  icon: 'search',\n  input: 'text',\n  minCharacters: 1,\n  noResultsMessage: 'No results found.',\n  showNoResults: true\n};\nSearch.autoControlledProps = ['open', 'value'];\nSearch._meta = {\n  name: 'Search',\n  type: _lib.META.TYPES.MODULE\n};\nSearch.Category = _SearchCategory2.default;\nSearch.Result = _SearchResult2.default;\nSearch.Results = _SearchResults2.default;\nexports.default = Search;\nprocess.env.NODE_ENV !== \"production\" ? Search.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  // ------------------------------------\n  // Behavior\n  // ------------------------------------\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** Initial value. */\n  defaultValue: _propTypes2.default.string,\n\n  /** Shorthand for Icon. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),\n\n  /** Minimum characters to query for results */\n  minCharacters: _propTypes2.default.number,\n\n  /** Additional text for \"No Results\" message with less emphasis. */\n  noResultsDescription: _propTypes2.default.string,\n\n  /** Message to display when there are no results. */\n  noResultsMessage: _propTypes2.default.string,\n\n  /** Controls whether or not the results menu is displayed. */\n  open: _propTypes2.default.bool,\n\n  /**\n   * One of:\n   * - array of Search.Result props e.g. `{ title: '', description: '' }` or\n   * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`\n   */\n  results: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.shape(_SearchResult2.default.propTypes)), _propTypes2.default.object]),\n\n  /** Whether the search should automatically select the first result after searching. */\n  selectFirstResult: _propTypes2.default.bool,\n\n  /** Whether a \"no results\" message should be shown if no results are found. */\n  showNoResults: _propTypes2.default.bool,\n\n  /** Current value of the search input. Creates a controlled component. */\n  value: _propTypes2.default.string,\n\n  // ------------------------------------\n  // Rendering\n  // ------------------------------------\n\n  /**\n   * Renders the SearchCategory contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable SearchCategory contents.\n   */\n  categoryRenderer: _propTypes2.default.func,\n\n  /**\n   * Renders the SearchResult contents.\n   *\n   * @param {object} props - The SearchResult props object.\n   * @returns {*} - Renderable SearchResult contents.\n   */\n  resultRenderer: _propTypes2.default.func,\n\n  // ------------------------------------\n  // Callbacks\n  // ------------------------------------\n\n  /**\n   * Called on blur.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBlur: _propTypes2.default.func,\n\n  /**\n   * Called on focus.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onFocus: _propTypes2.default.func,\n\n  /**\n   * Called on mousedown.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onMouseDown: _propTypes2.default.func,\n\n  /**\n   * Called when a result is selected.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onResultSelect: _propTypes2.default.func,\n\n  /**\n   * Called on search input change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {string} value - Current value of search input.\n   */\n  onSearchChange: _propTypes2.default.func,\n\n  // ------------------------------------\n  // Style\n  // ------------------------------------\n\n  /** A search can have its results aligned to its left or right container edge. */\n  aligned: _propTypes2.default.string,\n\n  /** A search can display results from remote content ordered by categories. */\n  category: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A search can have its results take up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** A search input can take up the width of its container. */\n  input: _lib.customPropTypes.itemShorthand,\n\n  /** A search can show a loading indicator. */\n  loading: _propTypes2.default.bool,\n\n  /** A search can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : void 0;\nSearch.handledProps = ['aligned', 'as', 'category', 'categoryRenderer', 'className', 'defaultOpen', 'defaultValue', 'fluid', 'icon', 'input', 'loading', 'minCharacters', 'noResultsDescription', 'noResultsMessage', 'onBlur', 'onFocus', 'onMouseDown', 'onResultSelect', 'onSearchChange', 'open', 'resultRenderer', 'results', 'selectFirstResult', 'showNoResults', 'size', 'value'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Search/SearchCategory.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction SearchCategory(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      renderer = props.renderer;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'category', className);\n  var rest = (0, _lib.getUnhandledProps)(SearchCategory, props);\n  var ElementType = (0, _lib.getElementType)(SearchCategory, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _react2.default.createElement(\n      'div',\n      { className: 'name' },\n      renderer(props)\n    ),\n    children\n  );\n}\n\nSearchCategory.handledProps = ['active', 'as', 'children', 'className', 'name', 'renderer', 'results'];\nSearchCategory._meta = {\n  name: 'SearchCategory',\n  parent: 'Search',\n  type: _lib.META.TYPES.MODULE\n};\n\nSearchCategory.defaultProps = {\n  renderer: function renderer(_ref) {\n    var name = _ref.name;\n    return name;\n  }\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SearchCategory.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Display name. */\n  name: _propTypes2.default.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: _propTypes2.default.func,\n\n  /** Array of Search.Result props. */\n  results: _propTypes2.default.array\n} : void 0;\n\nexports.default = SearchCategory;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Search/SearchResult.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Note: You technically only need the 'content' wrapper when there's an\n// image. However, optionally wrapping it makes this function a lot more\n// complicated and harder to read. Since always wrapping it doesn't affect\n// the style in any way let's just do that.\n//\n// Note: To avoid requiring a wrapping div, we return an array here so to\n// prevent rendering issues each node needs a unique key.\nvar defaultRenderer = function defaultRenderer(_ref) {\n  var image = _ref.image,\n      price = _ref.price,\n      title = _ref.title,\n      description = _ref.description;\n  return [image && _react2.default.createElement(\n    'div',\n    { key: 'image', className: 'image' },\n    (0, _lib.createHTMLImage)(image)\n  ), _react2.default.createElement(\n    'div',\n    { key: 'content', className: 'content' },\n    price && _react2.default.createElement(\n      'div',\n      { className: 'price' },\n      price\n    ),\n    title && _react2.default.createElement(\n      'div',\n      { className: 'title' },\n      title\n    ),\n    description && _react2.default.createElement(\n      'div',\n      { className: 'description' },\n      description\n    )\n  )];\n};\n\ndefaultRenderer.handledProps = [];\n\nvar SearchResult = function (_Component) {\n  (0, _inherits3.default)(SearchResult, _Component);\n\n  function SearchResult() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, SearchResult);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = SearchResult.__proto__ || Object.getPrototypeOf(SearchResult)).call.apply(_ref2, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(SearchResult, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          className = _props.className,\n          renderer = _props.renderer;\n\n\n      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'result', className);\n      var rest = (0, _lib.getUnhandledProps)(SearchResult, this.props);\n      var ElementType = (0, _lib.getElementType)(SearchResult, this.props);\n\n      // Note: You technically only need the 'content' wrapper when there's an\n      // image. However, optionally wrapping it makes this function a lot more\n      // complicated and harder to read. Since always wrapping it doesn't affect\n      // the style in any way let's just do that.\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),\n        renderer(this.props)\n      );\n    }\n  }]);\n  return SearchResult;\n}(_react.Component);\n\nSearchResult.defaultProps = {\n  renderer: defaultRenderer\n};\nSearchResult._meta = {\n  name: 'SearchResult',\n  parent: 'Search',\n  type: _lib.META.TYPES.MODULE\n};\nexports.default = SearchResult;\nprocess.env.NODE_ENV !== \"production\" ? SearchResult.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Additional text with less emphasis. */\n  description: _propTypes2.default.string,\n\n  /** A unique identifier. */\n  id: _propTypes2.default.number,\n\n  /** Add an image to the item. */\n  image: _propTypes2.default.string,\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** Customized text for price. */\n  price: _propTypes2.default.string,\n\n  /**\n   * Renders the result contents.\n   *\n   * @param {object} props - The SearchResult props object.\n   * @returns {*} - Renderable result contents.\n   */\n  renderer: _propTypes2.default.func,\n\n  /** Display title. */\n  title: _propTypes2.default.string\n} : void 0;\nSearchResult.handledProps = ['active', 'as', 'className', 'description', 'id', 'image', 'onClick', 'price', 'renderer', 'title'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Search/SearchResults.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction SearchResults(props) {\n  var children = props.children,\n      className = props.className;\n\n  var classes = (0, _classnames2.default)('results transition', className);\n  var rest = (0, _lib.getUnhandledProps)(SearchResults, props);\n  var ElementType = (0, _lib.getElementType)(SearchResults, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nSearchResults.handledProps = ['as', 'children', 'className'];\nSearchResults._meta = {\n  name: 'SearchResults',\n  parent: 'Search',\n  type: _lib.META.TYPES.MODULE\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SearchResults.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = SearchResults;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Sidebar/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Sidebar = require('./Sidebar');\n\nvar _Sidebar2 = _interopRequireDefault(_Sidebar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Sidebar2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Sidebar/Sidebar.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _SidebarPushable = require('./SidebarPushable');\n\nvar _SidebarPushable2 = _interopRequireDefault(_SidebarPushable);\n\nvar _SidebarPusher = require('./SidebarPusher');\n\nvar _SidebarPusher2 = _interopRequireDefault(_SidebarPusher);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A sidebar hides additional content beside a page.\n */\nvar Sidebar = function (_Component) {\n  (0, _inherits3.default)(Sidebar, _Component);\n\n  function Sidebar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Sidebar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Sidebar.__proto__ || Object.getPrototypeOf(Sidebar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.startAnimating = function () {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n\n      clearTimeout(_this.stopAnimatingTimer);\n\n      _this.setState({ animating: true });\n\n      _this.stopAnimatingTimer = setTimeout(function () {\n        return _this.setState({ animating: false });\n      }, duration);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Sidebar, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.visible !== this.props.visible) {\n        this.startAnimating();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          animation = _props.animation,\n          className = _props.className,\n          children = _props.children,\n          direction = _props.direction,\n          visible = _props.visible,\n          width = _props.width;\n      var animating = this.state.animating;\n\n\n      var classes = (0, _classnames2.default)('ui', animation, direction, width, (0, _lib.useKeyOnly)(animating, 'animating'), (0, _lib.useKeyOnly)(visible, 'visible'), 'sidebar', className);\n\n      var rest = (0, _lib.getUnhandledProps)(Sidebar, this.props);\n      var ElementType = (0, _lib.getElementType)(Sidebar, this.props);\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes }),\n        children\n      );\n    }\n  }]);\n  return Sidebar;\n}(_lib.AutoControlledComponent);\n\nSidebar.defaultProps = {\n  direction: 'left'\n};\nSidebar.autoControlledProps = ['visible'];\nSidebar._meta = {\n  name: 'Sidebar',\n  type: _lib.META.TYPES.MODULE\n};\nSidebar.Pushable = _SidebarPushable2.default;\nSidebar.Pusher = _SidebarPusher2.default;\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Animation style. */\n  animation: _propTypes2.default.oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Initial value of visible. */\n  defaultVisible: _propTypes2.default.bool,\n\n  /** Direction the sidebar should appear on. */\n  direction: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),\n\n  /** Controls whether or not the sidebar is visible on the page. */\n  visible: _propTypes2.default.bool,\n\n  /** Sidebar width. */\n  width: _propTypes2.default.oneOf(['very thin', 'thin', 'wide', 'very wide'])\n} : void 0;\nSidebar.handledProps = ['animation', 'as', 'children', 'className', 'defaultVisible', 'direction', 'visible', 'width'];\nexports.default = Sidebar;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Sidebar/SidebarPushable.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A pushable sub-component for Sidebar.\n */\nfunction SidebarPushable(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)('pushable', className);\n  var rest = (0, _lib.getUnhandledProps)(SidebarPushable, props);\n  var ElementType = (0, _lib.getElementType)(SidebarPushable, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nSidebarPushable.handledProps = ['as', 'children', 'className'];\nSidebarPushable._meta = {\n  name: 'SidebarPushable',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Sidebar'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SidebarPushable.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = SidebarPushable;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/modules/Sidebar/SidebarPusher.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A pushable sub-component for Sidebar.\n */\nfunction SidebarPusher(props) {\n  var className = props.className,\n      dimmed = props.dimmed,\n      children = props.children;\n\n\n  var classes = (0, _classnames2.default)('pusher', (0, _lib.useKeyOnly)(dimmed, 'dimmed'), className);\n  var rest = (0, _lib.getUnhandledProps)(SidebarPusher, props);\n  var ElementType = (0, _lib.getElementType)(SidebarPusher, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nSidebarPusher.handledProps = ['as', 'children', 'className', 'dimmed'];\nSidebarPusher._meta = {\n  name: 'SidebarPusher',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Sidebar'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SidebarPusher.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Controls whether or not the dim is displayed. */\n  dimmed: _propTypes2.default.bool\n} : void 0;\n\nexports.default = SidebarPusher;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Advertisement/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Advertisement = require('./Advertisement');\n\nvar _Advertisement2 = _interopRequireDefault(_Advertisement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Advertisement2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Advertisement/Advertisement.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An ad displays third-party promotional content.\n */\nfunction Advertisement(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      test = props.test,\n      unit = props.unit;\n\n\n  var classes = (0, _classnames2.default)('ui', unit, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(test, 'test'), 'ad', className);\n  var rest = (0, _lib.getUnhandledProps)(Advertisement, props);\n  var ElementType = (0, _lib.getElementType)(Advertisement, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes, 'data-text': test }),\n    children\n  );\n}\n\nAdvertisement.handledProps = ['as', 'centered', 'children', 'className', 'test', 'unit'];\nAdvertisement._meta = {\n  name: 'Advertisement',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Advertisement.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Center the advertisement. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Text to be displayed on the advertisement. */\n  test: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),\n\n  /** Varies the size of the advertisement. */\n  unit: _propTypes2.default.oneOf(['medium rectangle', 'large rectangle', 'vertical rectangle', 'small rectangle', 'mobile banner', 'banner', 'vertical banner', 'top banner', 'half banner', 'button', 'square button', 'small button', 'skyscraper', 'wide skyscraper', 'leaderboard', 'large leaderboard', 'mobile leaderboard', 'billboard', 'panorama', 'netboard', 'half page', 'square', 'small square']).isRequired\n\n} : void 0;\n\nexports.default = Advertisement;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/Card.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _CardContent = require('./CardContent');\n\nvar _CardContent2 = _interopRequireDefault(_CardContent);\n\nvar _CardDescription = require('./CardDescription');\n\nvar _CardDescription2 = _interopRequireDefault(_CardDescription);\n\nvar _CardGroup = require('./CardGroup');\n\nvar _CardGroup2 = _interopRequireDefault(_CardGroup);\n\nvar _CardHeader = require('./CardHeader');\n\nvar _CardHeader2 = _interopRequireDefault(_CardHeader);\n\nvar _CardMeta = require('./CardMeta');\n\nvar _CardMeta2 = _interopRequireDefault(_CardMeta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A card displays site content in a manner similar to a playing card.\n */\nvar Card = function (_Component) {\n  (0, _inherits3.default)(Card, _Component);\n\n  function Card() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Card);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Card.__proto__ || Object.getPrototypeOf(Card)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n\n      if (onClick) onClick(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Card, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          centered = _props.centered,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          description = _props.description,\n          extra = _props.extra,\n          fluid = _props.fluid,\n          header = _props.header,\n          href = _props.href,\n          image = _props.image,\n          link = _props.link,\n          meta = _props.meta,\n          onClick = _props.onClick,\n          raised = _props.raised;\n\n\n      var classes = (0, _classnames2.default)('ui', color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(raised, 'raised'), 'card', className);\n      var rest = (0, _lib.getUnhandledProps)(Card, this.props);\n      var ElementType = (0, _lib.getElementType)(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!(0, _isNil3.default)(children)) {\n        return _react2.default.createElement(\n          ElementType,\n          (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),\n          children\n        );\n      }\n\n      return _react2.default.createElement(\n        ElementType,\n        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),\n        _Image2.default.create(image),\n        (description || header || meta) && _react2.default.createElement(_CardContent2.default, { description: description, header: header, meta: meta }),\n        extra && _react2.default.createElement(\n          _CardContent2.default,\n          { extra: true },\n          extra\n        )\n      );\n    }\n  }]);\n  return Card;\n}(_react.Component);\n\nCard._meta = {\n  name: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\nCard.Content = _CardContent2.default;\nCard.Description = _CardDescription2.default;\nCard.Group = _CardGroup2.default;\nCard.Header = _CardHeader2.default;\nCard.Meta = _CardMeta2.default;\nexports.default = Card;\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for CardDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: _lib.customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Shorthand for CardHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: _propTypes2.default.string,\n\n  /** A card can contain an Image component. */\n  image: _lib.customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: _propTypes2.default.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: _lib.customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: _propTypes2.default.bool\n} : void 0;\nCard.handledProps = ['as', 'centered', 'children', 'className', 'color', 'description', 'extra', 'fluid', 'header', 'href', 'image', 'link', 'meta', 'onClick', 'raised'];","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/CardContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _CardDescription = require('./CardDescription');\n\nvar _CardDescription2 = _interopRequireDefault(_CardDescription);\n\nvar _CardHeader = require('./CardHeader');\n\nvar _CardHeader2 = _interopRequireDefault(_CardHeader);\n\nvar _CardMeta = require('./CardMeta');\n\nvar _CardMeta2 = _interopRequireDefault(_CardMeta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta;\n\n\n  var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(extra, 'extra'), 'content');\n  var rest = (0, _lib.getUnhandledProps)(CardContent, props);\n  var ElementType = (0, _lib.getElementType)(CardContent, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_CardHeader2.default, function (val) {\n      return { content: val };\n    }, header),\n    (0, _lib.createShorthand)(_CardMeta2.default, function (val) {\n      return { content: val };\n    }, meta),\n    (0, _lib.createShorthand)(_CardDescription2.default, function (val) {\n      return { content: val };\n    }, description)\n  );\n}\n\nCardContent.handledProps = ['as', 'children', 'className', 'description', 'extra', 'header', 'meta'];\nCardContent._meta = {\n  name: 'CardContent',\n  parent: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for CardDescription. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: _propTypes2.default.bool,\n\n  /** Shorthand for CardHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = CardContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/CardDescription.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A card can contain a description with one or more paragraphs.\n */\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)(className, 'description');\n  var rest = (0, _lib.getUnhandledProps)(CardDescription, props);\n  var ElementType = (0, _lib.getElementType)(CardDescription, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nCardDescription.handledProps = ['as', 'children', 'className', 'content'];\nCardDescription._meta = {\n  name: 'CardDescription',\n  parent: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CardDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = CardDescription;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/CardHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A card can contain a header.\n */\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)(className, 'header');\n  var rest = (0, _lib.getUnhandledProps)(CardHeader, props);\n  var ElementType = (0, _lib.getElementType)(CardHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nCardHeader.handledProps = ['as', 'children', 'className', 'content'];\nCardHeader._meta = {\n  name: 'CardHeader',\n  parent: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = CardHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/CardMeta.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A card can contain content metadata.\n */\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)(className, 'meta');\n  var rest = (0, _lib.getUnhandledProps)(CardMeta, props);\n  var ElementType = (0, _lib.getElementType)(CardMeta, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nCardMeta.handledProps = ['as', 'children', 'className', 'content'];\nCardMeta._meta = {\n  name: 'CardMeta',\n  parent: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CardMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = CardMeta;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Card/CardGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Card = require('./Card');\n\nvar _Card2 = _interopRequireDefault(_Card);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A group of cards.\n */\nfunction CardGroup(props) {\n  var children = props.children,\n      className = props.className,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable;\n\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useWidthProp)(itemsPerRow), className, 'cards');\n  var rest = (0, _lib.getUnhandledProps)(CardGroup, props);\n  var ElementType = (0, _lib.getElementType)(CardGroup, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var content = (0, _map3.default)(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return _react2.default.createElement(_Card2.default, (0, _extends3.default)({ key: key }, item));\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content\n  );\n}\n\nCardGroup.handledProps = ['as', 'children', 'className', 'doubling', 'items', 'itemsPerRow', 'stackable'];\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CardGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: _propTypes2.default.bool,\n\n  /** Shorthand array of props for Card. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: _propTypes2.default.bool\n} : void 0;\n\nexports.default = CardGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Comment = require('./Comment');\n\nvar _Comment2 = _interopRequireDefault(_Comment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Comment2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/Comment.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _CommentAction = require('./CommentAction');\n\nvar _CommentAction2 = _interopRequireDefault(_CommentAction);\n\nvar _CommentActions = require('./CommentActions');\n\nvar _CommentActions2 = _interopRequireDefault(_CommentActions);\n\nvar _CommentAuthor = require('./CommentAuthor');\n\nvar _CommentAuthor2 = _interopRequireDefault(_CommentAuthor);\n\nvar _CommentAvatar = require('./CommentAvatar');\n\nvar _CommentAvatar2 = _interopRequireDefault(_CommentAvatar);\n\nvar _CommentContent = require('./CommentContent');\n\nvar _CommentContent2 = _interopRequireDefault(_CommentContent);\n\nvar _CommentGroup = require('./CommentGroup');\n\nvar _CommentGroup2 = _interopRequireDefault(_CommentGroup);\n\nvar _CommentMetadata = require('./CommentMetadata');\n\nvar _CommentMetadata2 = _interopRequireDefault(_CommentMetadata);\n\nvar _CommentText = require('./CommentText');\n\nvar _CommentText2 = _interopRequireDefault(_CommentText);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment displays user feedback to site content.\n */\nfunction Comment(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(collapsed, 'collapsed'), 'comment', className);\n  var rest = (0, _lib.getUnhandledProps)(Comment, props);\n  var ElementType = (0, _lib.getElementType)(Comment, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nComment.handledProps = ['as', 'children', 'className', 'collapsed'];\nComment._meta = {\n  name: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Comment.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Comment can be collapsed, or hidden from view. */\n  collapsed: _propTypes2.default.bool\n} : void 0;\n\nComment.Author = _CommentAuthor2.default;\nComment.Action = _CommentAction2.default;\nComment.Actions = _CommentActions2.default;\nComment.Avatar = _CommentAvatar2.default;\nComment.Content = _CommentContent2.default;\nComment.Group = _CommentGroup2.default;\nComment.Metadata = _CommentMetadata2.default;\nComment.Text = _CommentText2.default;\n\nexports.default = Comment;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentAction.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain an action.\n */\nfunction CommentAction(props) {\n  var active = props.active,\n      className = props.className,\n      children = props.children;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), className);\n  var rest = (0, _lib.getUnhandledProps)(CommentAction, props);\n  var ElementType = (0, _lib.getElementType)(CommentAction, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentAction.handledProps = ['active', 'as', 'children', 'className'];\nCommentAction._meta = {\n  name: 'CommentAction',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nCommentAction.defaultProps = {\n  as: 'a'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentAction.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Style as the currently active action. */\n  active: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentAction;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentActions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain an list of actions a user may perform related to this comment.\n */\nfunction CommentActions(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)('actions', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentActions, props);\n  var ElementType = (0, _lib.getElementType)(CommentActions, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentActions.handledProps = ['as', 'children', 'className'];\nCommentActions._meta = {\n  name: 'CommentActions',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentActions.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentActions;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentAuthor.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain an author.\n */\nfunction CommentAuthor(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)('author', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentAuthor, props);\n  var ElementType = (0, _lib.getElementType)(CommentAuthor, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentAuthor.handledProps = ['as', 'children', 'className'];\nCommentAuthor._meta = {\n  name: 'CommentAuthor',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentAuthor.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentAuthor;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentAvatar.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain an image or avatar.\n */\nfunction CommentAvatar(props) {\n  var className = props.className,\n      src = props.src;\n\n  var classes = (0, _classnames2.default)('avatar', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentAvatar, props);\n  var ElementType = (0, _lib.getElementType)(CommentAvatar, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createHTMLImage)(src)\n  );\n}\n\nCommentAvatar.handledProps = ['as', 'className', 'src'];\nCommentAvatar._meta = {\n  name: 'CommentAvatar',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentAvatar.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Specifies the URL of the image. */\n  src: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentAvatar;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain content.\n */\nfunction CommentContent(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)(className, 'content');\n  var rest = (0, _lib.getUnhandledProps)(CommentContent, props);\n  var ElementType = (0, _lib.getElementType)(CommentContent, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentContent.handledProps = ['as', 'children', 'className'];\nCommentContent._meta = {\n  name: 'CommentContent',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Comments can be grouped.\n */\nfunction CommentGroup(props) {\n  var className = props.className,\n      children = props.children,\n      collapsed = props.collapsed,\n      minimal = props.minimal,\n      size = props.size,\n      threaded = props.threaded;\n\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(collapsed, 'collapsed'), (0, _lib.useKeyOnly)(minimal, 'minimal'), (0, _lib.useKeyOnly)(threaded, 'threaded'), 'comments', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentGroup, props);\n  var ElementType = (0, _lib.getElementType)(CommentGroup, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentGroup.handledProps = ['as', 'children', 'className', 'collapsed', 'minimal', 'size', 'threaded'];\nCommentGroup._meta = {\n  name: 'CommentGroup',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: _propTypes2.default.bool,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: _propTypes2.default.bool,\n\n  /** Comments can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: _propTypes2.default.bool\n} : void 0;\n\nexports.default = CommentGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentMetadata.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.\n */\nfunction CommentMetadata(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)('metadata', className);\n  var rest = (0, _lib.getUnhandledProps)(CommentMetadata, props);\n  var ElementType = (0, _lib.getElementType)(CommentMetadata, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentMetadata.handledProps = ['as', 'children', 'className'];\nCommentMetadata._meta = {\n  name: 'CommentMetadata',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentMetadata.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentMetadata;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Comment/CommentText.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A comment can contain text.\n */\nfunction CommentText(props) {\n  var className = props.className,\n      children = props.children;\n\n  var classes = (0, _classnames2.default)(className, 'text');\n  var rest = (0, _lib.getUnhandledProps)(CommentText, props);\n  var ElementType = (0, _lib.getElementType)(CommentText, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n}\n\nCommentText.handledProps = ['as', 'children', 'className'];\nCommentText._meta = {\n  name: 'CommentText',\n  parent: 'Comment',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommentText.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string\n} : void 0;\n\nexports.default = CommentText;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Feed = require('./Feed');\n\nvar _Feed2 = _interopRequireDefault(_Feed);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Feed2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/Feed.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FeedContent = require('./FeedContent');\n\nvar _FeedContent2 = _interopRequireDefault(_FeedContent);\n\nvar _FeedDate = require('./FeedDate');\n\nvar _FeedDate2 = _interopRequireDefault(_FeedDate);\n\nvar _FeedEvent = require('./FeedEvent');\n\nvar _FeedEvent2 = _interopRequireDefault(_FeedEvent);\n\nvar _FeedExtra = require('./FeedExtra');\n\nvar _FeedExtra2 = _interopRequireDefault(_FeedExtra);\n\nvar _FeedLabel = require('./FeedLabel');\n\nvar _FeedLabel2 = _interopRequireDefault(_FeedLabel);\n\nvar _FeedLike = require('./FeedLike');\n\nvar _FeedLike2 = _interopRequireDefault(_FeedLike);\n\nvar _FeedMeta = require('./FeedMeta');\n\nvar _FeedMeta2 = _interopRequireDefault(_FeedMeta);\n\nvar _FeedSummary = require('./FeedSummary');\n\nvar _FeedSummary2 = _interopRequireDefault(_FeedSummary);\n\nvar _FeedUser = require('./FeedUser');\n\nvar _FeedUser2 = _interopRequireDefault(_FeedUser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed presents user activity chronologically.\n */\nfunction Feed(props) {\n  var children = props.children,\n      className = props.className,\n      events = props.events,\n      size = props.size;\n\n\n  var classes = (0, _classnames2.default)('ui', size, 'feed', className);\n  var rest = (0, _lib.getUnhandledProps)(Feed, props);\n  var ElementType = (0, _lib.getElementType)(Feed, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var eventElements = (0, _map3.default)(events, function (eventProps) {\n    var childKey = eventProps.childKey,\n        date = eventProps.date,\n        meta = eventProps.meta,\n        summary = eventProps.summary,\n        eventData = (0, _objectWithoutProperties3.default)(eventProps, ['childKey', 'date', 'meta', 'summary']);\n\n    var finalKey = childKey || [date, meta, summary].join('-');\n\n    return _react2.default.createElement(_FeedEvent2.default, (0, _extends3.default)({\n      date: date,\n      key: finalKey,\n      meta: meta,\n      summary: summary\n    }, eventData));\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    eventElements\n  );\n}\n\nFeed.handledProps = ['as', 'children', 'className', 'events', 'size'];\nFeed._meta = {\n  name: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Feed.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand array of props for FeedEvent. */\n  events: _lib.customPropTypes.collectionShorthand,\n\n  /** A feed can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))\n} : void 0;\n\nFeed.Content = _FeedContent2.default;\nFeed.Date = _FeedDate2.default;\nFeed.Event = _FeedEvent2.default;\nFeed.Extra = _FeedExtra2.default;\nFeed.Label = _FeedLabel2.default;\nFeed.Like = _FeedLike2.default;\nFeed.Meta = _FeedMeta2.default;\nFeed.Summary = _FeedSummary2.default;\nFeed.User = _FeedUser2.default;\n\nexports.default = Feed;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FeedDate = require('./FeedDate');\n\nvar _FeedDate2 = _interopRequireDefault(_FeedDate);\n\nvar _FeedExtra = require('./FeedExtra');\n\nvar _FeedExtra2 = _interopRequireDefault(_FeedExtra);\n\nvar _FeedMeta = require('./FeedMeta');\n\nvar _FeedMeta2 = _interopRequireDefault(_FeedMeta);\n\nvar _FeedSummary = require('./FeedSummary');\n\nvar _FeedSummary2 = _interopRequireDefault(_FeedSummary);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedContent, props);\n  var ElementType = (0, _lib.getElementType)(FeedContent, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_FeedDate2.default, function (val) {\n      return { content: val };\n    }, date),\n    (0, _lib.createShorthand)(_FeedSummary2.default, function (val) {\n      return { content: val };\n    }, summary),\n    content,\n    (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {\n      return { text: true, content: val };\n    }, extraText),\n    (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {\n      return { images: val };\n    }, extraImages),\n    (0, _lib.createShorthand)(_FeedMeta2.default, function (val) {\n      return { content: val };\n    }, meta)\n  );\n}\n\nFeedContent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'meta', 'summary'];\nFeedContent._meta = {\n  name: 'FeedContent',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: _FeedExtra2.default.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedDate.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An event or an event summary can contain a date.\n */\nfunction FeedDate(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('date', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedDate, props);\n  var ElementType = (0, _lib.getElementType)(FeedDate, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nFeedDate.handledProps = ['as', 'children', 'className', 'content'];\nFeedDate._meta = {\n  name: 'FeedDate',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedDate.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = FeedDate;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedExtra.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain an extra content.\n */\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(images, 'images'), (0, _lib.useKeyOnly)(content || text, 'text'), 'extra', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedExtra, props);\n  var ElementType = (0, _lib.getElementType)(FeedExtra, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n  var imageElements = (0, _map3.default)(images, function (image, index) {\n    var key = [index, image].join('-');\n    return (0, _lib.createHTMLImage)(image, { key: key });\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content,\n    imageElements\n  );\n}\n\nFeedExtra.handledProps = ['as', 'children', 'className', 'content', 'images', 'text'];\nFeedExtra._meta = {\n  name: 'FeedExtra',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedExtra.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['text']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: _propTypes2.default.bool\n} : void 0;\n\nexports.default = FeedExtra;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedMeta.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FeedLike = require('./FeedLike');\n\nvar _FeedLike2 = _interopRequireDefault(_FeedLike);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain a meta.\n */\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n\n\n  var classes = (0, _classnames2.default)('meta', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedMeta, props);\n  var ElementType = (0, _lib.getElementType)(FeedMeta, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_FeedLike2.default, function (val) {\n      return { content: val };\n    }, like),\n    content\n  );\n}\n\nFeedMeta.handledProps = ['as', 'children', 'className', 'content', 'like'];\nFeedMeta._meta = {\n  name: 'FeedMeta',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedMeta;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedLike.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain a like element.\n */\nfunction FeedLike(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n\n\n  var classes = (0, _classnames2.default)('like', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedLike, props);\n  var ElementType = (0, _lib.getElementType)(FeedLike, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _Icon2.default.create(icon),\n    content\n  );\n}\n\nFeedLike.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nFeedLike._meta = {\n  name: 'FeedLike',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nFeedLike.defaultProps = {\n  as: 'a'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedLike.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for icon. Mutually exclusive with children. */\n  icon: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedLike;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedSummary.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FeedDate = require('./FeedDate');\n\nvar _FeedDate2 = _interopRequireDefault(_FeedDate);\n\nvar _FeedUser = require('./FeedUser');\n\nvar _FeedUser2 = _interopRequireDefault(_FeedUser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain a summary.\n */\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n\n\n  var classes = (0, _classnames2.default)('summary', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedSummary, props);\n  var ElementType = (0, _lib.getElementType)(FeedSummary, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_FeedUser2.default, function (val) {\n      return { content: val };\n    }, user),\n    content,\n    (0, _lib.createShorthand)(_FeedDate2.default, function (val) {\n      return { content: val };\n    }, date)\n  );\n}\n\nFeedSummary.handledProps = ['as', 'children', 'className', 'content', 'date', 'user'];\nFeedSummary._meta = {\n  name: 'FeedSummary',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedSummary.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedSummary;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedUser.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain a user element.\n */\nfunction FeedUser(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('user', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedUser, props);\n  var ElementType = (0, _lib.getElementType)(FeedUser, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nFeedUser.handledProps = ['as', 'children', 'className', 'content'];\nFeedUser._meta = {\n  name: 'FeedUser',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedUser.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nFeedUser.defaultProps = {\n  as: 'a'\n};\n\nexports.default = FeedUser;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedEvent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _FeedContent = require('./FeedContent');\n\nvar _FeedContent2 = _interopRequireDefault(_FeedContent);\n\nvar _FeedLabel = require('./FeedLabel');\n\nvar _FeedLabel2 = _interopRequireDefault(_FeedLabel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed contains an event.\n */\nfunction FeedEvent(props) {\n  var content = props.content,\n      children = props.children,\n      className = props.className,\n      date = props.date,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      image = props.image,\n      icon = props.icon,\n      meta = props.meta,\n      summary = props.summary;\n\n\n  var classes = (0, _classnames2.default)('event', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedEvent, props);\n  var ElementType = (0, _lib.getElementType)(FeedEvent, props);\n\n  var hasContentProp = content || date || extraImages || extraText || meta || summary;\n  var contentProps = { content: content, date: date, extraImages: extraImages, extraText: extraText, meta: meta, summary: summary };\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {\n      return { icon: val };\n    }, icon),\n    (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {\n      return { image: val };\n    }, image),\n    hasContentProp && _react2.default.createElement(_FeedContent2.default, contentProps),\n    children\n  );\n}\n\nFeedEvent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'icon', 'image', 'meta', 'summary'];\nFeedEvent._meta = {\n  name: 'FeedEvent',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedEvent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for FeedContent. */\n  content: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with content. */\n  extraText: _lib.customPropTypes.itemShorthand,\n\n  /** An event can contain icon label. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedEvent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Feed/FeedLabel.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An event can contain an image or icon label.\n */\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n\n\n  var classes = (0, _classnames2.default)('label', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedLabel, props);\n  var ElementType = (0, _lib.getElementType)(FeedLabel, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    content,\n    _Icon2.default.create(icon),\n    (0, _lib.createHTMLImage)(image)\n  );\n}\n\nFeedLabel.handledProps = ['as', 'children', 'className', 'content', 'icon', 'image'];\nFeedLabel._meta = {\n  name: 'FeedLabel',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FeedLabel.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: _lib.customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = FeedLabel;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Item = require('./Item');\n\nvar _Item2 = _interopRequireDefault(_Item);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Item2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/Item.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _ItemContent = require('./ItemContent');\n\nvar _ItemContent2 = _interopRequireDefault(_ItemContent);\n\nvar _ItemDescription = require('./ItemDescription');\n\nvar _ItemDescription2 = _interopRequireDefault(_ItemDescription);\n\nvar _ItemExtra = require('./ItemExtra');\n\nvar _ItemExtra2 = _interopRequireDefault(_ItemExtra);\n\nvar _ItemGroup = require('./ItemGroup');\n\nvar _ItemGroup2 = _interopRequireDefault(_ItemGroup);\n\nvar _ItemHeader = require('./ItemHeader');\n\nvar _ItemHeader2 = _interopRequireDefault(_ItemHeader);\n\nvar _ItemImage = require('./ItemImage');\n\nvar _ItemImage2 = _interopRequireDefault(_ItemImage);\n\nvar _ItemMeta = require('./ItemMeta');\n\nvar _ItemMeta2 = _interopRequireDefault(_ItemMeta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item view presents large collections of site content for display.\n */\nfunction Item(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      image = props.image,\n      meta = props.meta;\n\n\n  var classes = (0, _classnames2.default)('item', className);\n  var rest = (0, _lib.getUnhandledProps)(Item, props);\n  var ElementType = (0, _lib.getElementType)(Item, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _ItemImage2.default.create(image),\n    _react2.default.createElement(_ItemContent2.default, {\n      content: content,\n      description: description,\n      extra: extra,\n      header: header,\n      meta: meta\n    })\n  );\n}\n\nItem.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'image', 'meta'];\nItem._meta = {\n  name: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nItem.Content = _ItemContent2.default;\nItem.Description = _ItemDescription2.default;\nItem.Extra = _ItemExtra2.default;\nItem.Group = _ItemGroup2.default;\nItem.Header = _ItemHeader2.default;\nItem.Image = _ItemImage2.default;\nItem.Meta = _ItemMeta2.default;\n\nprocess.env.NODE_ENV !== \"production\" ? Item.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for ItemContent component. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemImage component. */\n  image: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: _lib.customPropTypes.itemShorthand\n} : void 0;\n\nexports.default = Item;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemContent.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _ItemHeader = require('./ItemHeader');\n\nvar _ItemHeader2 = _interopRequireDefault(_ItemHeader);\n\nvar _ItemDescription = require('./ItemDescription');\n\nvar _ItemDescription2 = _interopRequireDefault(_ItemDescription);\n\nvar _ItemExtra = require('./ItemExtra');\n\nvar _ItemExtra2 = _interopRequireDefault(_ItemExtra);\n\nvar _ItemMeta = require('./ItemMeta');\n\nvar _ItemMeta2 = _interopRequireDefault(_ItemMeta);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain content.\n */\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemContent, props);\n  var ElementType = (0, _lib.getElementType)(ItemContent, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _ItemHeader2.default.create(header),\n    _ItemMeta2.default.create(meta),\n    _ItemDescription2.default.create(description),\n    _ItemExtra2.default.create(extra),\n    content\n  );\n}\n\nItemContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'meta', 'verticalAlign'];\nItemContent._meta = {\n  name: 'ItemContent',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: _lib.customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)\n} : void 0;\n\nexports.default = ItemContent;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemHeader.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain a header.\n */\nfunction ItemHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemHeader, props);\n  var ElementType = (0, _lib.getElementType)(ItemHeader, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nItemHeader.handledProps = ['as', 'children', 'className', 'content'];\nItemHeader._meta = {\n  name: 'ItemHeader',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nItemHeader.create = (0, _lib.createShorthandFactory)(ItemHeader, function (content) {\n  return { content: content };\n});\n\nexports.default = ItemHeader;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemDescription.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain a description with a single or multiple paragraphs.\n */\nfunction ItemDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('description', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemDescription, props);\n  var ElementType = (0, _lib.getElementType)(ItemDescription, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nItemDescription.handledProps = ['as', 'children', 'className', 'content'];\nItemDescription._meta = {\n  name: 'ItemDescription',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nItemDescription.create = (0, _lib.createShorthandFactory)(ItemDescription, function (content) {\n  return { content: content };\n});\n\nexports.default = ItemDescription;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemExtra.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain extra content meant to be formatted separately from the main content.\n */\nfunction ItemExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('extra', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemExtra, props);\n  var ElementType = (0, _lib.getElementType)(ItemExtra, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nItemExtra.handledProps = ['as', 'children', 'className', 'content'];\nItemExtra._meta = {\n  name: 'ItemExtra',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemExtra.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nItemExtra.create = (0, _lib.createShorthandFactory)(ItemExtra, function (content) {\n  return { content: content };\n});\n\nexports.default = ItemExtra;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemMeta.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain content metadata.\n */\nfunction ItemMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('meta', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemMeta, props);\n  var ElementType = (0, _lib.getElementType)(ItemMeta, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? content : children\n  );\n}\n\nItemMeta.handledProps = ['as', 'children', 'className', 'content'];\nItemMeta._meta = {\n  name: 'ItemMeta',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nItemMeta.create = (0, _lib.createShorthandFactory)(ItemMeta, function (content) {\n  return { content: content };\n});\n\nexports.default = ItemMeta;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Item = require('./Item');\n\nvar _Item2 = _interopRequireDefault(_Item);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A group of items.\n */\nfunction ItemGroup(props) {\n  var children = props.children,\n      className = props.className,\n      divided = props.divided,\n      items = props.items,\n      link = props.link,\n      relaxed = props.relaxed;\n\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), 'items', className);\n  var rest = (0, _lib.getUnhandledProps)(ItemGroup, props);\n  var ElementType = (0, _lib.getElementType)(ItemGroup, props);\n\n  if (!(0, _isNil3.default)(children)) {\n    return _react2.default.createElement(\n      ElementType,\n      (0, _extends3.default)({}, rest, { className: classes }),\n      children\n    );\n  }\n\n  var itemsJSX = (0, _map3.default)(items, function (item) {\n    var childKey = item.childKey,\n        itemProps = (0, _objectWithoutProperties3.default)(item, ['childKey']);\n\n    var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');\n\n    return _react2.default.createElement(_Item2.default, (0, _extends3.default)({}, itemProps, { key: finalKey }));\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    itemsJSX\n  );\n}\n\nItemGroup.handledProps = ['as', 'children', 'className', 'divided', 'items', 'link', 'relaxed'];\nItemGroup._meta = {\n  name: 'ItemGroup',\n  type: _lib.META.TYPES.VIEW,\n  parent: 'Item'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Items can be divided to better distinguish between grouped content. */\n  divided: _propTypes2.default.bool,\n\n  /** Shorthand array of props for Item. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** An item can be formatted so that the entire contents link to another page. */\n  link: _propTypes2.default.bool,\n\n  /** A group of items can relax its padding to provide more negative space. */\n  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])])\n} : void 0;\n\nexports.default = ItemGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Item/ItemImage.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Image = require('../../elements/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An item can contain an image.\n */\nfunction ItemImage(props) {\n  var size = props.size;\n\n  var rest = (0, _lib.getUnhandledProps)(ItemImage, props);\n\n  return _react2.default.createElement(_Image2.default, (0, _extends3.default)({}, rest, { size: size, ui: !!size, wrapped: true }));\n}\n\nItemImage.handledProps = ['size'];\nItemImage._meta = {\n  name: 'ItemImage',\n  parent: 'Item',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ItemImage.propTypes = {\n  /** An image may appear at different sizes. */\n  size: _Image2.default.propTypes.size\n} : void 0;\n\nItemImage.create = (0, _lib.createShorthandFactory)(ItemImage, function (src) {\n  return { src: src };\n});\n\nexports.default = ItemImage;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Statistic/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Statistic = require('./Statistic');\n\nvar _Statistic2 = _interopRequireDefault(_Statistic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Statistic2.default;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Statistic/Statistic.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _StatisticGroup = require('./StatisticGroup');\n\nvar _StatisticGroup2 = _interopRequireDefault(_StatisticGroup);\n\nvar _StatisticLabel = require('./StatisticLabel');\n\nvar _StatisticLabel2 = _interopRequireDefault(_StatisticLabel);\n\nvar _StatisticValue = require('./StatisticValue');\n\nvar _StatisticValue2 = _interopRequireDefault(_StatisticValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A statistic emphasizes the current value of an attribute.\n */\nfunction Statistic(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      floated = props.floated,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      label = props.label,\n      size = props.size,\n      text = props.text,\n      value = props.value;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'statistic', className);\n  var rest = (0, _lib.getUnhandledProps)(Statistic, props);\n  var ElementType = (0, _lib.getElementType)(Statistic, props);\n\n  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    _react2.default.createElement(_StatisticValue2.default, { text: text, value: value }),\n    _react2.default.createElement(_StatisticLabel2.default, { label: label })\n  );\n}\n\nStatistic.handledProps = ['as', 'children', 'className', 'color', 'floated', 'horizontal', 'inverted', 'label', 'size', 'text', 'value'];\nStatistic._meta = {\n  name: 'Statistic',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Statistic.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A statistic can be formatted to be different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A statistic can sit to the left or right of other content. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A statistic can present its measurement horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** A statistic can be formatted to fit on a dark background. */\n  inverted: _propTypes2.default.bool,\n\n  /** Label content of the Statistic. */\n  label: _lib.customPropTypes.contentShorthand,\n\n  /** A statistic can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\n  text: _propTypes2.default.bool,\n\n  /** Value content of the Statistic. */\n  value: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nStatistic.Group = _StatisticGroup2.default;\nStatistic.Label = _StatisticLabel2.default;\nStatistic.Value = _StatisticValue2.default;\n\nexports.default = Statistic;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Statistic/StatisticGroup.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Statistic = require('./Statistic');\n\nvar _Statistic2 = _interopRequireDefault(_Statistic);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useWidthProp)(widths), 'statistics', className);\n  var rest = (0, _lib.getUnhandledProps)(StatisticGroup, props);\n  var ElementType = (0, _lib.getElementType)(StatisticGroup, props);\n\n  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    children\n  );\n\n  var itemsJSX = (0, _map3.default)(items, function (item) {\n    return _react2.default.createElement(_Statistic2.default, (0, _extends3.default)({ key: item.childKey || [item.label, item.title].join('-') }, item));\n  });\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    itemsJSX\n  );\n}\n\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: _lib.META.TYPES.VIEW,\n  parent: 'Statistic'\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StatisticGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: _propTypes2.default.bool,\n\n  /** Array of props for Statistic. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : void 0;\n\nexports.default = StatisticGroup;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Statistic/StatisticLabel.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A statistic can contain a label to help provide context for the presented value.\n */\nfunction StatisticLabel(props) {\n  var children = props.children,\n      className = props.className,\n      label = props.label;\n\n  var classes = (0, _classnames2.default)('label', className);\n  var rest = (0, _lib.getUnhandledProps)(StatisticLabel, props);\n  var ElementType = (0, _lib.getElementType)(StatisticLabel, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? label : children\n  );\n}\n\nStatisticLabel.handledProps = ['as', 'children', 'className', 'label'];\nStatisticLabel._meta = {\n  name: 'StatisticLabel',\n  parent: 'Statistic',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StatisticLabel.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  label: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = StatisticLabel;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/dist/commonjs/views/Statistic/StatisticValue.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A statistic can contain a numeric, icon, image, or text value.\n */\nfunction StatisticValue(props) {\n  var children = props.children,\n      className = props.className,\n      text = props.text,\n      value = props.value;\n\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(text, 'text'), 'value', className);\n  var rest = (0, _lib.getUnhandledProps)(StatisticValue, props);\n  var ElementType = (0, _lib.getElementType)(StatisticValue, props);\n\n  return _react2.default.createElement(\n    ElementType,\n    (0, _extends3.default)({}, rest, { className: classes }),\n    (0, _isNil3.default)(children) ? value : children\n  );\n}\n\nStatisticValue.handledProps = ['as', 'children', 'className', 'text', 'value'];\nStatisticValue._meta = {\n  name: 'StatisticValue',\n  parent: 'Statistic',\n  type: _lib.META.TYPES.VIEW\n};\n\nprocess.env.NODE_ENV !== \"production\" ? StatisticValue.propTypes = {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Format the value with smaller font size to fit nicely beside number values. */\n  text: _propTypes2.default.bool,\n\n  /** Primary content of the StatisticValue. Mutually exclusive with the children prop. */\n  value: _lib.customPropTypes.contentShorthand\n} : void 0;\n\nexports.default = StatisticValue;","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/index.js":"// Addons\nexport { default as Confirm } from './addons/Confirm'\nexport { default as Portal } from './addons/Portal'\nexport { default as Radio } from './addons/Radio'\nexport { default as Select } from './addons/Select'\nexport { default as TextArea } from './addons/TextArea'\n\n// Collections\nexport { default as Breadcrumb } from './collections/Breadcrumb'\nexport { default as BreadcrumbDivider } from './collections/Breadcrumb/BreadcrumbDivider'\nexport { default as BreadcrumbSection } from './collections/Breadcrumb/BreadcrumbSection'\n\nexport { default as Form } from './collections/Form'\nexport { default as FormButton } from './collections/Form/FormButton'\nexport { default as FormCheckbox } from './collections/Form/FormCheckbox'\nexport { default as FormDropdown } from './collections/Form/FormDropdown'\nexport { default as FormField } from './collections/Form/FormField'\nexport { default as FormGroup } from './collections/Form/FormGroup'\nexport { default as FormInput } from './collections/Form/FormInput'\nexport { default as FormRadio } from './collections/Form/FormRadio'\nexport { default as FormSelect } from './collections/Form/FormSelect'\nexport { default as FormTextArea } from './collections/Form/FormTextArea'\n\nexport { default as Grid } from './collections/Grid'\nexport { default as GridColumn } from './collections/Grid/GridColumn'\nexport { default as GridRow } from './collections/Grid/GridRow'\n\nexport { default as Menu } from './collections/Menu'\nexport { default as MenuHeader } from './collections/Menu/MenuHeader'\nexport { default as MenuItem } from './collections/Menu/MenuItem'\nexport { default as MenuMenu } from './collections/Menu/MenuMenu'\n\nexport { default as Message } from './collections/Message'\nexport { default as MessageContent } from './collections/Message/MessageContent'\nexport { default as MessageHeader } from './collections/Message/MessageHeader'\nexport { default as MessageItem } from './collections/Message/MessageItem'\nexport { default as MessageList } from './collections/Message/MessageList'\n\nexport { default as Table } from './collections/Table'\nexport { default as TableBody } from './collections/Table/TableBody'\nexport { default as TableCell } from './collections/Table/TableCell'\nexport { default as TableFooter } from './collections/Table/TableFooter'\nexport { default as TableHeader } from './collections/Table/TableHeader'\nexport { default as TableHeaderCell } from './collections/Table/TableHeaderCell'\nexport { default as TableRow } from './collections/Table/TableRow'\n\n// Elements\nexport { default as Button } from './elements/Button/Button'\nexport { default as ButtonContent } from './elements/Button/ButtonContent'\nexport { default as ButtonGroup } from './elements/Button/ButtonGroup'\nexport { default as ButtonOr } from './elements/Button/ButtonOr'\n\nexport { default as Container } from './elements/Container'\n\nexport { default as Divider } from './elements/Divider'\n\nexport { default as Flag } from './elements/Flag'\n\nexport { default as Header } from './elements/Header'\nexport { default as HeaderContent } from './elements/Header/HeaderContent'\nexport { default as HeaderSubheader } from './elements/Header/HeaderSubheader'\n\nexport { default as Icon } from './elements/Icon'\nexport { default as IconGroup } from './elements/Icon/IconGroup'\n\nexport { default as Image } from './elements/Image'\nexport { default as ImageGroup } from './elements/Image/ImageGroup'\n\nexport { default as Input } from './elements/Input'\n\nexport { default as Label } from './elements/Label'\nexport { default as LabelDetail } from './elements/Label/LabelDetail'\nexport { default as LabelGroup } from './elements/Label/LabelGroup'\n\nexport { default as List } from './elements/List'\nexport { default as ListContent } from './elements/List/ListContent'\nexport { default as ListDescription } from './elements/List/ListDescription'\nexport { default as ListHeader } from './elements/List/ListHeader'\nexport { default as ListIcon } from './elements/List/ListIcon'\nexport { default as ListItem } from './elements/List/ListItem'\nexport { default as ListList } from './elements/List/ListList'\n\nexport { default as Loader } from './elements/Loader'\n\nexport { default as Rail } from './elements/Rail'\n\nexport { default as Reveal } from './elements/Reveal'\nexport { default as RevealContent } from './elements/Reveal/RevealContent'\n\nexport { default as Segment } from './elements/Segment'\nexport { default as SegmentGroup } from './elements/Segment/SegmentGroup'\n\nexport { default as Step } from './elements/Step'\nexport { default as StepContent } from './elements/Step/StepContent'\nexport { default as StepDescription } from './elements/Step/StepDescription'\nexport { default as StepGroup } from './elements/Step/StepGroup'\nexport { default as StepTitle } from './elements/Step/StepTitle'\n\n// Modules\nexport { default as Accordion } from './modules/Accordion/Accordion'\nexport { default as AccordionContent } from './modules/Accordion/AccordionContent'\nexport { default as AccordionTitle } from './modules/Accordion/AccordionTitle'\n\nexport { default as Checkbox } from './modules/Checkbox'\n\nexport { default as Dimmer } from './modules/Dimmer'\nexport { default as DimmerDimmable } from './modules/Dimmer/DimmerDimmable'\n\nexport { default as Dropdown } from './modules/Dropdown'\nexport { default as DropdownDivider } from './modules/Dropdown/DropdownDivider'\nexport { default as DropdownHeader } from './modules/Dropdown/DropdownHeader'\nexport { default as DropdownItem } from './modules/Dropdown/DropdownItem'\nexport { default as DropdownMenu } from './modules/Dropdown/DropdownMenu'\n\nexport { default as Embed } from './modules/Embed'\n\nexport { default as Modal } from './modules/Modal'\nexport { default as ModalActions } from './modules/Modal/ModalActions'\nexport { default as ModalContent } from './modules/Modal/ModalContent'\nexport { default as ModalDescription } from './modules/Modal/ModalDescription'\nexport { default as ModalHeader } from './modules/Modal/ModalHeader'\n\nexport { default as Popup } from './modules/Popup'\nexport { default as PopupContent } from './modules/Popup/PopupContent'\nexport { default as PopupHeader } from './modules/Popup/PopupHeader'\n\nexport { default as Progress } from './modules/Progress'\n\nexport { default as Rating } from './modules/Rating'\nexport { default as RatingIcon } from './modules/Rating/RatingIcon'\n\nexport { default as Search } from './modules/Search'\nexport { default as SearchCategory } from './modules/Search/SearchCategory'\nexport { default as SearchResult } from './modules/Search/SearchResult'\nexport { default as SearchResults } from './modules/Search/SearchResults'\n\nexport { default as Sidebar } from './modules/Sidebar'\nexport { default as SidebarPushable } from './modules/Sidebar/SidebarPushable'\nexport { default as SidebarPusher } from './modules/Sidebar/SidebarPusher'\n\n// Views\nexport { default as Advertisement } from './views/Advertisement'\n\nexport { default as Card } from './views/Card/Card'\nexport { default as CardContent } from './views/Card/CardContent'\nexport { default as CardDescription } from './views/Card/CardDescription'\nexport { default as CardGroup } from './views/Card/CardGroup'\nexport { default as CardHeader } from './views/Card/CardHeader'\nexport { default as CardMeta } from './views/Card/CardMeta'\n\nexport { default as Comment } from './views/Comment'\nexport { default as CommentAction } from './views/Comment/CommentAction'\nexport { default as CommentActions } from './views/Comment/CommentActions'\nexport { default as CommentAuthor } from './views/Comment/CommentAuthor'\nexport { default as CommentAvatar } from './views/Comment/CommentAvatar'\nexport { default as CommentContent } from './views/Comment/CommentContent'\nexport { default as CommentGroup } from './views/Comment/CommentGroup'\nexport { default as CommentMetadata } from './views/Comment/CommentMetadata'\nexport { default as CommentText } from './views/Comment/CommentText'\n\nexport { default as Feed } from './views/Feed'\nexport { default as FeedContent } from './views/Feed/FeedContent'\nexport { default as FeedDate } from './views/Feed/FeedDate'\nexport { default as FeedEvent } from './views/Feed/FeedEvent'\nexport { default as FeedExtra } from './views/Feed/FeedExtra'\nexport { default as FeedLabel } from './views/Feed/FeedLabel'\nexport { default as FeedLike } from './views/Feed/FeedLike'\nexport { default as FeedMeta } from './views/Feed/FeedMeta'\nexport { default as FeedSummary } from './views/Feed/FeedSummary'\nexport { default as FeedUser } from './views/Feed/FeedUser'\n\nexport { default as Item } from './views/Item'\nexport { default as ItemContent } from './views/Item/ItemContent'\nexport { default as ItemDescription } from './views/Item/ItemDescription'\nexport { default as ItemExtra } from './views/Item/ItemExtra'\nexport { default as ItemGroup } from './views/Item/ItemGroup'\nexport { default as ItemHeader } from './views/Item/ItemHeader'\nexport { default as ItemImage } from './views/Item/ItemImage'\nexport { default as ItemMeta } from './views/Item/ItemMeta'\n\nexport { default as Statistic } from './views/Statistic'\nexport { default as StatisticGroup } from './views/Statistic/StatisticGroup'\nexport { default as StatisticLabel } from './views/Statistic/StatisticLabel'\nexport { default as StatisticValue } from './views/Statistic/StatisticValue'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/umd.js":"// Heads Up!\n//\n// Do not replace this with named exports.\n// We need to export an object here for browser builds.\n// Otherwise, we end up with every component on the window.\nimport * as semanticUIReact from './index'\n\nmodule.exports = {\n  ...semanticUIReact,\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/AutoControlledComponent.js":"/* eslint-disable no-console */\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\nimport _ from 'lodash'\nimport { Component } from 'react'\n\nconst getDefaultPropName = (prop) => `default${prop[0].toUpperCase() + prop.slice(1)}`\n\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\nexport const getAutoControlledStateValue = (propName, props, state, includeDefaults = false) => {\n  // regular props\n  const propValue = props[propName]\n  if (propValue !== undefined) return propValue\n\n  if (includeDefaults) {\n    // defaultProps\n    const defaultProp = props[getDefaultPropName(propName)]\n    if (defaultProp !== undefined) return defaultProp\n\n    // initial state - state may be null or undefined\n    if (state) {\n      const initialState = state[propName]\n      if (initialState !== undefined) return initialState\n    }\n  }\n\n  // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n  if (propName === 'checked') return false\n  if (propName === 'value') return props.multiple ? [] : ''\n\n  // otherwise, undefined\n}\n\nexport default class AutoControlledComponent extends Component {\n  componentWillMount() {\n    const { autoControlledProps } = this.constructor\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { defaultProps, name, propTypes } = this.constructor\n      // require static autoControlledProps\n      if (!autoControlledProps) {\n        console.error(`Auto controlled ${name} must specify a static autoControlledProps array.`)\n      }\n\n      // require propTypes\n      _.each(autoControlledProps, (prop) => {\n        const defaultProp = getDefaultPropName(prop)\n        // regular prop\n        if (!_.has(propTypes, defaultProp)) {\n          console.error(`${name} is missing \"${defaultProp}\" propTypes validation for auto controlled prop \"${prop}\".`)\n        }\n        // its default prop\n        if (!_.has(propTypes, prop)) {\n          console.error(`${name} is missing propTypes validation for auto controlled prop \"${prop}\".`)\n        }\n      })\n\n      // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n      const illegalDefaults = _.intersection(autoControlledProps, _.keys(defaultProps))\n      if (!_.isEmpty(illegalDefaults)) {\n        console.error([\n          'Do not set defaultProps for autoControlledProps. You can set defaults by',\n          'setting state in the constructor or using an ES7 property initializer',\n          '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)',\n          `See ${name} props: \"${illegalDefaults}\".`,\n        ].join(' '))\n      }\n\n      // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n      const illegalAutoControlled = _.filter(autoControlledProps, prop => _.startsWith(prop, 'default'))\n      if (!_.isEmpty(illegalAutoControlled)) {\n        console.error([\n          'Do not add default props to autoControlledProps.',\n          'Default props are automatically handled.',\n          `See ${name} autoControlledProps: \"${illegalAutoControlled}\".`,\n        ].join(' '))\n      }\n    }\n\n    // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n    const initialAutoControlledState = autoControlledProps.reduce((acc, prop) => {\n      acc[prop] = getAutoControlledStateValue(prop, this.props, this.state, true)\n\n      if (process.env.NODE_ENV !== 'production') {\n        const defaultPropName = getDefaultPropName(prop)\n        const { name } = this.constructor\n        // prevent defaultFoo={} along side foo={}\n        if (defaultPropName in this.props && prop in this.props) {\n          console.error(\n            `${name} prop \"${prop}\" is auto controlled. Specify either ${defaultPropName} or ${prop}, but not both.`\n          )\n        }\n      }\n\n      return acc\n    }, {})\n\n    this.state = { ...this.state, ...initialAutoControlledState }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { autoControlledProps } = this.constructor\n\n    // Solve the next state for autoControlledProps\n    const newState = autoControlledProps.reduce((acc, prop) => {\n      const isNextUndefined = _.isUndefined(nextProps[prop])\n      const propWasRemoved = !_.isUndefined(this.props[prop]) && isNextUndefined\n\n      // if next is defined then use its value\n      if (!isNextUndefined) acc[prop] = nextProps[prop]\n\n      // reinitialize state for props just removed / set undefined\n      else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps)\n\n      return acc\n    }, {})\n\n    if (Object.keys(newState).length > 0) this.setState(newState)\n  }\n\n  /**\n   * Safely attempt to set state for props that might be controlled by the user.\n   * Second argument is a state object that is always passed to setState.\n   * @param {object} maybeState State that corresponds to controlled props.\n   * @param {object} [state] Actual state, useful when you also need to setState.\n   */\n  trySetState = (maybeState, state) => {\n    const { autoControlledProps } = this.constructor\n    if (process.env.NODE_ENV !== 'production') {\n      const { name } = this.constructor\n      // warn about failed attempts to setState for keys not listed in autoControlledProps\n      const illegalKeys = _.difference(_.keys(maybeState), autoControlledProps)\n      if (!_.isEmpty(illegalKeys)) {\n        console.error([\n          `${name} called trySetState() with controlled props: \"${illegalKeys}\".`,\n          'State will not be set.',\n          'Only props in static autoControlledProps will be set on state.',\n        ].join(' '))\n      }\n    }\n\n    let newState = Object.keys(maybeState).reduce((acc, prop) => {\n      // ignore props defined by the parent\n      if (this.props[prop] !== undefined) return acc\n\n      // ignore props not listed in auto controlled props\n      if (autoControlledProps.indexOf(prop) === -1) return acc\n\n      acc[prop] = maybeState[prop]\n      return acc\n    }, {})\n\n    if (state) newState = { ...newState, ...state }\n\n    if (Object.keys(newState).length > 0) this.setState(newState)\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/childrenUtils.js":"import _ from 'lodash'\nimport { Children } from 'react'\n\n/**\n * Determine if child by type exists in children.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {Boolean}\n */\nexport const someByType = (children, type) => _.some(Children.toArray(children), { type })\n\n/**\n * Find child by type.\n * @param {Object} children The children prop of a component.\n * @param {string|Function} type An html tag name string or React component.\n * @returns {undefined|Object}\n */\nexport const findByType = (children, type) => _.find(Children.toArray(children), { type })\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/classNameBuilders.js":"import { numberToWord } from './numberToWord'\n\n/*\n * There are 3 prop patterns used to build up the className for a component.\n * Each utility here is meant for use in a classnames() argument.\n *\n * There is no util for valueOnly() because it would simply return val.\n * Use the prop value inline instead.\n *   <Label size='big' />\n *   <div class=\"ui big label\"></div>\n */\n\n/**\n * Props where only the prop key is used in the className.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example\n * <Label tag />\n * <div class=\"ui tag label\"></div>\n */\nexport const useKeyOnly = (val, key) => val && key\n\n/**\n * Props that require both a key and value to create a className.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example\n * <Label corner='left' />\n * <div class=\"ui left corner label\"></div>\n */\nexport const useValueAndKey = (val, key) => val && val !== true && `${val} ${key}`\n\n/**\n * Props whose key will be used in className, or value and key.\n * @param {*} val A props value\n * @param {string} key A props key\n *\n * @example Key Only\n * <Label pointing />\n * <div class=\"ui pointing label\"></div>\n *\n * @example Key and Value\n * <Label pointing='left' />\n * <div class=\"ui left pointing label\"></div>\n */\nexport const useKeyOrValueAndKey = (val, key) => val && (val === true ? key : `${val} ${key}`)\n\n//\n// Prop to className exceptions\n//\n\n/**\n * The \"only\" prop implements control of visibility classes for Grid subcomponents.\n *\n * @param {*} val The value of the \"only\" prop\n *\n * @example\n * <Grid.Row only='mobile' />\n * <Grid.Row only='mobile tablet' />\n * <div class=\"mobile only row\"></div>\n * <div class=\"mobile only tablet only row\"></div>\n */\nexport const useOnlyProp = val => {\n  if (!val || val === true) return null\n\n  return val.replace('large screen', 'large-screen')\n    .split(' ')\n    .map(prop => `${prop.replace('-', ' ')} only`)\n    .join(' ')\n}\n\n/**\n * The \"textAlign\" prop follows the useValueAndKey except when the value is \"justified'.\n * In this case, only the class \"justified\" is used, ignoring the \"aligned\" class.\n * @param {*} val The value of the \"textAlign\" prop\n *\n * @example\n * <Container textAlign='justified' />\n * <div class=\"ui justified container\"></div>\n *\n * @example\n * <Container textAlign='left' />\n * <div class=\"ui left aligned container\"></div>\n */\nexport const useTextAlignProp = val => val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned')\n\n/**\n * The \"verticalAlign\" prop follows the useValueAndKey.\n *\n * @param {*} val The value of the \"verticalAlign\" prop\n *\n * @example\n * <Grid verticalAlign='middle' />\n * <div class=\"ui middle aligned grid\"></div>\n */\nexport const useVerticalAlignProp = val => useValueAndKey(val, 'aligned')\n\n/**\n * Create \"X\", \"X wide\" and \"equal width\" classNames.\n * \"X\" is a numberToWord value and \"wide\" is configurable.\n * @param {*} val The prop value\n * @param {string} [widthClass=''] The class\n * @param {boolean} [canEqual=false] Flag that indicates possibility of \"equal\" value\n *\n * @example\n * <Grid columns='equal' />\n * <div class=\"ui equal width grid\"></div>\n *\n * <Form widths='equal' />\n * <div class=\"ui equal width form\"></div>\n *\n * <FieldGroup widths='equal' />\n * <div class=\"equal width fields\"></div>\n *\n * @example\n * <Grid columns={4} />\n * <div class=\"ui four column grid\"></div>\n */\nexport const useWidthProp = (val, widthClass = '', canEqual = false) => {\n  if (canEqual && val === 'equal') {\n    return 'equal width'\n  }\n  const valType = typeof val\n  if ((valType === 'string' || valType === 'number') && widthClass) {\n    return `${numberToWord(val)} ${widthClass}`\n  }\n  return numberToWord(val)\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/customPropTypes.js":"import _ from 'lodash/fp'\nimport PropTypes from 'prop-types'\nimport leven from './leven'\n\nconst typeOf = (...args) => Object.prototype.toString.call(...args)\n\n/**\n * Ensure a component can render as a give prop value.\n */\nexport const as = (...args) => PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.func,\n])(...args)\n\n/**\n * Similar to PropTypes.oneOf but shows closest matches.\n * Word order is ignored allowing `left chevron` to match `chevron left`.\n * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)\n * @param {string[]} suggestions An array of allowed values.\n */\nexport const suggest = suggestions => {\n  return (props, propName, componentName) => {\n    if (!Array.isArray(suggestions)) {\n      throw new Error([\n        'Invalid argument supplied to suggest, expected an instance of array.',\n        ` See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(''))\n    }\n    const propValue = props[propName]\n\n    // skip if prop is undefined or is included in the suggestions\n    if (_.isNil(propValue) || propValue === false || _.includes(propValue, suggestions)) return\n\n    // find best suggestions\n    const propValueWords = propValue.split(' ')\n\n    /* eslint-disable max-nested-callbacks */\n    const bestMatches = _.flow(\n      _.map(suggestion => {\n        const suggestionWords = suggestion.split(' ')\n\n        const propValueScore = _.flow(\n          _.map(x => _.map(y => leven(x, y), suggestionWords)),\n          _.map(_.min),\n          _.sum\n        )(propValueWords)\n\n        const suggestionScore = _.flow(\n          _.map(x => _.map(y => leven(x, y), propValueWords)),\n          _.map(_.min),\n          _.sum\n        )(suggestionWords)\n\n        return { suggestion, score: propValueScore + suggestionScore }\n      }),\n      _.sortBy(['score', 'suggestion']),\n      _.take(3)\n    )(suggestions)\n    /* eslint-enable max-nested-callbacks */\n\n    // skip if a match scored 0\n    // since we're matching on words (classNames) this allows any word order to pass validation\n    // e.g. `left chevron` vs `chevron left`\n    if (bestMatches.some(x => x.score === 0)) return\n\n    return new Error([\n      `Invalid prop \\`${propName}\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`.`,\n      `\\n\\nInstead of \\`${propValue}\\`, did you mean:`,\n      bestMatches.map(x => `\\n  - ${x.suggestion}`).join(''),\n      '\\n',\n    ].join(''))\n  }\n}\n\n/**\n * Disallow other props form being defined with this prop.\n * @param {string[]} disallowedProps An array of props that cannot be used with this prop.\n */\nexport const disallow = disallowedProps => {\n  return (props, propName, componentName) => {\n    if (!Array.isArray(disallowedProps)) {\n      throw new Error([\n        'Invalid argument supplied to disallow, expected an instance of array.',\n        ` See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(''))\n    }\n\n    // skip if prop is undefined\n    if (_.isNil(props[propName]) || props[propName] === false) return\n\n    // find disallowed props with values\n    const disallowed = disallowedProps.reduce((acc, disallowedProp) => {\n      if (!_.isNil(props[disallowedProp]) && props[disallowedProp] !== false) {\n        return [...acc, disallowedProp]\n      }\n      return acc\n    }, [])\n\n    if (disallowed.length > 0) {\n      return new Error([\n        `Prop \\`${propName}\\` in \\`${componentName}\\` conflicts with props: \\`${disallowed.join('`, `')}\\`.`,\n        'They cannot be defined together, choose one or the other.',\n      ].join(' '))\n    }\n  }\n}\n\n/**\n * Ensure a prop adherers to multiple prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\nexport const every = (validators) => {\n  return (props, propName, componentName, ...rest) => {\n    if (!Array.isArray(validators)) {\n      throw new Error([\n        'Invalid argument supplied to every, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    const errors = _.flow(\n      _.map(validator => {\n        if (typeof validator !== 'function') {\n          throw new Error(`every() argument \"validators\" should contain functions, found: ${typeOf(validator)}.`)\n        }\n        return validator(props, propName, componentName, ...rest)\n      }),\n      _.compact\n    )(validators)\n\n    // we can only return one error at a time\n    return errors[0]\n  }\n}\n\n/**\n * Ensure a prop adherers to at least one of the given prop type validators.\n * @param {function[]} validators An array of propType functions.\n */\nexport const some = (validators) => {\n  return (props, propName, componentName, ...rest) => {\n    if (!Array.isArray(validators)) {\n      throw new Error([\n        'Invalid argument supplied to some, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    const errors = _.compact(_.map(validators, validator => {\n      if (!_.isFunction(validator)) {\n        throw new Error(`some() argument \"validators\" should contain functions, found: ${typeOf(validator)}.`)\n      }\n      return validator(props, propName, componentName, ...rest)\n    }))\n\n    // fail only if all validators failed\n    if (errors.length === validators.length) {\n      const error = new Error('One of these validators must pass:')\n      error.message += '\\n' + _.map(errors, (err, i) => (`[${i + 1}]: ${err.message}`)).join('\\n')\n      return error\n    }\n  }\n}\n\n/**\n * Ensure a validator passes only when a component has a given propsShape.\n * @param {object} propsShape An object describing the prop shape.\n * @param {function} validator A propType function.\n */\nexport const givenProps = (propsShape, validator) => {\n  return (props, propName, componentName, ...rest) => {\n    if (!_.isPlainObject(propsShape)) {\n      throw new Error([\n        'Invalid argument supplied to givenProps, expected an object.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    if (typeof validator !== 'function') {\n      throw new Error([\n        'Invalid argument supplied to givenProps, expected a function.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    const shouldValidate = _.keys(propsShape).every(key => {\n      const val = propsShape[key]\n      // require propShape validators to pass or prop values to match\n      return typeof val === 'function' ? !val(props, key, componentName, ...rest) : val === props[propName]\n    })\n\n    if (!shouldValidate) return\n\n    const error = validator(props, propName, componentName, ...rest)\n\n    if (error) {\n      // poor mans shallow pretty print, prevents JSON circular reference errors\n      const prettyProps = `{ ${_.keys(_.pick(_.keys(propsShape), props)).map(key => {\n        const val = props[key]\n        let renderedValue = val\n        if (typeof val === 'string') renderedValue = `\"${val}\"`\n        else if (Array.isArray(val)) renderedValue = `[${val.join(', ')}]`\n        else if (_.isObject(val)) renderedValue = '{...}'\n\n        return `${key}: ${renderedValue}`\n      }).join(', ')} }`\n\n      error.message = `Given props ${prettyProps}: ${error.message}`\n      return error\n    }\n  }\n}\n\n/**\n * Define prop dependencies by requiring other props.\n * @param {string[]} requiredProps An array of required prop names.\n */\nexport const demand = (requiredProps) => {\n  return (props, propName, componentName) => {\n    if (!Array.isArray(requiredProps)) {\n      throw new Error([\n        'Invalid `requiredProps` argument supplied to require, expected an instance of array.',\n        ` See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(''))\n    }\n\n    // skip if prop is undefined\n    if (props[propName] === undefined) return\n\n    const missingRequired = requiredProps.filter(requiredProp => props[requiredProp] === undefined)\n    if (missingRequired.length > 0) {\n      return new Error(\n        `\\`${propName}\\` prop in \\`${componentName}\\` requires props: \\`${missingRequired.join('`, `')}\\`.`\n      )\n    }\n  }\n}\n\n/**\n * Ensure an only prop contains a string with only possible values.\n * @param {string[]} possible An array of possible values to prop.\n */\nexport const onlyProp = possible => {\n  return (props, propName, componentName) => {\n    if (!Array.isArray(possible)) {\n      throw new Error([\n        'Invalid argument supplied to some, expected an instance of array.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    const propValue = props[propName]\n\n    // skip if prop is undefined\n    if (_.isNil(propValue) || propValue === false) return\n\n    const values = propValue\n      .replace('large screen', 'large-screen')\n      .split(' ')\n      .map(val => _.trim(val).replace('-', ' '))\n    const invalid = _.difference(values, possible)\n\n    // fail only if there are invalid values\n    if (invalid.length > 0) {\n      return new Error(`\\`${propName}\\` prop in \\`${componentName}\\` has invalid values: \\`${invalid.join('`, `')}\\`.`)\n    }\n  }\n}\n\n/**\n * Ensure a component can render as a node passed as a prop value in place of children.\n */\nexport const contentShorthand = (...args) => every([\n  disallow(['children']),\n  PropTypes.node,\n])(...args)\n\n/**\n * Item shorthand is a description of a component that can be a literal,\n * a props object, or an element.\n */\nexport const itemShorthand = (...args) => every([\n  disallow(['children']),\n  PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.node,\n    PropTypes.object,\n  ]),\n])(...args)\n\n/**\n * Collection shorthand ensures a prop is an array of item shorthand.\n */\nexport const collectionShorthand = (...args) => every([\n  disallow(['children']),\n  PropTypes.arrayOf(itemShorthand),\n])(...args)\n\n/**\n * Show a deprecated warning for component props with a help message and optional validator.\n * @param {string} help A help message to display with the deprecation warning.\n * @param {function} [validator] A propType function.\n */\nexport const deprecate = (help, validator) => {\n  return (props, propName, componentName, ...args) => {\n    if (typeof help !== 'string') {\n      throw new Error([\n        'Invalid `help` argument supplied to deprecate, expected a string.',\n        `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n      ].join(' '))\n    }\n\n    // skip if prop is undefined\n    if (props[propName] === undefined) return\n\n    // deprecation error and help\n    const error = new Error(`The \\`${propName}\\` prop in \\`${componentName}\\` is deprecated.`)\n    if (help) error.message += ` ${help}`\n\n    // add optional validation error message\n    if (validator) {\n      if (typeof validator === 'function') {\n        const validationError = validator(props, propName, componentName, ...args)\n        if (validationError) {\n          error.message = `${error.message} ${validationError.message}`\n        }\n      } else {\n        throw new Error([\n          'Invalid argument supplied to deprecate, expected a function.',\n          `See \\`${propName}\\` prop in \\`${componentName}\\`.`,\n        ].join(' '))\n      }\n    }\n\n    return error\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/debug.js":"import isBrowser from './isBrowser'\nlet _debug\nconst noop = () => undefined\n\nif (isBrowser && process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n  // Heads Up!\n  // https://github.com/visionmedia/debug/pull/331\n  //\n  // debug now clears storage on load, grab the debug settings before require('debug').\n  // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.\n  let DEBUG\n  try {\n    DEBUG = window.localStorage.debug\n  } catch (e) {\n    /* eslint-disable no-console */\n    console.error('Semantic-UI-React could not enable debug.')\n    console.error(e)\n   /* eslint-enable no-console */\n  }\n\n  _debug = require('debug')\n\n  // enable what ever settings we got from storage\n  _debug.enable(DEBUG)\n} else {\n  _debug = () => noop\n}\n\n/**\n * Create a namespaced debug function.\n * @param {String} namespace Usually a component name.\n * @example\n * import { makeDebugger } from 'src/lib'\n * const debug = makeDebugger('namespace')\n *\n * debug('Some message')\n * @returns {Function}\n */\nexport const makeDebugger = (namespace) => {\n  return _debug(`semanticUIReact:${namespace}`)\n}\n\n/**\n * Default debugger, simple log.\n * @example\n * import { debug } from 'src/lib'\n * debug('Some message')\n */\nexport const debug = makeDebugger('log')\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/factories.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport React, { cloneElement, isValidElement } from 'react'\n\n// ============================================================\n// Factories\n// ============================================================\n\n/**\n * A more robust React.createElement. It can create elements from primitive values.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @param {string|object|function} val The value to create a ReactElement from\n * @param {Object} [options={}]\n * @param {object} [options.defaultProps={}] Default props object\n * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)\n * @returns {object|null}\n */\nexport function createShorthand(Component, mapValueToProps, val, options = {}) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.')\n  }\n  // short circuit noop values\n  if (_.isNil(val) || _.isBoolean(val)) return null\n\n  const valIsString = _.isString(val)\n  const valIsNumber = _.isNumber(val)\n\n  const isReactElement = isValidElement(val)\n  const isPropsObject = _.isPlainObject(val)\n  const isPrimitiveValue = valIsString || valIsNumber || _.isArray(val)\n\n  // unhandled type return null\n  /* eslint-disable no-console */\n  if (!isReactElement && !isPropsObject && !isPrimitiveValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error([\n        'Shorthand value must be a string|number|array|object|ReactElement.',\n        ' Use null|undefined|boolean for none',\n        ` Received ${typeof val}.`,\n      ].join(''))\n    }\n    return null\n  }\n  /* eslint-enable no-console */\n\n  // ----------------------------------------\n  // Build up props\n  // ----------------------------------------\n  const { defaultProps = {} } = options\n\n  // User's props\n  const usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val)\n\n  // Override props\n  let { overrideProps = {} } = options\n  overrideProps = _.isFunction(overrideProps) ? overrideProps({ ...defaultProps, ...usersProps }) : overrideProps\n\n  // Merge props\n  /* eslint-disable react/prop-types */\n  const props = { ...defaultProps, ...usersProps, ...overrideProps }\n\n  // Merge className\n  if (defaultProps.className || overrideProps.className || usersProps.className) {\n    const mergedClassesNames = cx(defaultProps.className, overrideProps.className, usersProps.className)\n    props.className = _.uniq(mergedClassesNames.split(' ')).join(' ')\n  }\n\n  // Merge style\n  if (defaultProps.style || overrideProps.style || usersProps.style) {\n    props.style = { ...defaultProps.style, ...usersProps.style, ...overrideProps.style }\n  }\n\n  // ----------------------------------------\n  // Get key\n  // ----------------------------------------\n\n  // Use key, childKey, or generate key\n  if (!props.key) {\n    const { childKey } = props\n\n    if (childKey) {\n      // apply and consume the childKey\n      props.key = typeof childKey === 'function' ? childKey(props) : childKey\n      delete props.childKey\n    } else if (valIsString || valIsNumber) {\n      // use string/number shorthand values as the key\n      props.key = val\n    }\n  }\n  /* eslint-enable react/prop-types */\n\n  // ----------------------------------------\n  // Create Element\n  // ----------------------------------------\n\n  // Clone ReactElements\n  if (isReactElement) return cloneElement(val, props)\n\n  // Create ReactElements from built up props\n  if (isPrimitiveValue || isPropsObject) return <Component {...props} />\n}\n\n// ============================================================\n// Factory Creators\n// ============================================================\n\n/**\n * Creates a `createShorthand` function that is waiting for a value and options.\n *\n * @param {function|string} Component A ReactClass or string\n * @param {function} mapValueToProps A function that maps a primitive value to the Component props\n * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.\n */\nexport function createShorthandFactory(Component, mapValueToProps) {\n  if (typeof Component !== 'function' && typeof Component !== 'string') {\n    throw new Error('createShorthandFactory() Component must be a string or function.')\n  }\n\n  return (val, options) => createShorthand(Component, mapValueToProps, val, options)\n}\n\n// ============================================================\n// HTML Factories\n// ============================================================\nexport const createHTMLDivision = createShorthandFactory('div', val => ({ children: val }))\nexport const createHTMLImage = createShorthandFactory('img', val => ({ src: val }))\nexport const createHTMLInput = createShorthandFactory('input', val => ({ type: val }))\nexport const createHTMLLabel = createShorthandFactory('label', val => ({ children: val }))\nexport const createHTMLParagraph = createShorthandFactory('p', val => ({ children: val }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/getElementType.js":"/**\n * Returns a createElement() type based on the props of the Component.\n * Useful for calculating what type a component should render as.\n *\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @param {function} [getDefault] A function that returns a default element type.\n * @returns {string|function} A ReactElement type\n */\nfunction getElementType(Component, props, getDefault) {\n  const { defaultProps = {} } = Component\n\n  // ----------------------------------------\n  // user defined \"as\" element type\n\n  if (props.as && props.as !== defaultProps.as) return props.as\n\n  // ----------------------------------------\n  // computed default element type\n\n  if (getDefault) {\n    const computedDefault = getDefault()\n    if (computedDefault) return computedDefault\n  }\n\n  // ----------------------------------------\n  // infer anchor links\n\n  if (props.href) return 'a'\n\n  // ----------------------------------------\n  // use defaultProp or 'div'\n\n  return defaultProps.as || 'div'\n}\n\nexport default getElementType\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/getUnhandledProps.js":"/**\n * Returns an object consisting of props beyond the scope of the Component.\n * Useful for getting and spreading unknown props from the user.\n * @param {function} Component A function or ReactClass.\n * @param {object} props A ReactElement props object\n * @returns {{}} A shallow copy of the prop object\n */\nconst getUnhandledProps = (Component, props) => {\n  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`\n  const { handledProps = [] } = Component\n\n  return Object.keys(props).reduce((acc, prop) => {\n    if (prop === 'childKey') return acc\n    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop]\n    return acc\n  }, {})\n}\n\nexport default getUnhandledProps\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/htmlInputPropsUtils.js":"import _ from 'lodash'\n\nexport const htmlInputAttrs = [\n  // REACT\n  'selected', 'defaultValue', 'defaultChecked',\n\n  // LIMITED HTML PROPS\n  'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min',\n  'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',\n\n  // Heads Up!\n  // Do not pass disabled, it duplicates the SUI CSS opacity rule.\n  // 'disabled',\n]\n\nexport const htmlInputEvents = [\n  // EVENTS\n  // keyboard\n  'onKeyDown', 'onKeyPress', 'onKeyUp',\n\n  // focus\n  'onFocus', 'onBlur',\n\n  // form\n  'onChange', 'onInput',\n\n  // mouse\n  'onClick', 'onContextMenu',\n  'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop',\n  'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp',\n\n  // selection\n  'onSelect',\n\n  // touch\n  'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart',\n]\n\nexport const htmlInputProps = [...htmlInputAttrs, ...htmlInputEvents]\n\n/**\n * Returns an array of objects consisting of: props of html input element and rest.\n * @param {object} props A ReactElement props object\n * @param {array} [htmlProps] An array of html input props\n * @returns {[{}, {}]} An array of objects\n */\nexport const partitionHTMLInputProps = (props, htmlProps = htmlInputProps) => {\n  const inputProps = {}\n  const rest = {}\n\n  _.forEach(props, (val, prop) => _.includes(htmlProps, prop) ? (inputProps[prop] = val) : (rest[prop] = val))\n\n  return [inputProps, rest]\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/index.js":"export { default as AutoControlledComponent } from './AutoControlledComponent'\nexport * as childrenUtils from './childrenUtils'\n\nexport {\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n\n  useOnlyProp,\n  useTextAlignProp,\n  useVerticalAlignProp,\n  useWidthProp,\n} from './classNameBuilders'\n\nexport * as customPropTypes from './customPropTypes'\n\nexport {\n  debug,\n  makeDebugger,\n} from './debug'\n\nexport * from './factories'\nexport { default as getUnhandledProps } from './getUnhandledProps'\nexport { default as getElementType } from './getElementType'\n\nexport {\n  htmlInputAttrs,\n  htmlInputEvents,\n  htmlInputProps,\n  partitionHTMLInputProps,\n} from './htmlInputPropsUtils'\n\nexport { default as isBrowser } from './isBrowser'\nexport { default as leven } from './leven'\nexport * as META from './META'\nexport * as SUI from './SUI'\n\nexport { default as keyboardKey } from './keyboardKey'\nexport { numberToWordMap, numberToWord } from './numberToWord'\nexport { objectDiff } from './objectDiff'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/isBrowser.js":"const hasDocument = typeof document === 'object' && document !== null\nconst hasWindow = typeof window === 'object' && window !== null && window.self === window\n\nexport default hasDocument && hasWindow\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/keyboardKey.js":"/**\n * All previous KeyboardEvent key identifying properties are deprecated in favor of `key`.\n * Unfortunately, `key` is not yet fully supported.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n */\nimport _ from 'lodash'\n\nconst codes = {\n  // ----------------------------------------\n  // By Code\n  // ----------------------------------------\n  3: 'Cancel',\n  6: 'Help',\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  28: 'Convert',\n  29: 'NonConvert',\n  30: 'Accept',\n  31: 'ModeChange',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  41: 'Select',\n  42: 'Print',\n  43: 'Execute',\n  44: 'PrintScreen',\n  45: 'Insert',\n  46: 'Delete',\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n  91: 'OS',\n  93: 'ContextMenu',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  181: 'VolumeMute',\n  182: 'VolumeDown',\n  183: 'VolumeUp',\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: [\"'\", '\"'],\n  224: 'Meta',\n  225: 'AltGraph',\n  246: 'Attn',\n  247: 'CrSel',\n  248: 'ExSel',\n  249: 'EraseEof',\n  250: 'Play',\n  251: 'ZoomOut',\n}\n\n// Function Keys (F1-24)\n_.times(24, (i) => (codes[112 + i] = `F${i + 1}`))\n\n// Alphabet (a-Z)\n_.times(26, (i) => {\n  const n = i + 65\n  codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)]\n})\n\nconst keyboardKey = {\n  codes,\n\n  /**\n   * Get the `keyCode` or `which` value from a keyboard event or `key` name.\n   * @param {string|object} name A keyboard event like object or `key` name.\n   * @param {string} [name.key] If object, it must have one of these keys.\n   * @param {string} [name.keyCode] If object, it must have one of these keys.\n   * @param {string} [name.which] If object, it must have one of these keys.\n   * @returns {*}\n   */\n  getCode(name) {\n    if (_.isObject(name)) {\n      return name.keyCode || name.which || this[name.key]\n    }\n    return this[name]\n  },\n\n  /**\n   * Get the key name from a keyboard event, `keyCode`, or `which` value.\n   * @param {number|object} code A keyboard event like object or key name.\n   * @param {number} [code.keyCode] If object, it must have one of these keys.\n   * @param {number} [code.which] If object, it must have one of these keys.\n   * @param {number} [code.shiftKey] If object, it must have one of these keys.\n   * @returns {*}\n   */\n  getName(code) {\n    const isEvent = _.isObject(code)\n    let name = codes[isEvent ? code.keyCode || code.which : code]\n\n    if (Array.isArray(name)) {\n      if (isEvent) {\n        name = name[code.shiftKey ? 1 : 0]\n      } else {\n        name = name[0]\n      }\n    }\n\n    return name\n  },\n\n  // ----------------------------------------\n  // By Name\n  // ----------------------------------------\n  // declare these manually for static analysis\n  Cancel: 3,\n  Help: 6,\n  Backspace: 8,\n  Tab: 9,\n  Clear: 12,\n  Enter: 13,\n  Shift: 16,\n  Control: 17,\n  Alt: 18,\n  Pause: 19,\n  CapsLock: 20,\n  Escape: 27,\n  Convert: 28,\n  NonConvert: 29,\n  Accept: 30,\n  ModeChange: 31,\n  ' ': 32,\n  PageUp: 33,\n  PageDown: 34,\n  End: 35,\n  Home: 36,\n  ArrowLeft: 37,\n  ArrowUp: 38,\n  ArrowRight: 39,\n  ArrowDown: 40,\n  Select: 41,\n  Print: 42,\n  Execute: 43,\n  PrintScreen: 44,\n  Insert: 45,\n  Delete: 46,\n  0: 48, ')': 48,\n  1: 49, '!': 49,\n  2: 50, '@': 50,\n  3: 51, '#': 51,\n  4: 52, $: 52,\n  5: 53, '%': 53,\n  6: 54, '^': 54,\n  7: 55, '&': 55,\n  8: 56, '*': 56,\n  9: 57, '(': 57,\n  a: 65, A: 65,\n  b: 66, B: 66,\n  c: 67, C: 67,\n  d: 68, D: 68,\n  e: 69, E: 69,\n  f: 70, F: 70,\n  g: 71, G: 71,\n  h: 72, H: 72,\n  i: 73, I: 73,\n  j: 74, J: 74,\n  k: 75, K: 75,\n  l: 76, L: 76,\n  m: 77, M: 77,\n  n: 78, N: 78,\n  o: 79, O: 79,\n  p: 80, P: 80,\n  q: 81, Q: 81,\n  r: 82, R: 82,\n  s: 83, S: 83,\n  t: 84, T: 84,\n  u: 85, U: 85,\n  v: 86, V: 86,\n  w: 87, W: 87,\n  x: 88, X: 88,\n  y: 89, Y: 89,\n  z: 90, Z: 90,\n  OS: 91,\n  ContextMenu: 93,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  F13: 124,\n  F14: 125,\n  F15: 126,\n  F16: 127,\n  F17: 128,\n  F18: 129,\n  F19: 130,\n  F20: 131,\n  F21: 132,\n  F22: 133,\n  F23: 134,\n  F24: 135,\n  NumLock: 144,\n  ScrollLock: 145,\n  VolumeMute: 181,\n  VolumeDown: 182,\n  VolumeUp: 183,\n  ';': 186, ':': 186,\n  '=': 187, '+': 187,\n  ',': 188, '<': 188,\n  '-': 189, _: 189,\n  '.': 190, '>': 190,\n  '/': 191, '?': 191,\n  '`': 192, '~': 192,\n  '[': 219, '{': 219,\n  '\\\\': 220, '\\|': 220,\n  ']': 221, '}': 221,\n  \"'\": 222, '\"': 222,\n  Meta: 224,\n  AltGraph: 225,\n  Attn: 246,\n  CrSel: 247,\n  ExSel: 248,\n  EraseEof: 249,\n  Play: 250,\n  ZoomOut: 251,\n}\n\n// ----------------------------------------\n// By Alias\n// ----------------------------------------\n// provide dot-notation accessible keys for all key names\nkeyboardKey.Spacebar = keyboardKey[' ']\nkeyboardKey.Digit0 = keyboardKey['0']\nkeyboardKey.Digit1 = keyboardKey['1']\nkeyboardKey.Digit2 = keyboardKey['2']\nkeyboardKey.Digit3 = keyboardKey['3']\nkeyboardKey.Digit4 = keyboardKey['4']\nkeyboardKey.Digit5 = keyboardKey['5']\nkeyboardKey.Digit6 = keyboardKey['6']\nkeyboardKey.Digit7 = keyboardKey['7']\nkeyboardKey.Digit8 = keyboardKey['8']\nkeyboardKey.Digit9 = keyboardKey['9']\nkeyboardKey.Tilde = keyboardKey['~']\nkeyboardKey.GraveAccent = keyboardKey['`']\nkeyboardKey.ExclamationPoint = keyboardKey['!']\nkeyboardKey.AtSign = keyboardKey['@']\nkeyboardKey.PoundSign = keyboardKey['#']\nkeyboardKey.PercentSign = keyboardKey['%']\nkeyboardKey.Caret = keyboardKey['^']\nkeyboardKey.Ampersand = keyboardKey['&']\nkeyboardKey.PlusSign = keyboardKey['+']\nkeyboardKey.MinusSign = keyboardKey['-']\nkeyboardKey.EqualsSign = keyboardKey['=']\nkeyboardKey.DivisionSign = keyboardKey['/']\nkeyboardKey.MultiplicationSign = keyboardKey['*']\nkeyboardKey.Comma = keyboardKey[',']\nkeyboardKey.Decimal = keyboardKey['.']\nkeyboardKey.Colon = keyboardKey[':']\nkeyboardKey.Semicolon = keyboardKey[';']\nkeyboardKey.Pipe = keyboardKey['|']\nkeyboardKey.BackSlash = keyboardKey['\\\\']\nkeyboardKey.QuestionMark = keyboardKey['?']\nkeyboardKey.SingleQuote = keyboardKey['\"']\nkeyboardKey.DoubleQuote = keyboardKey['\"']\nkeyboardKey.LeftCurlyBrace = keyboardKey['{']\nkeyboardKey.RightCurlyBrace = keyboardKey['}']\nkeyboardKey.LeftParenthesis = keyboardKey['(']\nkeyboardKey.RightParenthesis = keyboardKey[')']\nkeyboardKey.LeftAngleBracket = keyboardKey['<']\nkeyboardKey.RightAngleBracket = keyboardKey['>']\nkeyboardKey.LeftSquareBracket = keyboardKey['[']\nkeyboardKey.RightSquareBracket = keyboardKey[']']\n\nexport default keyboardKey\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/leven.js":"// Copy of sindre's leven, wrapped in dead code elimination for production\n// https://github.com/sindresorhus/leven/blob/master/index.js\n\nlet leven = () => 0\n\nif (process.env.NODE_ENV !== 'production') {\n  /* eslint-disable complexity, no-nested-ternary */\n  const arr = []\n  const charCodeCache = []\n\n  leven = (a, b) => {\n    if (a === b) return 0\n\n    const aLen = a.length\n    const bLen = b.length\n\n    if (aLen === 0) return bLen\n    if (bLen === 0) return aLen\n\n    let bCharCode\n    let ret\n    let tmp\n    let tmp2\n    let i = 0\n    let j = 0\n\n    while (i < aLen) {\n      charCodeCache[i] = a.charCodeAt(i)\n      arr[i] = ++i\n    }\n\n    while (j < bLen) {\n      bCharCode = b.charCodeAt(j)\n      tmp = j++\n      ret = j\n\n      for (i = 0; i < aLen; i++) {\n        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1\n        tmp = arr[i]\n        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2\n      }\n    }\n\n    return ret\n  }\n}\n\nexport default leven\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/META.js":"import _ from 'lodash/fp'\n\nexport const TYPES = {\n  ADDON: 'addon',\n  COLLECTION: 'collection',\n  ELEMENT: 'element',\n  VIEW: 'view',\n  MODULE: 'module',\n}\n\nconst TYPE_VALUES = _.values(TYPES)\n\n/**\n * Determine if an object qualifies as a META object.\n * It must have the required keys and valid values.\n * @private\n * @param {Object} _meta A proposed component _meta object.\n * @returns {Boolean}\n */\nexport const isMeta = (_meta) => (\n  _.includes(_.get('type', _meta), TYPE_VALUES)\n)\n\n/**\n * Extract a component's _meta object and optional key.\n * Handles literal _meta objects, classes with _meta, objects with _meta\n * @private\n * @param {function|object} metaArg A class, a component instance, or meta object..\n * @returns {object|string|undefined}\n */\nconst getMeta = (metaArg) => {\n  // literal\n  if (isMeta(metaArg)) return metaArg\n\n  // from prop\n  else if (isMeta(_.get('_meta', metaArg))) return metaArg._meta\n\n  // from class\n  else if (isMeta(_.get('constructor._meta', metaArg))) return metaArg.constructor._meta\n}\n\nconst metaHasKeyValue = _.curry((key, val, metaArg) => _.flow(getMeta, _.get(key), _.eq(val))(metaArg))\nexport const isType = metaHasKeyValue('type')\n\n// ----------------------------------------\n// Export\n// ----------------------------------------\n\n// type\nexport const isAddon = isType(TYPES.ADDON)\nexport const isCollection = isType(TYPES.COLLECTION)\nexport const isElement = isType(TYPES.ELEMENT)\nexport const isView = isType(TYPES.VIEW)\nexport const isModule = isType(TYPES.MODULE)\n\n// parent\nexport const isParent = _.flow(getMeta, _.has('parent'), _.eq(false))\nexport const isChild = _.flow(getMeta, _.has('parent'))\n\n// other\nexport const isPrivate = _.flow(getMeta, _.get('name'), _.startsWith('_'))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/numberToWord.js":"export const numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen',\n}\n\n/**\n * Return the number word for numbers 1-16.\n * Returns strings or numbers as is if there is no corresponding word.\n * Returns an empty string if value is not a string or number.\n * @param {string|number} value The value to convert to a word.\n * @returns {string}\n */\nexport function numberToWord(value) {\n  const type = typeof value\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value\n  }\n\n  return ''\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/objectDiff.js":"import _ from 'lodash'\n\n/**\n * Naive and inefficient object difference, intended for development / debugging use only.\n * Deleted keys are shown as [DELETED].\n * @param {{}} source The source object\n * @param {{}} target The target object.\n * @returns {{}} A new object containing new/modified/deleted keys.\n * @example\n * import { objectDiff } from 'src/lib'\n *\n * const a = { key: 'val', foo: 'bar' }\n * const b = { key: 'val', foo: 'baz' }\n *\n * objectDiff(a, b)\n * //=> { foo: 'baz' }\n */\nexport const objectDiff = (source, target) => _.transform(source, (res, val, key) => {\n  // deleted keys\n  if (!_.has(target, key)) res[key] = '[DELETED]'\n  // new keys / changed values\n  else if (!_.isEqual(val, target[key])) res[key] = target[key]\n}, {})\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/lib/SUI.js":"import _ from 'lodash'\nimport { numberToWordMap } from './numberToWord'\n\nexport const COLORS = [\n  'red',\n  'orange',\n  'yellow',\n  'olive',\n  'green',\n  'teal',\n  'blue',\n  'violet',\n  'purple',\n  'pink',\n  'brown',\n  'grey',\n  'black',\n]\nexport const FLOATS = ['left', 'right']\nexport const SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']\nexport const TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified']\nexport const VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top']\n\nexport const VISIBILITY = ['mobile', 'tablet', 'computer', 'large screen', 'widescreen']\n\nexport const WIDTHS = [\n  ..._.keys(numberToWordMap),\n  ..._.keys(numberToWordMap).map(Number),\n  ..._.values(numberToWordMap),\n]\n\n// Generated from:\n// https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css\nexport const WEB_CONTENT_ICONS = [\n  'search', 'mail outline', 'signal', 'setting', 'home', 'inbox', 'browser', 'tag', 'tags', 'image', 'calendar',\n  'comment', 'shop', 'comments', 'external', 'privacy', 'settings', 'comments', 'external', 'trophy', 'payment', 'feed',\n  'alarm outline', 'tasks', 'cloud', 'lab', 'mail', 'dashboard', 'comment outline', 'comments outline', 'sitemap',\n  'idea', 'alarm', 'terminal', 'code', 'protect', 'calendar outline', 'ticket', 'external square', 'bug', 'mail square',\n  'history', 'options', 'text telephone', 'find', 'wifi', 'alarm mute', 'alarm mute outline', 'copyright', 'at',\n  'eyedropper', 'paint brush', 'heartbeat', 'mouse pointer', 'hourglass empty', 'hourglass start', 'hourglass half',\n  'hourglass end', 'hourglass full', 'hand pointer', 'trademark', 'registered', 'creative commons', 'add to calendar',\n  'remove from calendar', 'delete calendar', 'checked calendar', 'industry', 'shopping bag', 'shopping basket',\n  'hashtag', 'percent', 'address book', 'address book outline', 'address card', 'address card outline', 'id badge',\n  'id card', 'id card outline', 'podcast', 'window close', 'window close outline', 'window maximize', 'window minimize',\n  'window restore',\n]\nexport const USER_ACTIONS_ICONS = [\n  'wait', 'download', 'repeat', 'refresh', 'lock', 'bookmark', 'print', 'write', 'adjust', 'theme', 'edit',\n  'external share', 'ban', 'mail forward', 'share', 'expand', 'compress', 'unhide', 'hide', 'random', 'retweet',\n  'sign out', 'pin', 'sign in', 'upload', 'call', 'remove bookmark', 'call square', 'unlock', 'configure', 'filter',\n  'wizard', 'undo', 'exchange', 'cloud download', 'cloud upload', 'reply', 'reply all', 'erase', 'unlock alternate',\n  'write square', 'share square', 'archive', 'translate', 'recycle', 'send', 'send outline', 'share alternate',\n  'share alternate square', 'add to cart', 'in cart', 'add user', 'remove user', 'object group', 'object ungroup',\n  'clone', 'talk', 'talk outline',\n]\nexport const MESSAGES_ICONS = [\n  'help circle', 'info circle', 'warning circle', 'warning sign', 'announcement', 'help', 'info', 'warning', 'birthday',\n  'help circle outline',\n]\nexport const USERS_ICONS = [\n  'user', 'users', 'doctor', 'handicap', 'student', 'child', 'spy', 'user circle', 'user circle outline',\n  'user outline',\n]\nexport const GENDER_SEXUALITY_ICONS = [\n  'female', 'male', 'woman', 'man', 'non binary transgender', 'intergender', 'transgender', 'lesbian', 'gay',\n  'heterosexual', 'other gender', 'other gender vertical', 'other gender horizontal', 'neuter', 'genderless',\n]\nexport const ACCESSIBILITY_ICONS = [\n  'universal access', 'wheelchair', 'blind', 'audio description', 'volume control phone', 'braille', 'asl',\n  'assistive listening systems', 'deafness', 'sign language', 'low vision',\n]\nexport const VIEW_ADJUSTMENT_ICONS = [\n  'block layout', 'grid layout', 'list layout', 'zoom', 'zoom out', 'resize vertical', 'resize horizontal', 'maximize',\n  'crop',\n]\nexport const LITERAL_OBJECTS_ICONS = [\n  'cocktail', 'road', 'flag', 'book', 'gift', 'leaf', 'fire', 'plane', 'magnet', 'lemon', 'world', 'travel', 'shipping',\n  'money', 'legal', 'lightning', 'umbrella', 'treatment', 'suitcase', 'bar', 'flag outline', 'flag checkered', 'puzzle',\n  'fire extinguisher', 'rocket', 'anchor', 'bullseye', 'sun', 'moon', 'fax', 'life ring', 'bomb', 'soccer',\n  'calculator', 'diamond', 'sticky note', 'sticky note outline', 'law', 'hand peace', 'hand rock', 'hand paper',\n  'hand scissors', 'hand lizard', 'hand spock', 'tv', 'thermometer empty', 'thermometer full', 'thermometer half',\n  'thermometer quarter', 'thermometer three quarters', 'bath', 'snowflake outline',\n]\nexport const SHAPES_ICONS = [\n  'crosshairs', 'asterisk', 'square outline', 'certificate', 'square', 'quote left', 'quote right', 'spinner', 'circle',\n  'ellipsis horizontal', 'ellipsis vertical', 'cube', 'cubes', 'circle notched', 'circle thin',\n]\nexport const ITEM_SELECTION_ICONS = [\n  'checkmark', 'remove', 'checkmark box', 'move', 'add circle', 'minus circle', 'remove circle', 'check circle',\n  'remove circle outline', 'check circle outline', 'plus', 'minus', 'add square', 'radio', 'minus square',\n  'minus square outline', 'check square', 'selected radio', 'plus square outline', 'toggle off', 'toggle on',\n]\nexport const MEDIA_ICONS = [\n  'film', 'sound', 'photo', 'bar chart', 'camera retro', 'newspaper', 'area chart', 'pie chart', 'line chart',\n]\nexport const POINTERS_ICONS = [\n  'arrow circle outline down', 'arrow circle outline up', 'chevron left', 'chevron right', 'arrow left', 'arrow right',\n  'arrow up', 'arrow down', 'chevron up', 'chevron down', 'pointing right', 'pointing left', 'pointing up',\n  'pointing down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow circle down', 'caret down',\n  'caret up', 'caret left', 'caret right', 'angle double left', 'angle double right', 'angle double up',\n  'angle double down', 'angle left', 'angle right', 'angle up', 'angle down', 'chevron circle left',\n  'chevron circle right', 'chevron circle up', 'chevron circle down', 'toggle down', 'toggle up', 'toggle right',\n  'long arrow down', 'long arrow up', 'long arrow left', 'long arrow right', 'arrow circle outline right',\n  'arrow circle outline left', 'toggle left',\n]\nexport const MOBILE_ICONS = [\n  'tablet', 'mobile', 'battery full', 'battery high', 'battery medium', 'battery low', 'battery empty',\n]\nexport const COMPUTER_ICONS = [\n  'power', 'trash outline', 'disk outline', 'desktop', 'laptop', 'game', 'keyboard', 'plug',\n]\nexport const FILE_SYSTEM_ICONS = [\n  'trash', 'file outline', 'folder', 'folder open', 'file text outline', 'folder outline', 'folder open outline',\n  'level up', 'level down', 'file', 'file text', 'file pdf outline', 'file word outline', 'file excel outline',\n  'file powerpoint outline', 'file image outline', 'file archive outline', 'file audio outline', 'file video outline',\n  'file code outline',\n]\nexport const TECHNOLOGIES_ICONS = [\n  'qrcode', 'barcode', 'rss', 'fork', 'html5', 'css3', 'rss square', 'openid', 'database', 'server', 'usb', 'bluetooth',\n  'bluetooth alternative', 'microchip',\n]\nexport const RATING_ICONS = [\n  'heart', 'star', 'empty star', 'thumbs outline up', 'thumbs outline down', 'star half', 'empty heart', 'smile',\n  'frown', 'meh', 'star half empty', 'thumbs up', 'thumbs down',\n]\nexport const AUDIO_ICONS = [\n  'music', 'video play outline', 'volume off', 'volume down', 'volume up', 'record', 'step backward', 'fast backward',\n  'backward', 'play', 'pause', 'stop', 'forward', 'fast forward', 'step forward', 'eject', 'unmute', 'mute',\n  'video play', 'closed captioning', 'pause circle', 'pause circle outline', 'stop circle', 'stop circle outline',\n]\nexport const MAP_LOCATIONS_TRANSPORTATION_ICONS = [\n  'marker', 'coffee', 'food', 'building outline', 'hospital', 'emergency', 'first aid', 'military', 'h',\n  'location arrow', 'compass', 'space shuttle', 'university', 'building', 'paw', 'spoon', 'car', 'taxi', 'tree',\n  'bicycle', 'bus', 'ship', 'motorcycle', 'street view', 'hotel', 'train', 'subway', 'map pin', 'map signs',\n  'map outline', 'map',\n]\nexport const TABLES_ICONS = [\n  'table', 'columns', 'sort', 'sort descending', 'sort ascending', 'sort alphabet ascending',\n  'sort alphabet descending', 'sort content ascending', 'sort content descending', 'sort numeric ascending',\n  'sort numeric descending',\n]\nexport const TEXT_EDITOR_ICONS = [\n  'font', 'bold', 'italic', 'text height', 'text width', 'align left', 'align center', 'align right', 'align justify',\n  'list', 'outdent', 'indent', 'linkify', 'cut', 'copy', 'attach', 'save', 'content', 'unordered list', 'ordered list',\n  'strikethrough', 'underline', 'paste', 'unlinkify', 'superscript', 'subscript', 'header', 'paragraph', 'text cursor',\n]\nexport const CURRENCY_ICONS = [\n  'euro', 'pound', 'dollar', 'rupee', 'yen', 'ruble', 'won', 'bitcoin', 'lira', 'shekel',\n]\nexport const PAYMENT_OPTIONS_ICONS = [\n  'paypal', 'google wallet', 'visa', 'mastercard', 'discover', 'american express', 'paypal card', 'stripe',\n  'japan credit bureau', 'diners club', 'credit card alternative',\n]\nexport const NETWORKS_AND_WEBSITE_ICONS = [\n  'twitter square', 'facebook square', 'linkedin square', 'github square', 'twitter', 'facebook f', 'github',\n  'pinterest', 'pinterest square', 'google plus square', 'google plus', 'linkedin', 'github alternate', 'maxcdn',\n  'youtube square', 'youtube', 'xing', 'xing square', 'youtube play', 'dropbox', 'stack overflow', 'instagram',\n  'flickr', 'adn', 'bitbucket', 'bitbucket square', 'tumblr', 'tumblr square', 'apple', 'windows', 'android', 'linux',\n  'dribble', 'skype', 'foursquare', 'trello', 'gittip', 'vk', 'weibo', 'renren', 'pagelines', 'stack exchange',\n  'vimeo square', 'slack', 'wordpress', 'yahoo', 'google', 'reddit', 'reddit square', 'stumbleupon circle',\n  'stumbleupon', 'delicious', 'digg', 'pied piper', 'pied piper alternate', 'drupal', 'joomla', 'behance',\n  'behance square', 'steam', 'steam square', 'spotify', 'deviantart', 'soundcloud', 'vine', 'codepen', 'jsfiddle',\n  'rebel', 'empire', 'git square', 'git', 'hacker news', 'tencent weibo', 'qq', 'wechat', 'slideshare', 'twitch',\n  'yelp', 'lastfm', 'lastfm square', 'ioxhost', 'angellist', 'meanpath', 'buysellads', 'connectdevelop', 'dashcube',\n  'forumbee', 'leanpub', 'sellsy', 'shirtsinbulk', 'simplybuilt', 'skyatlas', 'facebook', 'pinterest', 'whatsapp',\n  'viacoin', 'medium', 'y combinator', 'optinmonster', 'opencart', 'expeditedssl', 'gg', 'gg circle', 'tripadvisor',\n  'odnoklassniki', 'odnoklassniki square', 'pocket', 'wikipedia', 'safari', 'chrome', 'firefox', 'opera',\n  'internet explorer', 'contao', '500px', 'amazon', 'houzz', 'vimeo', 'black tie', 'fonticons', 'reddit alien',\n  'microsoft edge', 'codiepie', 'modx', 'fort awesome', 'product hunt', 'mixcloud', 'scribd', 'gitlab', 'wpbeginner',\n  'wpforms', 'envira gallery', 'glide', 'glide g', 'viadeo', 'viadeo square', 'snapchat', 'snapchat ghost',\n  'snapchat square', 'pied piper hat', 'first order', 'yoast', 'themeisle', 'google plus circle', 'font awesome',\n  'bandcamp', 'eercast', 'etsy', 'free code camp', 'grav', 'imdb', 'linode', 'meetup', 'quora', 'ravelry',\n  'superpowers', 'telegram', 'wpexplorer',\n]\nexport const ICONS = [\n  ...WEB_CONTENT_ICONS,\n  ...USER_ACTIONS_ICONS,\n  ...MESSAGES_ICONS,\n  ...USERS_ICONS,\n  ...GENDER_SEXUALITY_ICONS,\n  ...ACCESSIBILITY_ICONS,\n  ...VIEW_ADJUSTMENT_ICONS,\n  ...LITERAL_OBJECTS_ICONS,\n  ...SHAPES_ICONS,\n  ...ITEM_SELECTION_ICONS,\n  ...MEDIA_ICONS,\n  ...POINTERS_ICONS,\n  ...MOBILE_ICONS,\n  ...COMPUTER_ICONS,\n  ...FILE_SYSTEM_ICONS,\n  ...TECHNOLOGIES_ICONS,\n  ...RATING_ICONS,\n  ...AUDIO_ICONS,\n  ...MAP_LOCATIONS_TRANSPORTATION_ICONS,\n  ...TABLES_ICONS,\n  ...TEXT_EDITOR_ICONS,\n  ...CURRENCY_ICONS,\n  ...PAYMENT_OPTIONS_ICONS,\n  ...NETWORKS_AND_WEBSITE_ICONS,\n]\nexport const ICON_ALIASES = [\n  'like', 'favorite', 'video', 'check', 'close', 'cancel', 'delete', 'x', 'zoom in', 'magnify', 'shutdown', 'clock',\n  'time', 'play circle outline', 'headphone', 'camera', 'video camera', 'picture', 'pencil', 'compose', 'point', 'tint',\n  'signup', 'plus circle', 'question circle', 'dont', 'minimize', 'add', 'exclamation circle', 'attention', 'eye',\n  'exclamation triangle', 'shuffle', 'chat', 'cart', 'shopping cart', 'bar graph', 'key', 'cogs', 'discussions',\n  'like outline', 'dislike outline', 'heart outline', 'log out', 'thumb tack', 'winner', 'phone', 'bookmark outline',\n  'phone square', 'credit card', 'hdd outline', 'bullhorn', 'bell outline', 'hand outline right', 'hand outline left',\n  'hand outline up', 'hand outline down', 'globe', 'wrench', 'briefcase', 'group', 'linkify', 'chain', 'flask',\n  'sidebar', 'bars', 'list ul', 'list ol', 'numbered list', 'magic', 'truck', 'currency', 'triangle down', 'dropdown',\n  'triangle up', 'triangle left', 'triangle right', 'envelope', 'conversation', 'rain', 'clipboard', 'lightbulb',\n  'bell', 'ambulance', 'medkit', 'fighter jet', 'beer', 'plus square', 'computer', 'circle outline', 'gamepad',\n  'star half full', 'broken chain', 'question', 'exclamation', 'eraser', 'microphone', 'microphone slash', 'shield',\n  'target', 'play circle', 'pencil square', 'eur', 'gbp', 'usd', 'inr', 'cny', 'rmb', 'jpy', 'rouble', 'rub', 'krw',\n  'btc', 'gratipay', 'zip', 'dot circle outline', 'try', 'graduation', 'circle outline', 'sliders', 'weixin', 'tty',\n  'teletype', 'binoculars', 'power cord', 'wifi', 'visa card', 'mastercard card', 'discover card', 'amex',\n  'american express card', 'stripe card', 'bell slash', 'bell slash outline', 'area graph', 'pie graph', 'line graph',\n  'cc', 'sheqel', 'ils', 'plus cart', 'arrow down cart', 'detective', 'venus', 'mars', 'mercury', 'intersex',\n  'venus double', 'female homosexual', 'mars double', 'male homosexual', 'venus mars', 'mars stroke', 'mars alternate',\n  'mars vertical', 'mars stroke vertical', 'mars horizontal', 'mars stroke horizontal', 'asexual', 'facebook official',\n  'user plus', 'user times', 'user close', 'user cancel', 'user delete', 'user x', 'bed', 'yc', 'ycombinator',\n  'battery four', 'battery three', 'battery three quarters', 'battery two', 'battery half', 'battery one',\n  'battery quarter', 'battery zero', 'i cursor', 'jcb', 'japan credit bureau card', 'diners club card', 'balance',\n  'hourglass outline', 'hourglass zero', 'hourglass one', 'hourglass two', 'hourglass three', 'hourglass four', 'grab',\n  'hand victory', 'tm', 'r circle', 'television', 'five hundred pixels', 'calendar plus', 'calendar minus',\n  'calendar times', 'calendar check', 'factory', 'commenting', 'commenting outline', 'edge', 'ms edge',\n  'wordpress beginner', 'wordpress forms', 'envira', 'question circle outline', 'assistive listening devices', 'als',\n  'ald', 'asl interpreting', 'deaf', 'american sign language interpreting', 'hard of hearing', 'signing',\n  'new pied piper', 'theme isle', 'google plus official', 'fa', 'bathtub', 'drivers license', 'drivers license outline',\n  's15', 'thermometer', 'times rectangle', 'times rectangle outline', 'vcard', 'vcard outline',\n]\nexport const ICONS_AND_ALIASES = [\n  ...ICONS,\n  ...ICON_ALIASES,\n]\n\n// Some icon names are not part of icons.css.\n// These are only valid as children of other components.\n// Their CSS rules are defined by a specific component's CSS.\n// We don't want to show name warnings for those usages so we add them as valid names here.\nexport const COMPONENT_CONTEXT_SPECIFIC_ICONS = [\n  'left dropdown',      // nested dropdown menu direction icon\n]\nexport const ALL_ICONS_IN_ALL_CONTEXTS = [\n  ...ICONS_AND_ALIASES,\n  ...COMPONENT_CONTEXT_SPECIFIC_ICONS,\n]\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Confirm/Confirm.js":"import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Button from '../../elements/Button'\nimport Modal from '../../modules/Modal'\n\n/**\n * A Confirm modal gives the user a choice to confirm or cancel an action/\n * @see Modal\n */\nclass Confirm extends Component {\n  static propTypes = {\n    /** The cancel button text. */\n    cancelButton: customPropTypes.itemShorthand,\n\n    /** The OK button text. */\n    confirmButton: customPropTypes.itemShorthand,\n\n    /** The ModalContent text. */\n    content: customPropTypes.itemShorthand,\n\n    /** The ModalHeader text. */\n    header: customPropTypes.itemShorthand,\n\n    /**\n     * Called when the Modal is closed without clicking confirm.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onCancel: PropTypes.func,\n\n    /**\n     * Called when the OK button is clicked.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onConfirm: PropTypes.func,\n\n    /** Whether or not the modal is visible. */\n    open: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    cancelButton: 'Cancel',\n    confirmButton: 'OK',\n    content: 'Are you sure?',\n  }\n\n  static _meta = {\n    name: 'Confirm',\n    type: META.TYPES.ADDON,\n  }\n\n  handleCancel = e => {\n    _.invoke(this.props, 'onCancel', e, this.props)\n  }\n\n  handleCancelOverrides = predefinedProps => ({\n    onClick: (e, buttonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps)\n      this.handleCancel(e)\n    },\n  })\n\n  handleConfirmOverrides = predefinedProps => ({\n    onClick: (e, buttonProps) => {\n      _.invoke(predefinedProps, 'onClick', e, buttonProps)\n      _.invoke(this.props, 'onConfirm', e, this.props)\n    },\n  })\n\n  render() {\n    const {\n      cancelButton,\n      confirmButton,\n      content,\n      header,\n      open,\n    } = this.props\n    const rest = getUnhandledProps(Confirm, this.props)\n\n    // `open` is auto controlled by the Modal\n    // It cannot be present (even undefined) with `defaultOpen`\n    // only apply it if the user provided an open prop\n    const openProp = {}\n    if (_.has(this.props, 'open')) openProp.open = open\n\n    return (\n      <Modal {...rest} {...openProp} size='small' onClose={this.handleCancel}>\n        {Modal.Header.create(header)}\n        {Modal.Content.create(content)}\n        <Modal.Actions>\n          {Button.create(cancelButton, { overrideProps: this.handleCancelOverrides })}\n          {Button.create(confirmButton, {\n            defaultProps: { primary: true },\n            overrideProps: this.handleConfirmOverrides,\n          })}\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default Confirm\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Confirm/index.js":"export default from './Confirm'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Portal/index.js":"export default from './Portal'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Portal/Portal.js":"import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport { Children, cloneElement } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {\n  AutoControlledComponent as Component,\n  isBrowser,\n  keyboardKey,\n  makeDebugger,\n  META,\n} from '../../lib'\n\nconst debug = makeDebugger('portal')\n\n/**\n * A component that allows you to render children outside their parent.\n * @see Modal\n * @see Popup\n * @see Dimmer\n * @see Confirm\n */\nclass Portal extends Component {\n  static propTypes = {\n    /** Primary content. */\n    children: PropTypes.node.isRequired,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Controls whether or not the portal should close when the document is clicked. */\n    closeOnDocumentClick: PropTypes.bool,\n\n    /** Controls whether or not the portal should close when escape is pressed is displayed. */\n    closeOnEscape: PropTypes.bool,\n\n    /**\n     * Controls whether or not the portal should close when mousing out of the portal.\n     * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the\n     * gap from the trigger to the portal.\n     */\n    closeOnPortalMouseLeave: PropTypes.bool,\n\n    /**\n     * Controls whether or not the portal should close on a click on the portal background.\n     * NOTE: This differs from closeOnDocumentClick:\n     * - DocumentClick - any click not within the portal\n     * - RootNodeClick - a click not within the portal but within the portal's wrapper\n     */\n    closeOnRootNodeClick: PropTypes.bool,\n\n    /** Controls whether or not the portal should close on blur of the trigger. */\n    closeOnTriggerBlur: PropTypes.bool,\n\n    /** Controls whether or not the portal should close on click of the trigger. */\n    closeOnTriggerClick: PropTypes.bool,\n\n    /** Controls whether or not the portal should close when mousing out of the trigger. */\n    closeOnTriggerMouseLeave: PropTypes.bool,\n\n    /** Initial value of open. */\n    defaultOpen: PropTypes.bool,\n\n    /** The node where the portal should mount. */\n    mountNode: PropTypes.any,\n\n    /** Milliseconds to wait before closing on mouse leave */\n    mouseLeaveDelay: PropTypes.number,\n\n    /** Milliseconds to wait before opening on mouse over */\n    mouseEnterDelay: PropTypes.number,\n\n    /**\n     * Called when a close event happens\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * Called when the portal is mounted on the DOM\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onMount: PropTypes.func,\n\n    /**\n     * Called when an open event happens\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * Called when the portal is unmounted from the DOM\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onUnmount: PropTypes.func,\n\n    /** Controls whether or not the portal is displayed. */\n    open: PropTypes.bool,\n\n    /** Controls whether or not the portal should open when the trigger is clicked. */\n    openOnTriggerClick: PropTypes.bool,\n\n    /** Controls whether or not the portal should open on focus of the trigger. */\n    openOnTriggerFocus: PropTypes.bool,\n\n    /** Controls whether or not the portal should open when mousing over the trigger. */\n    openOnTriggerMouseEnter: PropTypes.bool,\n\n    /** Controls whether the portal should be prepended to the mountNode instead of appended. */\n    prepend: PropTypes.bool,\n\n    /** Element to be rendered in-place where the portal is defined. */\n    trigger: PropTypes.node,\n  }\n\n  static defaultProps = {\n    closeOnDocumentClick: true,\n    closeOnEscape: true,\n    openOnTriggerClick: true,\n  }\n\n  static autoControlledProps = [\n    'open',\n  ]\n\n  static _meta = {\n    name: 'Portal',\n    type: META.TYPES.ADDON,\n  }\n\n  state = {}\n\n  componentDidMount() {\n    debug('componentDidMount()')\n    this.renderPortal()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    debug('componentDidUpdate()')\n    // NOTE: Ideally the portal rendering would happen in the render() function\n    // but React gives a warning about not being pure and suggests doing it\n    // within this method.\n\n    // If the portal is open, render (or re-render) the portal and child.\n    this.renderPortal()\n\n    if (prevState.open && !this.state.open) {\n      debug('portal closed')\n      this.unmountPortal()\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmountPortal()\n\n    // Clean up timers\n    clearTimeout(this.mouseEnterTimer)\n    clearTimeout(this.mouseLeaveTimer)\n  }\n\n  // ----------------------------------------\n  // Document Event Handlers\n  // ----------------------------------------\n\n  handleDocumentClick = (e) => {\n    const { closeOnDocumentClick, closeOnRootNodeClick } = this.props\n\n    if (\n      !this.rootNode                                      // not mounted\n      || !this.portalNode                                 // no portal\n      || _.invoke(this, 'triggerNode.contains', e.target) // event happened in trigger (delegate to trigger handlers)\n      || _.invoke(this, 'portalNode.contains', e.target)  // event happened in the portal\n    ) return                                              // ignore the click\n\n    const didClickInRootNode = this.rootNode.contains(e.target)\n\n    if (closeOnDocumentClick && !didClickInRootNode || closeOnRootNodeClick && didClickInRootNode) {\n      debug('handleDocumentClick()')\n\n      this.close(e)\n    }\n  }\n\n  handleEscape = (e) => {\n    if (!this.props.closeOnEscape) return\n    if (keyboardKey.getCode(e) !== keyboardKey.Escape) return\n\n    debug('handleEscape()')\n\n    this.close(e)\n  }\n\n  // ----------------------------------------\n  // Component Event Handlers\n  // ----------------------------------------\n\n  handlePortalMouseLeave = (e) => {\n    const { closeOnPortalMouseLeave, mouseLeaveDelay } = this.props\n\n    if (!closeOnPortalMouseLeave) return\n\n    debug('handlePortalMouseLeave()')\n    this.mouseLeaveTimer = this.closeWithTimeout(e, mouseLeaveDelay)\n  }\n\n  handlePortalMouseEnter = (e) => {\n    // In order to enable mousing from the trigger to the portal, we need to\n    // clear the mouseleave timer that was set when leaving the trigger.\n    const { closeOnPortalMouseLeave } = this.props\n\n    if (!closeOnPortalMouseLeave) return\n\n    debug('handlePortalMouseEnter()')\n    clearTimeout(this.mouseLeaveTimer)\n  }\n\n  handleTriggerBlur = (e) => {\n    const { trigger, closeOnTriggerBlur } = this.props\n\n    // Call original event handler\n    _.invoke(trigger, 'props.onBlur', e)\n\n    // do not close if focus is given to the portal\n    const didFocusPortal = _.invoke(this, 'rootNode.contains', e.relatedTarget)\n\n    if (!closeOnTriggerBlur || didFocusPortal) return\n\n    debug('handleTriggerBlur()')\n    this.close(e)\n  }\n\n  handleTriggerClick = (e) => {\n    const { trigger, closeOnTriggerClick, openOnTriggerClick } = this.props\n    const { open } = this.state\n\n    // Call original event handler\n    _.invoke(trigger, 'props.onClick', e)\n\n    if (open && closeOnTriggerClick) {\n      debug('handleTriggerClick() - close')\n\n      this.close(e)\n    } else if (!open && openOnTriggerClick) {\n      debug('handleTriggerClick() - open')\n\n      this.open(e)\n    }\n  }\n\n  handleTriggerFocus = (e) => {\n    const { trigger, openOnTriggerFocus } = this.props\n\n    // Call original event handler\n    _.invoke(trigger, 'props.onFocus', e)\n\n    if (!openOnTriggerFocus) return\n\n    debug('handleTriggerFocus()')\n    this.open(e)\n  }\n\n  handleTriggerMouseLeave = (e) => {\n    clearTimeout(this.mouseEnterTimer)\n\n    const { trigger, closeOnTriggerMouseLeave, mouseLeaveDelay } = this.props\n\n    // Call original event handler\n    _.invoke(trigger, 'props.onMouseLeave', e)\n\n    if (!closeOnTriggerMouseLeave) return\n\n    debug('handleTriggerMouseLeave()')\n    this.mouseLeaveTimer = this.closeWithTimeout(e, mouseLeaveDelay)\n  }\n\n  handleTriggerMouseEnter = (e) => {\n    clearTimeout(this.mouseLeaveTimer)\n\n    const { trigger, mouseEnterDelay, openOnTriggerMouseEnter } = this.props\n\n    // Call original event handler\n    _.invoke(trigger, 'props.onMouseEnter', this.handleTriggerMouseEnter)\n\n    if (!openOnTriggerMouseEnter) return\n\n    debug('handleTriggerMouseEnter()')\n    this.mouseEnterTimer = this.openWithTimeout(e, mouseEnterDelay)\n  }\n\n  // ----------------------------------------\n  // Behavior\n  // ----------------------------------------\n\n  open = (e) => {\n    debug('open()')\n\n    const { onOpen } = this.props\n    if (onOpen) onOpen(e, this.props)\n\n    this.trySetState({ open: true })\n  }\n\n  openWithTimeout = (e, delay) => {\n    debug('openWithTimeout()', delay)\n    // React wipes the entire event object and suggests using e.persist() if\n    // you need the event for async access. However, even with e.persist\n    // certain required props (e.g. currentTarget) are null so we're forced to clone.\n    const eventClone = { ...e }\n    return setTimeout(() => this.open(eventClone), delay || 0)\n  }\n\n  close = (e) => {\n    debug('close()')\n\n    const { onClose } = this.props\n    if (onClose) onClose(e, this.props)\n\n    this.trySetState({ open: false })\n  }\n\n  closeWithTimeout = (e, delay) => {\n    debug('closeWithTimeout()', delay)\n    // React wipes the entire event object and suggests using e.persist() if\n    // you need the event for async access. However, even with e.persist\n    // certain required props (e.g. currentTarget) are null so we're forced to clone.\n    const eventClone = { ...e }\n    return setTimeout(() => this.close(eventClone), delay || 0)\n  }\n\n  renderPortal() {\n    if (!this.state.open) return\n    debug('renderPortal()')\n\n    const { children, className } = this.props\n\n    this.mountPortal()\n\n    // Server side rendering\n    if (!isBrowser) return null\n\n    this.rootNode.className = className || ''\n\n    // when re-rendering, first remove listeners before re-adding them to the new node\n    if (this.portalNode) {\n      this.portalNode.removeEventListener('mouseleave', this.handlePortalMouseLeave)\n      this.portalNode.removeEventListener('mouseenter', this.handlePortalMouseEnter)\n    }\n\n    ReactDOM.unstable_renderSubtreeIntoContainer(\n      this,\n      Children.only(children),\n      this.rootNode,\n      () => {\n        this.portalNode = this.rootNode.firstElementChild\n\n        this.portalNode.addEventListener('mouseleave', this.handlePortalMouseLeave)\n        this.portalNode.addEventListener('mouseenter', this.handlePortalMouseEnter)\n      }\n    )\n  }\n\n  mountPortal = () => {\n    if (!isBrowser || this.rootNode) return\n\n    debug('mountPortal()')\n\n    const {\n      mountNode = isBrowser ? document.body : null,\n      prepend,\n    } = this.props\n\n    this.rootNode = document.createElement('div')\n\n    if (prepend) {\n      mountNode.insertBefore(this.rootNode, mountNode.firstElementChild)\n    } else {\n      mountNode.appendChild(this.rootNode)\n    }\n\n    document.addEventListener('click', this.handleDocumentClick)\n    document.addEventListener('keydown', this.handleEscape)\n\n    const { onMount } = this.props\n    if (onMount) onMount(null, this.props)\n  }\n\n  unmountPortal = () => {\n    if (!isBrowser || !this.rootNode) return\n\n    debug('unmountPortal()')\n\n    ReactDOM.unmountComponentAtNode(this.rootNode)\n    this.rootNode.parentNode.removeChild(this.rootNode)\n\n    this.portalNode.removeEventListener('mouseleave', this.handlePortalMouseLeave)\n    this.portalNode.removeEventListener('mouseenter', this.handlePortalMouseEnter)\n\n    this.rootNode = null\n    this.portalNode = null\n\n    document.removeEventListener('click', this.handleDocumentClick)\n    document.removeEventListener('keydown', this.handleEscape)\n\n    const { onUnmount } = this.props\n    if (onUnmount) onUnmount(null, this.props)\n  }\n\n  handleRef = c => {\n    this.triggerNode = ReactDOM.findDOMNode(c)\n  }\n\n  render() {\n    const { trigger } = this.props\n\n    if (!trigger) return null\n\n    return cloneElement(trigger, {\n      ref: this.handleRef,\n      onBlur: this.handleTriggerBlur,\n      onClick: this.handleTriggerClick,\n      onFocus: this.handleTriggerFocus,\n      onMouseLeave: this.handleTriggerMouseLeave,\n      onMouseEnter: this.handleTriggerMouseEnter,\n    })\n  }\n}\n\nexport default Portal\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Radio/index.js":"export default from './Radio'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Radio/Radio.js":"import React from 'react'\n\nimport { getUnhandledProps, META } from '../../lib'\nimport Checkbox from '../../modules/Checkbox'\n\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\nfunction Radio(props) {\n  const { slider, toggle, type } = props\n  const rest = getUnhandledProps(Radio, props)\n  // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n  const radio = !(slider || toggle) || undefined\n\n  return <Checkbox {...rest} type={type} radio={radio} slider={slider} toggle={toggle} />\n}\n\nRadio._meta = {\n  name: 'Radio',\n  type: META.TYPES.ADDON,\n}\n\nRadio.propTypes = {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type,\n}\n\nRadio.defaultProps = {\n  type: 'radio',\n}\n\nexport default Radio\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Select/index.js":"export default from './Select'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/Select/Select.js":"import React from 'react'\n\nimport { META } from '../../lib'\nimport Dropdown from '../../modules/Dropdown'\n\n/**\n * A Select is sugar for <Dropdown selection />.\n * @see Dropdown\n * @see Form\n */\nfunction Select(props) {\n  return <Dropdown {...props} selection />\n}\n\nSelect._meta = {\n  name: 'Select',\n  type: META.TYPES.ADDON,\n}\n\nSelect.Divider = Dropdown.Divider\nSelect.Header = Dropdown.Header\nSelect.Item = Dropdown.Item\nSelect.Menu = Dropdown.Menu\n\nexport default Select\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/TextArea/index.js":"export default from './TextArea'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/addons/TextArea/TextArea.js":"import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\nclass TextArea extends Component {\n  static _meta = {\n    name: 'TextArea',\n    type: META.TYPES.ADDON,\n  }\n\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Indicates whether height of the textarea fits the content or not. */\n    autoHeight: PropTypes.bool,\n\n    /**\n     * Called on change.\n     * @param {SyntheticEvent} event - The React SyntheticEvent object\n     * @param {object} data - All props and the event value.\n     */\n    onChange: PropTypes.func,\n\n    /** The value of the textarea. */\n    value: PropTypes.string,\n  }\n\n  static defaultProps = {\n    as: 'textarea',\n  }\n\n  componentDidMount() {\n    this.updateHeight()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // removed autoHeight\n    if (!this.props.autoHeight && prevProps.autoHeight) {\n      this.removeAutoHeightStyles()\n    }\n    // added autoHeight or value changed\n    if (this.props.autoHeight && !prevProps.autoHeight || prevProps.value !== this.props.value) {\n      this.updateHeight()\n    }\n  }\n\n  handleChange = (e) => {\n    const { onChange } = this.props\n    if (onChange) onChange(e, { ...this.props, value: e.target && e.target.value })\n\n    this.updateHeight(e.target)\n  }\n\n  handleRef = c => (this.ref = c)\n\n  removeAutoHeightStyles = () => {\n    this.ref.removeAttribute('rows')\n    this.ref.style.height = null\n    this.ref.style.minHeight = null\n    this.ref.style.resize = null\n  }\n\n  updateHeight = () => {\n    if (!this.ref) return\n\n    const { autoHeight } = this.props\n    if (!autoHeight) return\n\n    let { borderTopWidth, borderBottomWidth } = window.getComputedStyle(this.ref)\n    borderTopWidth = parseInt(borderTopWidth, 10)\n    borderBottomWidth = parseInt(borderBottomWidth, 10)\n\n    this.ref.rows = '1'\n    this.ref.style.minHeight = '0'\n    this.ref.style.resize = 'none'\n    this.ref.style.height = 'auto'\n    this.ref.style.height = (this.ref.scrollHeight + borderTopWidth + borderBottomWidth) + 'px'\n  }\n\n  render() {\n    const { value } = this.props\n    const rest = getUnhandledProps(TextArea, this.props)\n    const ElementType = getElementType(TextArea, this.props)\n\n    return <ElementType{...rest} onChange={this.handleChange} ref={this.handleRef} value={value} />\n  }\n}\n\nexport default TextArea\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Breadcrumb/BreadcrumbDivider.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getUnhandledProps,\n  getElementType,\n  META,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * A divider sub-component for Breadcrumb component.\n */\nfunction BreadcrumbDivider(props) {\n  const {\n    children,\n    className,\n    content,\n    icon,\n  } = props\n\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(BreadcrumbDivider, props)\n  const ElementType = getElementType(BreadcrumbDivider, props)\n\n  if (!_.isNil(icon)) return Icon.create(icon, { defaultProps: { ...rest, className: classes } })\n  if (!_.isNil(content)) return <ElementType {...rest} className={classes}>{content}</ElementType>\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? '/' : children}\n    </ElementType>\n  )\n}\n\nBreadcrumbDivider._meta = {\n  name: 'BreadcrumbDivider',\n  type: META.TYPES.COLLECTION,\n  parent: 'Breadcrumb',\n}\n\nBreadcrumbDivider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Render as an `Icon` component with `divider` class instead of a `div`. */\n  icon: customPropTypes.itemShorthand,\n}\n\nBreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, icon => ({ icon }))\n\nexport default BreadcrumbDivider\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Breadcrumb/Breadcrumb.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getUnhandledProps,\n  getElementType,\n  META,\n  SUI,\n} from '../../lib'\nimport BreadcrumbDivider from './BreadcrumbDivider'\nimport BreadcrumbSection from './BreadcrumbSection'\n\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\nfunction Breadcrumb(props) {\n  const {\n    children,\n    className,\n    divider,\n    icon,\n    sections,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    'breadcrumb',\n    className,\n  )\n  const rest = getUnhandledProps(Breadcrumb, props)\n  const ElementType = getElementType(Breadcrumb, props)\n\n  if (!_.isNil(children)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n  const childElements = []\n\n  _.each(sections, (section, index) => {\n    // section\n    const breadcrumbElement = BreadcrumbSection.create(section)\n    childElements.push(breadcrumbElement)\n\n    // divider\n    if (index !== sections.length - 1) {\n      const key = `${breadcrumbElement.key}_divider` || JSON.stringify(section)\n      childElements.push(BreadcrumbDivider.create({ content: divider, icon, key }))\n    }\n  })\n\n  return <ElementType {...rest} className={classes}>{childElements}</ElementType>\n}\n\nBreadcrumb._meta = {\n  name: 'Breadcrumb',\n  type: META.TYPES.COLLECTION,\n}\n\nBreadcrumb.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: customPropTypes.every([\n    customPropTypes.disallow(['icon']),\n    customPropTypes.contentShorthand,\n  ]),\n\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: customPropTypes.every([\n    customPropTypes.disallow(['divider']),\n    customPropTypes.itemShorthand,\n  ]),\n\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: customPropTypes.collectionShorthand,\n\n  /** Size of Breadcrumb. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n}\n\nBreadcrumb.Divider = BreadcrumbDivider\nBreadcrumb.Section = BreadcrumbSection\n\nexport default Breadcrumb\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Breadcrumb/BreadcrumbSection.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getUnhandledProps,\n  getElementType,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A section sub-component for Breadcrumb component.\n */\nexport default class BreadcrumbSection extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Style as the currently active section. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n    href: customPropTypes.every([\n      customPropTypes.disallow(['link']),\n      PropTypes.string,\n    ]),\n\n    /** Render as an `a` tag instead of a `div`. */\n    link: customPropTypes.every([\n      customPropTypes.disallow(['href']),\n      PropTypes.bool,\n    ]),\n\n    /**\n     * Called on click. When passed, the component will render as an `a`\n     * tag by default instead of a `div`.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n  }\n\n  static _meta = {\n    name: 'BreadcrumbSection',\n    type: META.TYPES.COLLECTION,\n    parent: 'Breadcrumb',\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      content,\n      href,\n      link,\n      onClick,\n    } = this.props\n\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      'section',\n      className,\n    )\n    const rest = getUnhandledProps(BreadcrumbSection, this.props)\n    const ElementType = getElementType(BreadcrumbSection, this.props, () => {\n      if (link || onClick) return 'a'\n    })\n\n    return (\n      <ElementType {...rest} className={classes} href={href} onClick={this.handleClick}>\n        {_.isNil(children) ? content : children}\n      </ElementType>\n    )\n  }\n}\n\nBreadcrumbSection.create = createShorthandFactory(BreadcrumbSection, content => ({ content, link: true }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Breadcrumb/index.js":"export default from './Breadcrumb'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormButton.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Button from '../../elements/Button'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\nfunction FormButton(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormButton, props)\n  const ElementType = getElementType(FormButton, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormButton.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button,\n}\n\nexport default FormButton\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormCheckbox.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Checkbox from '../../modules/Checkbox'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Checkbox} />.\n * @see Checkbox\n * @see Form\n */\nfunction FormCheckbox(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormCheckbox, props)\n  const ElementType = getElementType(FormCheckbox, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormCheckbox._meta = {\n  name: 'FormCheckbox',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormCheckbox.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormCheckbox.defaultProps = {\n  as: FormField,\n  control: Checkbox,\n}\n\nexport default FormCheckbox\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormDropdown.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Dropdown from '../../modules/Dropdown'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Dropdown} />.\n * @see Dropdown\n * @see Form\n */\nfunction FormDropdown(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormDropdown, props)\n  const ElementType = getElementType(FormDropdown, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormDropdown._meta = {\n  name: 'FormDropdown',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormDropdown.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown,\n}\n\nexport default FormDropdown\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormField.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { createElement } from 'react'\n\nimport {\n  createHTMLLabel,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useWidthProp,\n} from '../../lib'\nimport Checkbox from '../../modules/Checkbox'\nimport Radio from '../../addons/Radio'\n\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see TextArea\n */\nfunction FormField(props) {\n  const {\n    children,\n    className,\n    control,\n    disabled,\n    error,\n    inline,\n    label,\n    required,\n    type,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(required, 'required'),\n    useWidthProp(width, 'wide'),\n    'field',\n    className,\n  )\n  const rest = getUnhandledProps(FormField, props)\n  const ElementType = getElementType(FormField, props)\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_.isNil(control)) {\n    if (_.isNil(label)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n    return <ElementType {...rest} className={classes}>{createHTMLLabel(label)}</ElementType>\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  const controlProps = { ...rest, children, required, type }\n\n  // wrap HTML checkboxes/radios in the label\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return (\n      <ElementType className={classes}>\n        <label>\n          {createElement(control, controlProps)} {label}\n        </label>\n      </ElementType>\n    )\n  }\n\n  // pass label prop to controls that support it\n  if (control === Checkbox || control === Radio) {\n    return (\n      <ElementType className={classes}>\n        {createElement(control, { ...controlProps, label })}\n      </ElementType>\n    )\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return (\n    <ElementType className={classes}>\n      {createHTMLLabel(label)}\n      {createElement(control, controlProps)}\n    </ElementType>\n  )\n}\n\nFormField._meta = {\n  name: 'FormField',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormField.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([\n    PropTypes.func,\n    PropTypes.oneOf(['button', 'input', 'select', 'textarea']),\n  ]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state. */\n  error: PropTypes.bool,\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.object,\n  ]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([\n    customPropTypes.demand(['control']),\n    // don't strictly validate HTML types\n    // a control might be passed that uses a `type` prop with unknown values\n    // let the control validate if for us\n  ]),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS),\n}\n\nexport default FormField\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormGroup.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useWidthProp,\n} from '../../lib'\n\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\nfunction FormGroup(props) {\n  const {\n    children,\n    className,\n    grouped,\n    inline,\n    widths,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(grouped, 'grouped'),\n    useKeyOnly(inline, 'inline'),\n    useWidthProp(widths, null, true),\n    'fields',\n    className,\n  )\n  const rest = getUnhandledProps(FormGroup, props)\n  const ElementType = getElementType(FormGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nFormGroup._meta = {\n  name: 'FormGroup',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Fields can show related choices. */\n  grouped: customPropTypes.every([\n    customPropTypes.disallow(['inline']),\n    PropTypes.bool,\n  ]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: customPropTypes.every([\n    customPropTypes.disallow(['grouped']),\n    PropTypes.bool,\n  ]),\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf([...SUI.WIDTHS, 'equal']),\n}\n\nexport default FormGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormInput.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Input from '../../elements/Input'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Input} />.\n * @see Form\n * @see Input\n */\nfunction FormInput(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormInput, props)\n  const ElementType = getElementType(FormInput, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormInput._meta = {\n  name: 'FormInput',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormInput.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormInput.defaultProps = {\n  as: FormField,\n  control: Input,\n}\n\nexport default FormInput\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/Form.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useWidthProp,\n} from '../../lib'\nimport FormButton from './FormButton'\nimport FormCheckbox from './FormCheckbox'\nimport FormDropdown from './FormDropdown'\nimport FormField from './FormField'\nimport FormGroup from './FormGroup'\nimport FormInput from './FormInput'\nimport FormRadio from './FormRadio'\nimport FormSelect from './FormSelect'\nimport FormTextArea from './FormTextArea'\n\n/**\n * A Form displays a set of related user input fields in a structured way.\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Message\n * @see Radio\n * @see Select\n * @see TextArea\n */\nfunction Form(props) {\n  const {\n    children,\n    className,\n    error,\n    inverted,\n    loading,\n    reply,\n    size,\n    success,\n    warning,\n    widths,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(error, 'error'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(loading, 'loading'),\n    useKeyOnly(reply, 'reply'),\n    useKeyOnly(success, 'success'),\n    useKeyOnly(warning, 'warning'),\n    useWidthProp(widths, null, true),\n    'form',\n    className,\n  )\n  const rest = getUnhandledProps(Form, props)\n  const ElementType = getElementType(Form, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nForm.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Automatically show any error Message children. */\n  error: PropTypes.bool,\n\n  /** A form can have its color inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Automatically show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */\n  reply: PropTypes.bool,\n\n  /** A form can vary in size. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n  /** Automatically show any success Message children. */\n  success: PropTypes.bool,\n\n  /** Automatically show any warning Message children .*/\n  warning: PropTypes.bool,\n\n  /** Forms can automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf(['equal']),\n}\n\nForm.defaultProps = {\n  as: 'form',\n}\n\nForm._meta = {\n  name: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.Checkbox = FormCheckbox\nForm.Dropdown = FormDropdown\nForm.Group = FormGroup\nForm.Input = FormInput\nForm.Radio = FormRadio\nForm.Select = FormSelect\nForm.TextArea = FormTextArea\n\nexport default Form\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormRadio.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Radio from '../../addons/Radio'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Radio} />.\n * @see Form\n * @see Radio\n */\nfunction FormRadio(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormRadio, props)\n  const ElementType = getElementType(FormRadio, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormRadio._meta = {\n  name: 'FormRadio',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormRadio.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormRadio.defaultProps = {\n  as: FormField,\n  control: Radio,\n}\n\nexport default FormRadio\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormSelect.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Select from '../../addons/Select'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={Select} />.\n * @see Form\n * @see Select\n */\nfunction FormSelect(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormSelect, props)\n  const ElementType = getElementType(FormSelect, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormSelect._meta = {\n  name: 'FormSelect',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormSelect.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select,\n}\n\nexport default FormSelect\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/FormTextArea.js":"import React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport TextArea from '../../addons/TextArea'\nimport FormField from './FormField'\n\n/**\n * Sugar for <Form.Field control={TextArea} />.\n * @see Form\n * @see TextArea\n */\nfunction FormTextArea(props) {\n  const { control } = props\n  const rest = getUnhandledProps(FormTextArea, props)\n  const ElementType = getElementType(FormTextArea, props)\n\n  return <ElementType {...rest} control={control} />\n}\n\nFormTextArea._meta = {\n  name: 'FormTextArea',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION,\n}\n\nFormTextArea.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control,\n}\n\nFormTextArea.defaultProps = {\n  as: FormField,\n  control: TextArea,\n}\n\nexport default FormTextArea\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Form/index.js":"export default from './Form'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Grid/GridColumn.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useOnlyProp,\n  useTextAlignProp,\n  useValueAndKey,\n  useVerticalAlignProp,\n  useWidthProp,\n} from '../../lib'\n\n/**\n * A column sub-component for Grid.\n */\nfunction GridColumn(props) {\n  const {\n    children,\n    className,\n    computer,\n    color,\n    floated,\n    largeScreen,\n    mobile,\n    only,\n    stretched,\n    tablet,\n    textAlign,\n    verticalAlign,\n    widescreen,\n    width,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(stretched, 'stretched'),\n    useOnlyProp(only, 'only'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(computer, 'wide computer'),\n    useWidthProp(largeScreen, 'wide large screen'),\n    useWidthProp(mobile, 'wide mobile'),\n    useWidthProp(tablet, 'wide tablet'),\n    useWidthProp(widescreen, 'wide widescreen'),\n    useWidthProp(width, 'wide'),\n    'column',\n    className,\n  )\n  const rest = getUnhandledProps(GridColumn, props)\n  const ElementType = getElementType(GridColumn, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nGridColumn._meta = {\n  name: 'GridColumn',\n  parent: 'Grid',\n  type: META.TYPES.COLLECTION,\n}\n\nGridColumn.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.onlyProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS),\n}\n\nexport default GridColumn\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Grid/Grid.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useTextAlignProp,\n  useValueAndKey,\n  useVerticalAlignProp,\n  useWidthProp,\n} from '../../lib'\nimport GridColumn from './GridColumn'\nimport GridRow from './GridRow'\n\n/**\n * A grid is used to harmonize negative space in a layout.\n */\nfunction Grid(props) {\n  const {\n    celled,\n    centered,\n    children,\n    className,\n    columns,\n    container,\n    divided,\n    doubling,\n    padded,\n    relaxed,\n    reversed,\n    stackable,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(container, 'container'),\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(stretched, 'stretched'),\n    useKeyOrValueAndKey(celled, 'celled'),\n    useKeyOrValueAndKey(divided, 'divided'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(reversed, 'reversed'),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'grid',\n    className,\n  )\n  const rest = getUnhandledProps(Grid, props)\n  const ElementType = getElementType(Grid, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nGrid.Column = GridColumn\nGrid.Row = GridRow\n\nGrid._meta = {\n  name: 'Grid',\n  type: META.TYPES.COLLECTION,\n}\n\nGrid.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['internally']),\n  ]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([...SUI.WIDTHS, 'equal']),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['vertically']),\n  ]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['horizontally', 'vertically']),\n  ]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: PropTypes.oneOf([\n    'computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically',\n  ]),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nexport default Grid\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Grid/GridRow.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useOnlyProp,\n  useTextAlignProp,\n  useValueAndKey,\n  useVerticalAlignProp,\n  useWidthProp,\n} from '../../lib'\n\n/**\n * A row sub-component for Grid.\n */\nfunction GridRow(props) {\n  const {\n    centered,\n    children,\n    className,\n    color,\n    columns,\n    divided,\n    only,\n    reversed,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(stretched, 'stretched'),\n    useOnlyProp(only),\n    useTextAlignProp(textAlign),\n    useValueAndKey(reversed, 'reversed'),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'row',\n    className,\n  )\n  const rest = getUnhandledProps(GridRow, props)\n  const ElementType = getElementType(GridRow, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nGridRow._meta = {\n  name: 'GridRow',\n  parent: 'Grid',\n  type: META.TYPES.COLLECTION,\n}\n\nGridRow.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([...SUI.WIDTHS, 'equal']),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.onlyProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: PropTypes.oneOf([\n    'computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically',\n  ]),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nexport default GridRow\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Grid/index.js":"export default from './Grid'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Menu/index.js":"export default from './Menu'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Menu/MenuHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A menu item may include a header or may itself be a header.\n */\nfunction MenuHeader(props) {\n  const { children, className, content } = props\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(MenuHeader, props)\n  const ElementType = getElementType(MenuHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nMenuHeader._meta = {\n  name: 'MenuHeader',\n  type: META.TYPES.COLLECTION,\n  parent: 'Menu',\n}\n\nMenuHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default MenuHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Menu/MenuItem.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * A menu can contain an item.\n */\nexport default class MenuItem extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A menu item can be active. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Additional colors can be specified. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** A menu item can be disabled. */\n    disabled: PropTypes.bool,\n\n    /** A menu item or menu can remove element padding, vertically or horizontally. */\n    fitted: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['horizontally', 'vertically']),\n    ]),\n\n    /** A menu item may include a header or may itself be a header. */\n    header: PropTypes.bool,\n\n    /** MenuItem can be only icon. */\n    icon: PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n\n    /** MenuItem index inside Menu. */\n    index: PropTypes.number,\n\n    /** A menu item can be link. */\n    link: PropTypes.bool,\n\n    /** Internal name of the MenuItem. */\n    name: PropTypes.string,\n\n    /**\n     * Called on click. When passed, the component will render as an `a`\n     * tag by default instead of a `div`.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /** A menu item can take right position. */\n    position: PropTypes.oneOf(['right']),\n  }\n\n  static _meta = {\n    name: 'MenuItem',\n    type: META.TYPES.COLLECTION,\n    parent: 'Menu',\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      color,\n      content,\n      disabled,\n      fitted,\n      header,\n      icon,\n      link,\n      name,\n      onClick,\n      position,\n    } = this.props\n\n    const classes = cx(\n      color,\n      position,\n      useKeyOnly(active, 'active'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(icon === true || icon && !(name || content), 'icon'),\n      useKeyOnly(header, 'header'),\n      useKeyOnly(link, 'link'),\n      useKeyOrValueAndKey(fitted, 'fitted'),\n      'item',\n      className,\n    )\n    const ElementType = getElementType(MenuItem, this.props, () => {\n      if (onClick) return 'a'\n    })\n    const rest = getUnhandledProps(MenuItem, this.props)\n\n    if (!_.isNil(children)) {\n      return <ElementType {...rest} className={classes} onClick={this.handleClick}>{children}</ElementType>\n    }\n\n    return (\n      <ElementType {...rest} className={classes} onClick={this.handleClick}>\n        {Icon.create(icon)}\n        {content || _.startCase(name)}\n      </ElementType>\n    )\n  }\n}\n\nMenuItem.create = createShorthandFactory(MenuItem, val => ({ content: val, name: val }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Menu/Menu.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n  useWidthProp,\n} from '../../lib'\nimport MenuHeader from './MenuHeader'\nimport MenuItem from './MenuItem'\nimport MenuMenu from './MenuMenu'\n\n/**\n * A menu displays grouped navigation actions.\n * @see Dropdown\n */\nclass Menu extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Index of the currently active item. */\n    activeIndex: PropTypes.number,\n\n    /** A menu may be attached to other content segments. */\n    attached: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['top', 'bottom']),\n    ]),\n\n    /** A menu item or menu can have no borders. */\n    borderless: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Additional colors can be specified. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** A menu can take up only the space necessary to fit its content. */\n    compact: PropTypes.bool,\n\n    /** Initial activeIndex value. */\n    defaultActiveIndex: PropTypes.number,\n\n    /** A menu can be fixed to a side of its context. */\n    fixed: PropTypes.oneOf(['left', 'right', 'bottom', 'top']),\n\n    /** A menu can be floated. */\n    floated: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['right']),\n    ]),\n\n    /** A vertical menu may take the size of its container. */\n    fluid: PropTypes.bool,\n\n    /** A menu may have just icons (bool) or labeled icons. */\n    icon: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['labeled']),\n    ]),\n\n    /** A menu may have its colors inverted to show greater contrast. */\n    inverted: PropTypes.bool,\n\n    /** Shorthand array of props for Menu. */\n    items: customPropTypes.collectionShorthand,\n\n    /**\n     * onClick handler for MenuItem. Mutually exclusive with children.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All item props.\n     */\n    onItemClick: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.func,\n    ]),\n\n    /** A pagination menu is specially formatted to present links to pages of content. */\n    pagination: PropTypes.bool,\n\n    /** A menu can point to show its relationship to nearby content. */\n    pointing: PropTypes.bool,\n\n    /** A menu can adjust its appearance to de-emphasize its contents. */\n    secondary: PropTypes.bool,\n\n    /** A menu can vary in size. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium', 'big')),\n\n    /** A menu can stack at mobile resolutions. */\n    stackable: PropTypes.bool,\n\n    /** A menu can be formatted to show tabs of information. */\n    tabular: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['right']),\n    ]),\n\n    /** A menu can be formatted for text content. */\n    text: PropTypes.bool,\n\n    /** A vertical menu displays elements vertically. */\n    vertical: PropTypes.bool,\n\n    /** A menu can have its items divided evenly. */\n    widths: PropTypes.oneOf(SUI.WIDTHS),\n  }\n\n  static _meta = {\n    name: 'Menu',\n    type: META.TYPES.COLLECTION,\n  }\n\n  static autoControlledProps = [\n    'activeIndex',\n  ]\n\n  static Header = MenuHeader\n  static Item = MenuItem\n  static Menu = MenuMenu\n\n  handleItemOverrides = predefinedProps => ({\n    onClick: (e, itemProps) => {\n      const { index } = itemProps\n\n      this.trySetState({ activeIndex: index })\n\n      _.invoke(predefinedProps, 'onClick', e, itemProps)\n      _.invoke(this.props, 'onItemClick', e, itemProps)\n    },\n  })\n\n  renderItems() {\n    const { items } = this.props\n    const { activeIndex } = this.state\n\n    return _.map(items, (item, index) => MenuItem.create(item, {\n      defaultProps: {\n        active: activeIndex === index,\n        index,\n      },\n      overrideProps: this.handleItemOverrides,\n    }))\n  }\n\n  render() {\n    const {\n      attached,\n      borderless,\n      children,\n      className,\n      color,\n      compact,\n      fixed,\n      floated,\n      fluid,\n      icon,\n      inverted,\n      pagination,\n      pointing,\n      secondary,\n      size,\n      stackable,\n      tabular,\n      text,\n      vertical,\n      widths,\n    } = this.props\n    const classes = cx(\n      'ui',\n      color,\n      size,\n      useKeyOnly(borderless, 'borderless'),\n      useKeyOnly(compact, 'compact'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(pagination, 'pagination'),\n      useKeyOnly(pointing, 'pointing'),\n      useKeyOnly(secondary, 'secondary'),\n      useKeyOnly(stackable, 'stackable'),\n      useKeyOnly(text, 'text'),\n      useKeyOnly(vertical, 'vertical'),\n      useKeyOrValueAndKey(attached, 'attached'),\n      useKeyOrValueAndKey(floated, 'floated'),\n      useKeyOrValueAndKey(icon, 'icon'),\n      useKeyOrValueAndKey(tabular, 'tabular'),\n      useValueAndKey(fixed, 'fixed'),\n      useWidthProp(widths, 'item'),\n      className,\n      'menu'\n    )\n    const rest = getUnhandledProps(Menu, this.props)\n    const ElementType = getElementType(Menu, this.props)\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {_.isNil(children) ? this.renderItems() : children}\n      </ElementType>\n    )\n  }\n}\n\nexport default Menu\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Menu/MenuMenu.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A menu can contain a sub menu.\n */\nfunction MenuMenu(props) {\n  const { children, className, position } = props\n\n  const classes = cx(\n    position,\n    'menu',\n    className,\n  )\n  const rest = getUnhandledProps(MenuMenu, props)\n  const ElementType = getElementType(MenuMenu, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nMenuMenu._meta = {\n  name: 'MenuMenu',\n  type: META.TYPES.COLLECTION,\n  parent: 'Menu',\n}\n\nMenuMenu.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A sub menu can take right position. */\n  position: PropTypes.oneOf(['right']),\n}\n\nexport default MenuMenu\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/index.js":"export default from './Message'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/MessageContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A message can contain a content.\n */\nfunction MessageContent(props) {\n  const { children, className } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(MessageContent, props)\n  const ElementType = getElementType(MessageContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nMessageContent._meta = {\n  name: 'MessageContent',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION,\n}\n\nMessageContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default MessageContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/MessageHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A message can contain a header.\n */\nfunction MessageHeader(props) {\n  const { children, className, content } = props\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(MessageHeader, props)\n  const ElementType = getElementType(MessageHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nMessageHeader._meta = {\n  name: 'MessageHeader',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION,\n}\n\nMessageHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.itemShorthand,\n}\n\nMessageHeader.create = createShorthandFactory(MessageHeader, val => ({ content: val }))\n\nexport default MessageHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/MessageItem.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A message list can contain an item.\n */\nfunction MessageItem(props) {\n  const { children, className, content } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(MessageItem, props)\n  const ElementType = getElementType(MessageItem, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nMessageItem._meta = {\n  name: 'MessageItem',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION,\n}\n\nMessageItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.itemShorthand,\n}\n\nMessageItem.defaultProps = {\n  as: 'li',\n}\n\nMessageItem.create = createShorthandFactory(MessageItem, content => ({ content }))\n\nexport default MessageItem\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/Message.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createHTMLParagraph,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\nimport MessageContent from './MessageContent'\nimport MessageHeader from './MessageHeader'\nimport MessageList from './MessageList'\nimport MessageItem from './MessageItem'\n\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\nexport default class Message extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A message can be formatted to attach itself to other content. */\n    attached: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['bottom']),\n    ]),\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A message can be formatted to be different colors. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** A message can only take up the width of its content. */\n    compact: PropTypes.bool,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** A message may be formatted to display a negative message. Same as `negative`. */\n    error: PropTypes.bool,\n\n    /** A message can float above content that it is related to. */\n    floating: PropTypes.bool,\n\n    /** Shorthand for MessageHeader. */\n    header: customPropTypes.itemShorthand,\n\n    /** A message can be hidden. */\n    hidden: PropTypes.bool,\n\n    /** A message can contain an icon. */\n    icon: PropTypes.oneOfType([\n      customPropTypes.itemShorthand,\n      PropTypes.bool,\n    ]),\n\n    /** A message may be formatted to display information. */\n    info: PropTypes.bool,\n\n    /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n    list: customPropTypes.collectionShorthand,\n\n    /** A message may be formatted to display a negative message. Same as `error`. */\n    negative: PropTypes.bool,\n\n    /**\n     * A message that the user can choose to hide.\n     * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onDismiss: PropTypes.func,\n\n    /** A message may be formatted to display a positive message.  Same as `success`. */\n    positive: PropTypes.bool,\n\n    /** A message may be formatted to display a positive message.  Same as `positive`. */\n    success: PropTypes.bool,\n\n    /** A message can have different sizes. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n    /** A message can be set to visible to force itself to be shown. */\n    visible: PropTypes.bool,\n\n    /** A message may be formatted to display warning messages. */\n    warning: PropTypes.bool,\n  }\n\n  static _meta = {\n    name: 'Message',\n    type: META.TYPES.COLLECTION,\n  }\n\n  static Content = MessageContent\n  static Header = MessageHeader\n  static List = MessageList\n  static Item = MessageItem\n\n  handleDismiss = e => {\n    const { onDismiss } = this.props\n\n    if (onDismiss) onDismiss(e, this.props)\n  }\n\n  render() {\n    const {\n      attached,\n      children,\n      className,\n      color,\n      compact,\n      content,\n      error,\n      floating,\n      header,\n      hidden,\n      icon,\n      info,\n      list,\n      negative,\n      onDismiss,\n      positive,\n      size,\n      success,\n      visible,\n      warning,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      color,\n      size,\n      useKeyOnly(compact, 'compact'),\n      useKeyOnly(error, 'error'),\n      useKeyOnly(floating, 'floating'),\n      useKeyOnly(hidden, 'hidden'),\n      useKeyOnly(icon, 'icon'),\n      useKeyOnly(info, 'info'),\n      useKeyOnly(negative, 'negative'),\n      useKeyOnly(positive, 'positive'),\n      useKeyOnly(success, 'success'),\n      useKeyOnly(visible, 'visible'),\n      useKeyOnly(warning, 'warning'),\n      useKeyOrValueAndKey(attached, 'attached'),\n      'message',\n      className,\n    )\n\n    const dismissIcon = onDismiss && <Icon name='close' onClick={this.handleDismiss} />\n    const rest = getUnhandledProps(Message, this.props)\n    const ElementType = getElementType(Message, this.props)\n\n    if (!_.isNil(children)) {\n      return (\n        <ElementType {...rest} className={classes}>\n          {dismissIcon}\n          {children}\n        </ElementType>\n      )\n    }\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {dismissIcon}\n        {Icon.create(icon)}\n        {(!_.isNil(header) || !_.isNil(content) || !_.isNil(list)) && (\n          <MessageContent>\n            {MessageHeader.create(header)}\n            {MessageList.create(list)}\n            {createHTMLParagraph(content)}\n          </MessageContent>\n        )}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Message/MessageList.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport MessageItem from './MessageItem'\n\n/**\n * A message can contain a list of items.\n */\nfunction MessageList(props) {\n  const { children, className, items } = props\n  const classes = cx('list', className)\n  const rest = getUnhandledProps(MessageList, props)\n  const ElementType = getElementType(MessageList, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? _.map(items, MessageItem.create) : children}\n    </ElementType>\n  )\n}\n\nMessageList._meta = {\n  name: 'MessageList',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION,\n}\n\nMessageList.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand,\n}\n\nMessageList.defaultProps = {\n  as: 'ul',\n}\n\nMessageList.create = createShorthandFactory(MessageList, val => ({ items: val }))\n\nexport default MessageList\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/index.js":"export default from './Table'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableBody.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\nfunction TableBody(props) {\n  const { children, className } = props\n  const classes = cx(className)\n  const rest = getUnhandledProps(TableBody, props)\n  const ElementType = getElementType(TableBody, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nTableBody._meta = {\n  name: 'TableBody',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableBody.defaultProps = {\n  as: 'tbody',\n}\n\nTableBody.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default TableBody\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableCell.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useTextAlignProp,\n  useVerticalAlignProp,\n  useWidthProp,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * A table row can have cells.\n */\nfunction TableCell(props) {\n  const {\n    active,\n    children,\n    className,\n    collapsing,\n    content,\n    disabled,\n    error,\n    icon,\n    negative,\n    positive,\n    selectable,\n    singleLine,\n    textAlign,\n    verticalAlign,\n    warning,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(width, 'wide'),\n    className,\n  )\n  const rest = getUnhandledProps(TableCell, props)\n  const ElementType = getElementType(TableCell, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon)}\n      {content}\n    </ElementType>\n  )\n}\n\nTableCell._meta = {\n  name: 'TableCell',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableCell.defaultProps = {\n  as: 'td',\n}\n\nTableCell.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_.without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS),\n}\n\nTableCell.create = createShorthandFactory(TableCell, content => ({ content }))\n\nexport default TableCell\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableFooter.js":"import React from 'react'\n\nimport { META } from '../../lib'\nimport TableHeader from './TableHeader'\n\n/**\n * A table can have a footer.\n */\nfunction TableFooter(props) {\n  return <TableHeader {...props} />\n}\n\nTableFooter._meta = {\n  name: 'TableFooter',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableFooter.defaultProps = {\n  as: 'tfoot',\n}\n\nexport default TableFooter\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableHeaderCell.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getUnhandledProps,\n  META,\n  useValueAndKey,\n} from '../../lib'\nimport TableCell from './TableCell'\n\n/**\n * A table can have a header cell.\n */\nfunction TableHeaderCell(props) {\n  const { as, className, sorted } = props\n  const classes = cx(\n    useValueAndKey(sorted, 'sorted'),\n    className\n  )\n  const rest = getUnhandledProps(TableHeaderCell, props)\n\n  return <TableCell {...rest} as={as} className={classes} />\n}\n\nTableHeaderCell._meta = {\n  name: 'TableHeaderCell',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableHeaderCell.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending']),\n}\n\nTableHeaderCell.defaultProps = {\n  as: 'th',\n}\n\nexport default TableHeaderCell\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableHeader.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A table can have a header.\n */\nfunction TableHeader(props) {\n  const { children, className, fullWidth } = props\n  const classes = cx(\n    useKeyOnly(fullWidth, 'full-width'),\n    className\n  )\n  const rest = getUnhandledProps(TableHeader, props)\n  const ElementType = getElementType(TableHeader, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nTableHeader._meta = {\n  name: 'TableHeader',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableHeader.defaultProps = {\n  as: 'thead',\n}\n\nTableHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool,\n}\n\nexport default TableHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/Table.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useTextAlignProp,\n  useVerticalAlignProp,\n  useWidthProp,\n} from '../../lib'\nimport TableBody from './TableBody'\nimport TableCell from './TableCell'\nimport TableFooter from './TableFooter'\nimport TableHeader from './TableHeader'\nimport TableHeaderCell from './TableHeaderCell'\nimport TableRow from './TableRow'\n\n/**\n * A table displays a collections of data grouped into rows.\n */\nfunction Table(props) {\n  const {\n    attached,\n    basic,\n    celled,\n    children,\n    className,\n    collapsing,\n    color,\n    columns,\n    compact,\n    definition,\n    fixed,\n    footerRow,\n    headerRow,\n    inverted,\n    padded,\n    renderBodyRow,\n    selectable,\n    singleLine,\n    size,\n    sortable,\n    stackable,\n    striped,\n    structured,\n    tableData,\n    textAlign,\n    unstackable,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(celled, 'celled'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(definition, 'definition'),\n    useKeyOnly(fixed, 'fixed'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(sortable, 'sortable'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(striped, 'striped'),\n    useKeyOnly(structured, 'structured'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(basic, 'basic'),\n    useKeyOrValueAndKey(compact, 'compact'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column'),\n    'table',\n    className,\n  )\n  const rest = getUnhandledProps(Table, props)\n  const ElementType = getElementType(Table, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {headerRow && <TableHeader>{TableRow.create(headerRow, { defaultProps: { cellAs: 'th' } })}</TableHeader>}\n      <TableBody>\n        {renderBodyRow && _.map(tableData, (data, index) => TableRow.create(renderBodyRow(data, index)))}\n      </TableBody>\n      {footerRow && <TableFooter>{TableRow.create(footerRow)}</TableFooter>}\n    </ElementType>\n  )\n}\n\nTable._meta = {\n  name: 'Table',\n  type: META.TYPES.COLLECTION,\n}\n\nTable.defaultProps = {\n  as: 'table',\n}\n\nTable.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['top', 'bottom']),\n  ]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([\n    PropTypes.oneOf(['very']),\n    PropTypes.bool,\n  ]),\n\n  /** A table may be divided each row into separate cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.itemShorthand,\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    customPropTypes.demand(['tableData']),\n    PropTypes.func,\n  ]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    customPropTypes.demand(['renderBodyRow']),\n    PropTypes.array,\n  ]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_.without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nTable.Body = TableBody\nTable.Cell = TableCell\nTable.Footer = TableFooter\nTable.Header = TableHeader\nTable.HeaderCell = TableHeaderCell\nTable.Row = TableRow\n\nexport default Table\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/collections/Table/TableRow.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useTextAlignProp,\n  useVerticalAlignProp,\n} from '../../lib'\nimport TableCell from './TableCell'\n\n/**\n * A table can have rows.\n */\nfunction TableRow(props) {\n  const {\n    active,\n    cellAs,\n    cells,\n    children,\n    className,\n    disabled,\n    error,\n    negative,\n    positive,\n    textAlign,\n    verticalAlign,\n    warning,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    className,\n  )\n  const rest = getUnhandledProps(TableRow, props)\n  const ElementType = getElementType(TableRow, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(cells, (cell) => TableCell.create(cell, { defaultProps: { as: cellAs } }))}\n    </ElementType>\n  )\n}\n\nTableRow._meta = {\n  name: 'TableRow',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table',\n}\n\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td',\n}\n\nTableRow.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: customPropTypes.as,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_.without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool,\n}\n\nTableRow.create = createShorthandFactory(TableRow, cells => ({ cells }))\n\nexport default TableRow\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Button/ButtonContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * Used in some Button types, such as `animated`.\n */\nfunction ButtonContent(props) {\n  const {\n    children,\n    className,\n    hidden,\n    visible,\n  } = props\n  const classes = cx(\n    useKeyOnly(visible, 'visible'),\n    useKeyOnly(hidden, 'hidden'),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(ButtonContent, props)\n  const ElementType = getElementType(ButtonContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nButtonContent._meta = {\n  name: 'ButtonContent',\n  parent: 'Button',\n  type: META.TYPES.ELEMENT,\n}\n\nButtonContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool,\n}\n\nexport default ButtonContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Button/ButtonGroup.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n  useWidthProp,\n} from '../../lib'\n\n/**\n * Buttons can be grouped.\n */\nfunction ButtonGroup(props) {\n  const {\n    attached,\n    basic,\n    children,\n    className,\n    color,\n    compact,\n    floated,\n    fluid,\n    icon,\n    inverted,\n    labeled,\n    negative,\n    positive,\n    primary,\n    secondary,\n    size,\n    toggle,\n    vertical,\n    widths,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(icon, 'icon'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(labeled, 'labeled'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(primary, 'primary'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(toggle, 'toggle'),\n    useKeyOnly(vertical, 'vertical'),\n    useValueAndKey(attached, 'attached'),\n    useValueAndKey(floated, 'floated'),\n    useWidthProp(widths),\n    'buttons',\n    className,\n  )\n  const rest = getUnhandledProps(ButtonGroup, props)\n  const ElementType = getElementType(ButtonGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nButtonGroup._meta = {\n  name: 'ButtonGroup',\n  parent: 'Button',\n  type: META.TYPES.ELEMENT,\n}\n\nButtonGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can be attached to the top or bottom of other content. */\n  attached: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS),\n}\n\nexport default ButtonGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Button/Button.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  createShorthandFactory,\n  getElementType,\n  getUnhandledProps,\n  makeDebugger,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n} from '../../lib'\nimport Icon from '../Icon/Icon'\nimport Label from '../Label/Label'\nimport ButtonContent from './ButtonContent'\nimport ButtonGroup from './ButtonGroup'\nimport ButtonOr from './ButtonOr'\n\nconst debug = makeDebugger('button')\n\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\nclass Button extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A button can show it is currently the active user selection. */\n    active: PropTypes.bool,\n\n    /** A button can animate to show hidden content. */\n    animated: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['fade', 'vertical']),\n    ]),\n\n    /** A button can be attached to the top or bottom of other content. */\n    attached: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n\n    /** A basic button is less pronounced. */\n    basic: PropTypes.bool,\n\n    /** Primary content. */\n    children: customPropTypes.every([\n      PropTypes.node,\n      customPropTypes.disallow(['label']),\n      customPropTypes.givenProps(\n        {\n          icon: PropTypes.oneOfType([\n            PropTypes.string.isRequired,\n            PropTypes.object.isRequired,\n            PropTypes.element.isRequired,\n          ]),\n        },\n        customPropTypes.disallow(['icon']),\n      ),\n    ]),\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A button can be circular. */\n    circular: PropTypes.bool,\n\n    /** A button can have different colors */\n    color: PropTypes.oneOf([\n      ...SUI.COLORS,\n      'facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube',\n    ]),\n\n    /** A button can reduce its padding to fit into tighter spaces. */\n    compact: PropTypes.bool,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** A button can show it is currently unable to be interacted with. */\n    disabled: PropTypes.bool,\n\n    /** A button can be aligned to the left or right of its container. */\n    floated: PropTypes.oneOf(SUI.FLOATS),\n\n    /** A button can take the width of its container. */\n    fluid: PropTypes.bool,\n\n    /** Add an Icon by name, props object, or pass an <Icon />. */\n    icon: customPropTypes.some([\n      PropTypes.bool,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.element,\n    ]),\n\n    /** A button can be formatted to appear on dark backgrounds. */\n    inverted: PropTypes.bool,\n\n    /** Add a Label by text, props object, or pass a <Label />. */\n    label: customPropTypes.some([\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.element,\n    ]),\n\n    /** A labeled button can format a Label or Icon to appear on the left or right. */\n    labelPosition: PropTypes.oneOf(['right', 'left']),\n\n    /** A button can show a loading indicator. */\n    loading: PropTypes.bool,\n\n    /** A button can hint towards a negative consequence. */\n    negative: PropTypes.bool,\n\n    /**\n     * Called after user's click.\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /** A button can hint towards a positive consequence. */\n    positive: PropTypes.bool,\n\n    /** A button can be formatted to show different levels of emphasis. */\n    primary: PropTypes.bool,\n\n    /** A button can be formatted to show different levels of emphasis. */\n    secondary: PropTypes.bool,\n\n    /** A button can have different sizes. */\n    size: PropTypes.oneOf(SUI.SIZES),\n\n    /** A button can receive focus. */\n    tabIndex: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /** A button can be formatted to toggle on and off. */\n    toggle: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    as: 'button',\n  }\n\n  static _meta = {\n    name: 'Button',\n    type: META.TYPES.ELEMENT,\n  }\n\n  static Content = ButtonContent\n  static Group = ButtonGroup\n  static Or = ButtonOr\n\n  computeElementType = () => {\n    const { attached, label } = this.props\n\n    if (!_.isNil(attached) || !_.isNil(label)) return 'div'\n  }\n\n  computeTabIndex = ElementType => {\n    const { disabled, tabIndex } = this.props\n\n    if (!_.isNil(tabIndex)) return tabIndex\n    if (disabled) return -1\n    if (ElementType === 'div') return 0\n  }\n\n  handleClick = (e) => {\n    const { disabled, onClick } = this.props\n\n    if (disabled) {\n      e.preventDefault()\n      return\n    }\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      animated,\n      attached,\n      basic,\n      children,\n      circular,\n      className,\n      color,\n      compact,\n      content,\n      disabled,\n      floated,\n      fluid,\n      icon,\n      inverted,\n      label,\n      labelPosition,\n      loading,\n      negative,\n      positive,\n      primary,\n      secondary,\n      size,\n      toggle,\n    } = this.props\n\n    const baseClasses = cx(\n      color,\n      size,\n      useKeyOnly(active, 'active'),\n      useKeyOnly(basic, 'basic'),\n      useKeyOnly(circular, 'circular'),\n      useKeyOnly(compact, 'compact'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(icon === true || icon && (labelPosition || !children && !content), 'icon'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(loading, 'loading'),\n      useKeyOnly(negative, 'negative'),\n      useKeyOnly(positive, 'positive'),\n      useKeyOnly(primary, 'primary'),\n      useKeyOnly(secondary, 'secondary'),\n      useKeyOnly(toggle, 'toggle'),\n      useKeyOrValueAndKey(animated, 'animated'),\n      useKeyOrValueAndKey(attached, 'attached'),\n    )\n    const labeledClasses = cx(\n      useKeyOrValueAndKey(labelPosition || !!label, 'labeled'),\n    )\n    const wrapperClasses = cx(\n      useKeyOnly(disabled, 'disabled'),\n      useValueAndKey(floated, 'floated'),\n    )\n\n    const rest = getUnhandledProps(Button, this.props)\n    const ElementType = getElementType(Button, this.props, this.computeElementType)\n    const tabIndex = this.computeTabIndex(ElementType)\n\n    if (!_.isNil(children)) {\n      const classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className)\n      debug('render children:', { classes })\n\n      return (\n        <ElementType {...rest} className={classes} tabIndex={tabIndex} onClick={this.handleClick}>\n          {children}\n        </ElementType>\n      )\n    }\n\n    const labelElement = Label.create(label, { defaultProps: {\n      basic: true,\n      pointing: labelPosition === 'left' ? 'right' : 'left',\n    } })\n\n    if (labelElement) {\n      const classes = cx('ui', baseClasses, 'button', className)\n      const containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses)\n\n      debug('render label:', { classes, containerClasses }, this.props)\n\n      return (\n        <ElementType {...rest} className={containerClasses} onClick={this.handleClick}>\n          {labelPosition === 'left' && labelElement}\n          <button className={classes} tabIndex={tabIndex}>\n            {Icon.create(icon)} {content}\n          </button>\n          {(labelPosition === 'right' || !labelPosition) && labelElement}\n        </ElementType>\n      )\n    }\n\n    if (!_.isNil(icon) && _.isNil(label)) {\n      const classes = cx('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses)\n      debug('render icon && !label:', { classes })\n\n      return (\n        <ElementType {...rest} className={classes} tabIndex={tabIndex} onClick={this.handleClick}>\n          {Icon.create(icon)} {content}\n        </ElementType>\n      )\n    }\n\n    const classes = cx('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses)\n    debug('render default:', { classes })\n\n    return (\n      <ElementType {...rest} className={classes} tabIndex={tabIndex} onClick={this.handleClick}>\n        {content}\n      </ElementType>\n    )\n  }\n}\n\nButton.create = createShorthandFactory(Button, value => ({ content: value }))\n\nexport default Button\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Button/ButtonOr.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * Button groups can contain conditionals.\n */\nfunction ButtonOr(props) {\n  const { className, text } = props\n  const classes = cx('or', className)\n  const rest = getUnhandledProps(ButtonOr, props)\n  const ElementType = getElementType(ButtonOr, props)\n\n  return <ElementType {...rest} className={classes} data-text={text} />\n}\n\nButtonOr._meta = {\n  name: 'ButtonOr',\n  parent: 'Button',\n  type: META.TYPES.ELEMENT,\n}\n\nButtonOr.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n}\n\nexport default ButtonOr\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Button/index.js":"export default from './Button'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Container/Container.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useTextAlignProp,\n} from '../../lib'\n\n/**\n * A container limits content to a maximum width.\n */\nfunction Container(props) {\n  const {\n    children,\n    className,\n    fluid,\n    text,\n    textAlign,\n  } = props\n  const classes = cx(\n    'ui',\n    useKeyOnly(text, 'text'),\n    useKeyOnly(fluid, 'fluid'),\n    useTextAlignProp(textAlign),\n    'container',\n    className\n  )\n  const rest = getUnhandledProps(Container, props)\n  const ElementType = getElementType(Container, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nContainer._meta = {\n  name: 'Container',\n  type: META.TYPES.ELEMENT,\n}\n\nContainer.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Container has no maximum with. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n}\n\nexport default Container\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Container/index.js":"export default from './Container'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Divider/Divider.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A divider visually segments content into groups.\n */\nfunction Divider(props) {\n  const {\n    children,\n    className,\n    clearing,\n    fitted,\n    hidden,\n    horizontal,\n    inverted,\n    section,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(fitted, 'fitted'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(section, 'section'),\n    useKeyOnly(vertical, 'vertical'),\n    'divider',\n    className\n  )\n  const rest = getUnhandledProps(Divider, props)\n  const ElementType = getElementType(Divider, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nDivider._meta = {\n  name: 'Divider',\n  type: META.TYPES.ELEMENT,\n}\n\nDivider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have it's colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool,\n}\n\nexport default Divider\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Divider/index.js":"export default from './Divider'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Flag/Flag.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\nconst names = [\n  'ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al',\n  'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa',\n  'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb',\n  'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi',\n  'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt',\n  'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc',\n  'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland',\n  'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr',\n  'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz',\n  'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic',\n  'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es',\n  'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm',\n  'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'united kingdom', 'gd', 'grenada', 'ge',\n  'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn',\n  'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt',\n  'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn',\n  'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in',\n  'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm',\n  'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati',\n  'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky',\n  'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk',\n  'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya',\n  'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands',\n  'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp',\n  'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu',\n  'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia',\n  'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands',\n  'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe',\n  'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm',\n  'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau',\n  'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda',\n  'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se',\n  'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia',\n  'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv',\n  'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories',\n  'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn',\n  'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua',\n  'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz',\n  'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi',\n  'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa',\n  'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe',\n]\n\n/**\n * A flag is is used to represent a political state.\n */\nfunction Flag(props) {\n  const { className, name } = props\n  const classes = cx(name, 'flag', className)\n  const rest = getUnhandledProps(Flag, props)\n  const ElementType = getElementType(Flag, props)\n\n  return <ElementType {...rest} className={classes} />\n}\n\nFlag._meta = {\n  name: 'Flag',\n  type: META.TYPES.ELEMENT,\n}\n\nFlag.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Flag name, can use the two digit country code, the full name, or a common alias. */\n  name: customPropTypes.suggest(names),\n}\n\nFlag.defaultProps = {\n  as: 'i',\n}\n\nFlag.create = createShorthandFactory(Flag, value => ({ name: value }))\n\nexport default Flag\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Flag/index.js":"export default from './Flag'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Header/HeaderContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\nfunction HeaderContent(props) {\n  const { children, className } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(HeaderContent, props)\n  const ElementType = getElementType(HeaderContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nHeaderContent._meta = {\n  name: 'HeaderContent',\n  parent: 'Header',\n  type: META.TYPES.VIEW,\n}\n\nHeaderContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default HeaderContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Header/Header.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useValueAndKey,\n  useTextAlignProp,\n  useKeyOrValueAndKey,\n  useKeyOnly,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\nimport Image from '../../elements/Image'\n\nimport HeaderSubheader from './HeaderSubheader'\nimport HeaderContent from './HeaderContent'\n\n/**\n * A header provides a short summary of content\n */\nfunction Header(props) {\n  const {\n    attached,\n    block,\n    children,\n    className,\n    color,\n    content,\n    disabled,\n    dividing,\n    floated,\n    icon,\n    image,\n    inverted,\n    size,\n    sub,\n    subheader,\n    textAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(block, 'block'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(dividing, 'dividing'),\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(icon === true, 'icon'),\n    useKeyOnly(image === true, 'image'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(sub, 'sub'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useTextAlignProp(textAlign),\n    'header',\n    className,\n  )\n  const rest = getUnhandledProps(Header, props)\n  const ElementType = getElementType(Header, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const iconElement = Icon.create(icon)\n  const imageElement = Image.create(image)\n  const subheaderElement = HeaderSubheader.create(subheader)\n\n  if (iconElement || imageElement) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {iconElement || imageElement}\n        {(content || subheaderElement) && (\n          <HeaderContent>\n            {content}\n            {subheaderElement}\n          </HeaderContent>\n        )}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {subheaderElement}\n    </ElementType>\n  )\n}\n\nHeader._meta = {\n  name: 'Header',\n  type: META.TYPES.ELEMENT,\n}\n\nHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['top', 'bottom']),\n  ]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([\n    customPropTypes.disallow(['image']),\n    PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n  ]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([\n    customPropTypes.disallow(['icon']),\n    PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n  ]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'big', 'massive')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n}\n\nHeader.Content = HeaderContent\nHeader.Subheader = HeaderSubheader\n\nexport default Header\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Header/HeaderSubheader.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * Headers may contain subheaders.\n */\nfunction HeaderSubheader(props) {\n  const { children, className, content } = props\n  const classes = cx('sub header', className)\n  const rest = getUnhandledProps(HeaderSubheader, props)\n  const ElementType = getElementType(HeaderSubheader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nHeaderSubheader._meta = {\n  name: 'HeaderSubheader',\n  parent: 'Header',\n  type: META.TYPES.ELEMENT,\n}\n\nHeaderSubheader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, content => ({ content }))\n\nexport default HeaderSubheader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Header/index.js":"export default from './Header'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Icon/IconGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n} from '../../lib'\n\n/**\n * Several icons can be used together as a group.\n */\nfunction IconGroup(props) {\n  const { children, className, size } = props\n  const classes = cx(\n    size,\n    'icons',\n    className\n  )\n  const rest = getUnhandledProps(IconGroup, props)\n  const ElementType = getElementType(IconGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nIconGroup._meta = {\n  name: 'IconGroup',\n  parent: 'Icon',\n  type: META.TYPES.ELEMENT,\n}\n\nIconGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Size of the icon group. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n}\n\nIconGroup.defaultProps = {\n  as: 'i',\n}\n\nexport default IconGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Icon/Icon.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n} from '../../lib'\nimport IconGroup from './IconGroup'\n\n/**\n * An icon is a glyph used to represent something else.\n * @see Image\n */\nfunction Icon(props) {\n  const {\n    bordered,\n    circular,\n    className,\n    color,\n    corner,\n    disabled,\n    fitted,\n    flipped,\n    inverted,\n    link,\n    loading,\n    name,\n    rotated,\n    size,\n  } = props\n\n  const classes = cx(\n    color,\n    name,\n    size,\n    useKeyOnly(bordered, 'bordered'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(corner, 'corner'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(fitted, 'fitted'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(link, 'link'),\n    useKeyOnly(loading, 'loading'),\n    useValueAndKey(flipped, 'flipped'),\n    useValueAndKey(rotated, 'rotated'),\n    'icon',\n    className,\n  )\n  const rest = getUnhandledProps(Icon, props)\n  const ElementType = getElementType(Icon, props)\n\n  return <ElementType {...rest} aria-hidden='true' className={classes} />\n}\n\nIcon.Group = IconGroup\n\nIcon._meta = {\n  name: 'Icon',\n  type: META.TYPES.ELEMENT,\n}\n\nIcon.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Formatted to appear bordered. */\n  bordered: PropTypes.bool,\n\n  /** Icon can formatted to appear circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the icon. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Icons can display a smaller corner icon. */\n  corner: PropTypes.bool,\n\n  /** Show that the icon is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Fitted, without space to left or right of Icon. */\n  fitted: PropTypes.bool,\n\n  /** Icon can flipped. */\n  flipped: PropTypes.oneOf(['horizontally', 'vertically']),\n\n  /** Formatted to have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** Icon can be formatted as a link. */\n  link: PropTypes.bool,\n\n  /** Icon can be used as a simple loader. */\n  loading: PropTypes.bool,\n\n  /** Name of the icon. */\n  name: customPropTypes.suggest(SUI.ALL_ICONS_IN_ALL_CONTEXTS),\n\n  /** Icon can rotated. */\n  rotated: PropTypes.oneOf(['clockwise', 'counterclockwise']),\n\n  /** Size of the icon. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n}\n\nIcon.defaultProps = {\n  as: 'i',\n}\n\nIcon.create = createShorthandFactory(Icon, value => ({ name: value }))\n\nexport default Icon\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Icon/index.js":"export default from './Icon'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Image/ImageGroup.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n} from '../../lib'\n\n/**\n * A group of images.\n */\nfunction ImageGroup(props) {\n  const { children, className, size } = props\n  const classes = cx('ui', size, className, 'images')\n  const rest = getUnhandledProps(ImageGroup, props)\n  const ElementType = getElementType(ImageGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nImageGroup._meta = {\n  name: 'ImageGroup',\n  parent: 'Image',\n  type: META.TYPES.ELEMENT,\n}\n\nImageGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A group of images can be formatted to have the same size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n}\n\nexport default ImageGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Image/Image.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n  useVerticalAlignProp,\n} from '../../lib'\nimport Dimmer from '../../modules/Dimmer'\nimport Label from '../Label/Label'\n\nimport ImageGroup from './ImageGroup'\n\n/**\n * An image is a graphic representation of something.\n * @see Icon\n */\nfunction Image(props) {\n  const {\n    alt,\n    avatar,\n    bordered,\n    centered,\n    children,\n    className,\n    dimmer,\n    disabled,\n    floated,\n    fluid,\n    height,\n    hidden,\n    href,\n    inline,\n    label,\n    shape,\n    size,\n    spaced,\n    src,\n    verticalAlign,\n    width,\n    wrapped,\n    ui,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(ui, 'ui'),\n    size,\n    shape,\n    useKeyOnly(avatar, 'avatar'),\n    useKeyOnly(bordered, 'bordered'),\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOrValueAndKey(spaced, 'spaced'),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign, 'aligned'),\n    'image',\n    className,\n  )\n  const rest = getUnhandledProps(Image, props)\n  const ElementType = getElementType(Image, props, () => {\n    if (!_.isNil(dimmer) || !_.isNil(label) || !_.isNil(wrapped) || !_.isNil(children)) return 'div'\n  })\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const rootProps = { ...rest, className: classes }\n  const imgTagProps = { alt, src, height, width }\n\n  if (ElementType === 'img') return <ElementType {...rootProps} {...imgTagProps} />\n\n  return (\n    <ElementType {...rootProps} href={href}>\n      {Dimmer.create(dimmer)}\n      {Label.create(label)}\n      <img {...imgTagProps} />\n    </ElementType>\n  )\n}\n\nImage.Group = ImageGroup\n\nImage._meta = {\n  name: 'Image',\n  type: META.TYPES.ELEMENT,\n}\n\nImage.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Alternate text for the image specified. */\n  alt: PropTypes.string,\n\n  /** An image may be formatted to appear inline with text as an avatar. */\n  avatar: PropTypes.bool,\n\n  /** An image may include a border to emphasize the edges of white or transparent content. */\n  bordered: PropTypes.bool,\n\n  /** An image can appear centered in a content block. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An image can show that it is disabled and cannot be selected. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for Dimmer. */\n  dimmer: customPropTypes.itemShorthand,\n\n  /** An image can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** An image can take up the width of its container. */\n  fluid: customPropTypes.every([\n    PropTypes.bool,\n    customPropTypes.disallow(['size']),\n  ]),\n\n  /** The img element height attribute. */\n  height: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n\n  /** An image can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** Renders the Image as an <a> tag with this href. */\n  href: PropTypes.string,\n\n  /** An image may appear inline. */\n  inline: PropTypes.bool,\n\n  /** Shorthand for Label. */\n  label: customPropTypes.itemShorthand,\n\n  /** An image may appear rounded or circular. */\n  shape: PropTypes.oneOf(['rounded', 'circular']),\n\n  /** An image may appear at different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An image can specify that it needs an additional spacing to separate it from nearby content. */\n  spaced: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['left', 'right']),\n  ]),\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string,\n\n  /** Whether or not to add the ui className. */\n  ui: PropTypes.bool,\n\n  /** An image can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** The img element width attribute. */\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n\n  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */\n  wrapped: customPropTypes.every([\n    PropTypes.bool,\n    // these props wrap the image in an a tag already\n    customPropTypes.disallow(['href']),\n  ]),\n}\n\nImage.defaultProps = {\n  as: 'img',\n  ui: true,\n}\n\nImage.create = createShorthandFactory(Image, value => ({ src: value }))\n\nexport default Image\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Image/index.js":"export default from './Image'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Input/index.js":"export default from './Input'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Input/Input.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Children, cloneElement, Component } from 'react'\n\nimport {\n  createHTMLInput,\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  partitionHTMLInputProps,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n} from '../../lib'\nimport Button from '../../elements/Button'\nimport Icon from '../../elements/Icon'\nimport Label from '../../elements/Label'\n\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\nclass Input extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** An Input can be formatted to alert the user to an action they may perform. */\n    action: PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n\n    /** An action can appear along side an Input on the left or right. */\n    actionPosition: PropTypes.oneOf(['left']),\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** An Input field can show that it is disabled. */\n    disabled: PropTypes.bool,\n\n    /** An Input field can show the data contains errors. */\n    error: PropTypes.bool,\n\n    /** Take on the size of it's container. */\n    fluid: PropTypes.bool,\n\n    /** An Input field can show a user is currently interacting with it. */\n    focus: PropTypes.bool,\n\n    /** Optional Icon to display inside the Input. */\n    icon: PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n\n    /** An Icon can appear inside an Input on the left or right. */\n    iconPosition: PropTypes.oneOf(['left']),\n\n    /** Shorthand for creating the HTML Input. */\n    input: customPropTypes.itemShorthand,\n\n    /** Format to appear on dark backgrounds. */\n    inverted: PropTypes.bool,\n\n    /** Optional Label to display along side the Input. */\n    label: customPropTypes.itemShorthand,\n\n    /** A Label can appear outside an Input on the left or right. */\n    labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n    /** An Icon Input field can show that it is currently loading data. */\n    loading: PropTypes.bool,\n\n    /**\n     * Called on change.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and proposed value.\n     */\n    onChange: PropTypes.func,\n\n    /** An Input can vary in size. */\n    size: PropTypes.oneOf(SUI.SIZES),\n\n    /** An Input can receive focus. */\n    tabIndex: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /** Transparent Input has no background. */\n    transparent: PropTypes.bool,\n\n    /** The HTML input type. */\n    type: PropTypes.string,\n  }\n\n  static defaultProps = {\n    type: 'text',\n  }\n\n  static _meta = {\n    name: 'Input',\n    type: META.TYPES.ELEMENT,\n  }\n\n  focus = () => (this.inputRef.focus())\n\n  handleChange = (e) => {\n    const { onChange } = this.props\n    const value = _.get(e, 'target.value')\n\n    onChange(e, { ...this.props, value })\n  }\n\n  handleChildOverrides = (child, defaultProps) => ({\n    ...defaultProps,\n    ...child.props,\n    ref: c => {\n      _.invoke(child, 'ref', c)\n      this.handleInputRef(c)\n    },\n  })\n\n  handleInputRef = c => (this.inputRef = c)\n\n  render() {\n    const {\n      action,\n      actionPosition,\n      children,\n      className,\n      disabled,\n      error,\n      fluid,\n      focus,\n      icon,\n      iconPosition,\n      input,\n      inverted,\n      label,\n      labelPosition,\n      loading,\n      onChange,\n      size,\n      tabIndex,\n      transparent,\n      type,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      size,\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(error, 'error'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(focus, 'focus'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(loading, 'loading'),\n      useKeyOnly(transparent, 'transparent'),\n      useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'),\n      useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon, 'icon'),\n      useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'),\n      'input',\n      className,\n    )\n    const unhandled = getUnhandledProps(Input, this.props)\n    const ElementType = getElementType(Input, this.props)\n\n    // Heads up! We should pass `type` prop manually because `Input` component handles it\n    const [htmlInputProps, rest] = partitionHTMLInputProps({ ...unhandled, type })\n\n    if (onChange) htmlInputProps.onChange = this.handleChange\n    htmlInputProps.ref = this.handleInputRef\n\n    // tabIndex\n    if (!_.isNil(tabIndex)) htmlInputProps.tabIndex = tabIndex\n    else if (disabled) htmlInputProps.tabIndex = -1\n\n    // Render with children\n    // ----------------------------------------\n    if (!_.isNil(children)) {\n      // add htmlInputProps to the `<input />` child\n      const childElements = _.map(Children.toArray(children), (child) => {\n        if (child.type !== 'input') return child\n\n        return cloneElement(child, this.handleChildOverrides(child, htmlInputProps))\n      })\n\n      return <ElementType {...rest} className={classes}>{childElements}</ElementType>\n    }\n\n    // Render Shorthand\n    // ----------------------------------------\n    const actionElement = Button.create(action, { defaultProps: { className: 'button' } })\n    const iconElement = Icon.create(icon)\n    const labelElement = Label.create(label, { defaultProps: {\n      className: cx(\n        'label',\n        // add 'left|right corner'\n        _.includes(labelPosition, 'corner') && labelPosition,\n      ),\n    } })\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {actionPosition === 'left' && actionElement}\n        {iconPosition === 'left' && iconElement}\n        {labelPosition !== 'right' && labelElement}\n        {createHTMLInput(input || type, { defaultProps: htmlInputProps })}\n        {actionPosition !== 'left' && actionElement}\n        {iconPosition !== 'left' && iconElement}\n        {labelPosition === 'right' && labelElement}\n      </ElementType>\n    )\n  }\n}\n\nInput.create = createShorthandFactory(Input, type => ({ type }))\n\nexport default Input\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Label/index.js":"export default from './Label'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Label/LabelDetail.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\nfunction LabelDetail(props) {\n  const { children, className, content } = props\n  const classes = cx('detail', className)\n  const rest = getUnhandledProps(LabelDetail, props)\n  const ElementType = getElementType(LabelDetail, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nLabelDetail._meta = {\n  name: 'LabelDetail',\n  parent: 'Label',\n  type: META.TYPES.ELEMENT,\n}\n\nLabelDetail.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default LabelDetail\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Label/LabelGroup.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A label can be grouped.\n */\nfunction LabelGroup(props) {\n  const {\n    children,\n    circular,\n    className,\n    color,\n    size,\n    tag,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(tag, 'tag'),\n    'labels',\n    className\n  )\n  const rest = getUnhandledProps(LabelGroup, props)\n  const ElementType = getElementType(LabelGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nLabelGroup._meta = {\n  name: 'LabelGroup',\n  parent: 'Label',\n  type: META.TYPES.ELEMENT,\n}\n\nLabelGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Labels can share shapes. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Label group can share colors together. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Label group can share sizes together. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Label group can share tag formatting. */\n  tag: PropTypes.bool,\n}\n\nexport default LabelGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Label/Label.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createShorthand,\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n} from '../../lib'\nimport Icon from '../Icon/Icon'\nimport Image from '../Image/Image'\nimport LabelDetail from './LabelDetail'\nimport LabelGroup from './LabelGroup'\n\n/**\n * A label displays content classification.\n */\nexport default class Label extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A label can be active. */\n    active: PropTypes.bool,\n\n    /** A label can attach to a content segment. */\n    attached: PropTypes.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),\n\n    /** A label can reduce its complexity. */\n    basic: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** A label can be circular. */\n    circular: PropTypes.bool,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Color of the label. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** A label can position itself in the corner of an element. */\n    corner: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['left', 'right']),\n    ]),\n\n    /** Shorthand for LabelDetail. */\n    detail: customPropTypes.itemShorthand,\n\n    /** Formats the label as a dot. */\n    empty: customPropTypes.every([\n      PropTypes.bool,\n      customPropTypes.demand(['circular']),\n    ]),\n\n    /** Float above another element in the upper right corner. */\n    floating: PropTypes.bool,\n\n    /** A horizontal label is formatted to label content along-side it horizontally. */\n    horizontal: PropTypes.bool,\n\n    /** Shorthand for Icon. */\n    icon: customPropTypes.itemShorthand,\n\n    /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */\n    image: PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.itemShorthand,\n    ]),\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Adds an \"x\" icon, called when \"x\" is clicked.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onRemove: PropTypes.func,\n\n    /** A label can point to content next to it. */\n    pointing: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['above', 'below', 'left', 'right']),\n    ]),\n\n    /** Shorthand for Icon to appear as the last child and trigger onRemove. */\n    removeIcon: customPropTypes.itemShorthand,\n\n    /** A label can appear as a ribbon attaching itself to an element. */\n    ribbon: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['right']),\n    ]),\n\n    /** A label can have different sizes. */\n    size: PropTypes.oneOf(SUI.SIZES),\n\n    /** A label can appear as a tag. */\n    tag: PropTypes.bool,\n  }\n\n  static _meta = {\n    name: 'Label',\n    type: META.TYPES.ELEMENT,\n  }\n\n  static Detail = LabelDetail\n  static Group = LabelGroup\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  handleIconOverrides = predefinedProps => ({\n    onClick: e => {\n      _.invoke(predefinedProps, 'onClick', e)\n      _.invoke(this.props, 'onRemove', e, this.props)\n    },\n  })\n\n  render() {\n    const {\n      active,\n      attached,\n      basic,\n      children,\n      circular,\n      className,\n      color,\n      content,\n      corner,\n      detail,\n      empty,\n      floating,\n      horizontal,\n      icon,\n      image,\n      onRemove,\n      pointing,\n      removeIcon,\n      ribbon,\n      size,\n      tag,\n    } = this.props\n\n    const pointingClass = pointing === true && 'pointing'\n      || (pointing === 'left' || pointing === 'right') && `${pointing} pointing`\n      || (pointing === 'above' || pointing === 'below') && `pointing ${pointing}`\n\n    const classes = cx(\n      'ui',\n      color,\n      pointingClass,\n      size,\n      useKeyOnly(active, 'active'),\n      useKeyOnly(basic, 'basic'),\n      useKeyOnly(circular, 'circular'),\n      useKeyOnly(empty, 'empty'),\n      useKeyOnly(floating, 'floating'),\n      useKeyOnly(horizontal, 'horizontal'),\n      useKeyOnly(image === true, 'image'),\n      useKeyOnly(tag, 'tag'),\n      useKeyOrValueAndKey(corner, 'corner'),\n      useKeyOrValueAndKey(ribbon, 'ribbon'),\n      useValueAndKey(attached, 'attached'),\n      'label',\n      className,\n    )\n    const rest = getUnhandledProps(Label, this.props)\n    const ElementType = getElementType(Label, this.props)\n\n    if (!_.isNil(children)) {\n      return <ElementType {...rest} className={classes} onClick={this.handleClick}>{children}</ElementType>\n    }\n\n    const removeIconShorthand = _.isUndefined(removeIcon) ? 'delete' : removeIcon\n\n    return (\n      <ElementType className={classes} onClick={this.handleClick} {...rest}>\n        {Icon.create(icon)}\n        {typeof image !== 'boolean' && Image.create(image)}\n        {content}\n        {createShorthand(LabelDetail, val => ({ content: val }), detail)}\n        {onRemove && Icon.create(removeIconShorthand, { overrideProps: this.handleIconOverrides })}\n      </ElementType>\n    )\n  }\n}\n\nLabel.create = createShorthandFactory(Label, value => ({ content: value }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/index.js":"export default from './List'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useValueAndKey,\n  useVerticalAlignProp,\n} from '../../lib'\nimport ListDescription from './ListDescription'\nimport ListHeader from './ListHeader'\n\n/**\n * A list item can contain a content.\n */\nfunction ListContent(props) {\n  const {\n    children,\n    className,\n    content,\n    description,\n    floated,\n    header,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(ListContent, props)\n  const ElementType = getElementType(ListContent, props)\n\n  if (!_.isNil(children)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ListHeader.create(header)}\n      {ListDescription.create(description)}\n      {content}\n    </ElementType>\n  )\n}\n\nListContent._meta = {\n  name: 'ListContent',\n  parent: 'List',\n  type: META.TYPES.ELEMENT,\n}\n\nListContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nListContent.create = createShorthandFactory(ListContent, content => ({ content }))\n\nexport default ListContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListDescription.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A list item can contain a description.\n */\nfunction ListDescription(props) {\n  const { children, className, content } = props\n  const classes = cx(className, 'description')\n  const rest = getUnhandledProps(ListDescription, props)\n  const ElementType = getElementType(ListDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nListDescription._meta = {\n  name: 'ListDescription',\n  parent: 'List',\n  type: META.TYPES.ELEMENT,\n}\n\nListDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nListDescription.create = createShorthandFactory(ListDescription, content => ({ content }))\n\nexport default ListDescription\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A list item can contain a header.\n */\nfunction ListHeader(props) {\n  const { children, className, content } = props\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(ListHeader, props)\n  const ElementType = getElementType(ListHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nListHeader._meta = {\n  name: 'ListHeader',\n  parent: 'List',\n  type: META.TYPES.ELEMENT,\n}\n\nListHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nListHeader.create = createShorthandFactory(ListHeader, content => ({ content }))\n\nexport default ListHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListIcon.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  getUnhandledProps,\n  META,\n  SUI,\n  useVerticalAlignProp,\n} from '../../lib'\nimport Icon from '../Icon/Icon'\n\n/**\n * A list item can contain an icon.\n */\nfunction ListIcon(props) {\n  const { className, verticalAlign } = props\n  const classes = cx(\n    useVerticalAlignProp(verticalAlign),\n    className\n  )\n  const rest = getUnhandledProps(ListIcon, props)\n\n  return <Icon {...rest} className={classes} />\n}\n\nListIcon._meta = {\n  name: 'ListIcon',\n  parent: 'List',\n  type: META.TYPES.ELEMENT,\n}\n\nListIcon.propTypes = {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nListIcon.create = createShorthandFactory(ListIcon, name => ({ name }))\n\nexport default ListIcon\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListItem.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component, isValidElement } from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport Image from '../../elements/Image'\n\nimport ListContent from './ListContent'\nimport ListDescription from './ListDescription'\nimport ListHeader from './ListHeader'\nimport ListIcon from './ListIcon'\n\n/**\n * A list item can contain a set of items.\n */\nclass ListItem extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A list item can active. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /**\n     * Shorthand for primary content.\n     *\n     * Heads up!\n     *\n     * This is handled slightly differently than the typical `content` prop since\n     * the wrapping ListContent is not used when there's no icon or image.\n     *\n     * If you pass content as:\n     * - an element/literal, it's treated as the sibling node to\n     * header/description (whether wrapped in Item.Content or not).\n     * - a props object, it forces the presence of Item.Content and passes those\n     * props to it. If you pass a content prop within that props object, it\n     * will be treated as the sibling node to header/description.\n     */\n    content: customPropTypes.itemShorthand,\n\n    /** Shorthand for ListDescription. */\n    description: customPropTypes.itemShorthand,\n\n    /** A list item can disabled. */\n    disabled: PropTypes.bool,\n\n    /** Shorthand for ListHeader. */\n    header: customPropTypes.itemShorthand,\n\n    /** Shorthand for ListIcon. */\n    icon: customPropTypes.every([\n      customPropTypes.disallow(['image']),\n      customPropTypes.itemShorthand,\n    ]),\n\n    /** Shorthand for Image. */\n    image: customPropTypes.every([\n      customPropTypes.disallow(['icon']),\n      customPropTypes.itemShorthand,\n    ]),\n\n    /** A ListItem can be clicked */\n    onClick: PropTypes.func,\n\n    /** A value for an ordered list. */\n    value: PropTypes.string,\n  }\n\n  static _meta = {\n    name: 'ListItem',\n    parent: 'List',\n    type: META.TYPES.ELEMENT,\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      content,\n      description,\n      disabled,\n      header,\n      icon,\n      image,\n      value,\n    } = this.props\n\n    const ElementType = getElementType(ListItem, this.props)\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(ElementType !== 'li', 'item'),\n      className,\n    )\n    const rest = getUnhandledProps(ListItem, this.props)\n    const valueProp = ElementType === 'li' ? { value } : { 'data-value': value }\n\n    if (!_.isNil(children)) {\n      return (\n        <ElementType {...rest} {...valueProp} role='listitem' className={classes} onClick={this.handleClick}>\n          {children}\n        </ElementType>\n      )\n    }\n\n    const iconElement = ListIcon.create(icon)\n    const imageElement = Image.create(image)\n\n    // See description of `content` prop for explanation about why this is necessary.\n    if (!isValidElement(content) && _.isPlainObject(content)) {\n      return (\n        <ElementType {...rest} {...valueProp} role='listitem' className={classes} onClick={this.handleClick}>\n          {iconElement || imageElement}\n          {ListContent.create(content, { header, description })}\n        </ElementType>\n      )\n    }\n\n    const headerElement = ListHeader.create(header)\n    const descriptionElement = ListDescription.create(description)\n    if (iconElement || imageElement) {\n      return (\n        <ElementType {...rest} {...valueProp} role='listitem' className={classes} onClick={this.handleClick}>\n          {iconElement || imageElement}\n          {(content || headerElement || descriptionElement) && (\n            <ListContent>\n              {headerElement}\n              {descriptionElement}\n              {content}\n            </ListContent>\n          )}\n        </ElementType>\n      )\n    }\n\n    return (\n      <ElementType {...rest} {...valueProp} role='listitem' className={classes} onClick={this.handleClick}>\n        {headerElement}\n        {descriptionElement}\n        {content}\n      </ElementType>\n    )\n  }\n}\n\nListItem.create = createShorthandFactory(ListItem, content => ({ content }))\n\nexport default ListItem\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/List.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useValueAndKey,\n  useVerticalAlignProp,\n} from '../../lib'\nimport ListContent from './ListContent'\nimport ListDescription from './ListDescription'\nimport ListHeader from './ListHeader'\nimport ListIcon from './ListIcon'\nimport ListItem from './ListItem'\nimport ListList from './ListList'\n\n/**\n * A list groups related content.\n */\nclass List extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A list can animate to set the current item apart from the list. */\n    animated: PropTypes.bool,\n\n    /** A list can mark items with a bullet. */\n    bulleted: PropTypes.bool,\n\n    /** A list can divide its items into cells. */\n    celled: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A list can show divisions between content. */\n    divided: PropTypes.bool,\n\n    /** An list can be floated left or right. */\n    floated: PropTypes.oneOf(SUI.FLOATS),\n\n    /** A list can be formatted to have items appear horizontally. */\n    horizontal: PropTypes.bool,\n\n    /** A list can be inverted to appear on a dark background. */\n    inverted: PropTypes.bool,\n\n    /** Shorthand array of props for ListItem. */\n    items: customPropTypes.collectionShorthand,\n\n    /** A list can be specially formatted for navigation links. */\n    link: PropTypes.bool,\n\n    /**\n     * onClick handler for ListItem. Mutually exclusive with children.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All item props.\n     */\n    onItemClick: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.func,\n    ]),\n\n    /** A list can be ordered numerically. */\n    ordered: PropTypes.bool,\n\n    /** A list can relax its padding to provide more negative space. */\n    relaxed: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['very']),\n    ]),\n\n    /** A selection list formats list items as possible choices. */\n    selection: PropTypes.bool,\n\n    /** A list can vary in size. */\n    size: PropTypes.oneOf(SUI.SIZES),\n\n    /** An element inside a list can be vertically aligned. */\n    verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n  }\n\n  static _meta = {\n    name: 'List',\n    type: META.TYPES.ELEMENT,\n  }\n\n  static Content = ListContent\n  static Description = ListDescription\n  static Header = ListHeader\n  static Icon = ListIcon\n  static Item = ListItem\n  static List = ListList\n\n  handleItemOverrides = predefinedProps => ({\n    onClick: (e, itemProps) => {\n      _.invoke(predefinedProps, 'onClick', e, itemProps)\n      _.invoke(this.props, 'onItemClick', e, itemProps)\n    },\n  })\n\n  render() {\n    const {\n      animated,\n      bulleted,\n      celled,\n      children,\n      className,\n      divided,\n      floated,\n      horizontal,\n      inverted,\n      items,\n      link,\n      ordered,\n      relaxed,\n      selection,\n      size,\n      verticalAlign,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      size,\n      useKeyOnly(animated, 'animated'),\n      useKeyOnly(bulleted, 'bulleted'),\n      useKeyOnly(celled, 'celled'),\n      useKeyOnly(divided, 'divided'),\n      useKeyOnly(horizontal, 'horizontal'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(link, 'link'),\n      useKeyOnly(ordered, 'ordered'),\n      useKeyOnly(selection, 'selection'),\n      useKeyOrValueAndKey(relaxed, 'relaxed'),\n      useValueAndKey(floated, 'floated'),\n      useVerticalAlignProp(verticalAlign),\n      'list',\n      className,\n    )\n    const rest = getUnhandledProps(List, this.props)\n    const ElementType = getElementType(List, this.props)\n\n    if (!_.isNil(children)) {\n      return <ElementType {...rest} role='list' className={classes}>{children}</ElementType>\n    }\n\n    return (\n      <ElementType {...rest} role='list' className={classes}>\n        {_.map(items, item => ListItem.create(item, { overrideProps: this.handleItemOverrides }))}\n      </ElementType>\n    )\n  }\n}\n\nexport default List\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/List/ListList.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A list can contain a sub list.\n */\nfunction ListList(props) {\n  const { children, className } = props\n\n  const rest = getUnhandledProps(ListList, props)\n  const ElementType = getElementType(ListList, props)\n  const classes = cx(\n    useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'),\n    className,\n  )\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nListList._meta = {\n  name: 'ListList',\n  parent: 'List',\n  type: META.TYPES.ELEMENT,\n}\n\nListList.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default ListList\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Loader/index.js":"export default from './Loader'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Loader/Loader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\n\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\nfunction Loader(props) {\n  const {\n    active,\n    children,\n    className,\n    content,\n    disabled,\n    indeterminate,\n    inline,\n    inverted,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(indeterminate, 'indeterminate'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(children || content, 'text'),\n    useKeyOrValueAndKey(inline, 'inline'),\n    'loader',\n    className,\n  )\n  const rest = getUnhandledProps(Loader, props)\n  const ElementType = getElementType(Loader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nLoader._meta = {\n  name: 'Loader',\n  type: META.TYPES.ELEMENT,\n}\n\nLoader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['centered']),\n  ]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n}\n\nexport default Loader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Rail/index.js":"export default from './Rail'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Rail/Rail.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\n\n/**\n * A rail is used to show accompanying content outside the boundaries of the main view of a site.\n */\nfunction Rail(props) {\n  const {\n    attached,\n    children,\n    className,\n    close,\n    dividing,\n    internal,\n    position,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    position,\n    size,\n    useKeyOnly(attached, 'attached'),\n    useKeyOnly(dividing, 'dividing'),\n    useKeyOnly(internal, 'internal'),\n    useKeyOrValueAndKey(close, 'close'),\n    'rail',\n    className,\n  )\n  const rest = getUnhandledProps(Rail, props)\n  const ElementType = getElementType(Rail, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nRail._meta = {\n  name: 'Rail',\n  type: META.TYPES.ELEMENT,\n}\n\nRail.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A rail can appear attached to the main viewport. */\n  attached: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A rail can appear closer to the main viewport. */\n  close: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n\n  /** A rail can create a division between itself and a container. */\n  dividing: PropTypes.bool,\n\n  /** A rail can attach itself to the inside of a container. */\n  internal: PropTypes.bool,\n\n  /** A rail can be presented on the left or right side of a container. */\n  position: PropTypes.oneOf(SUI.FLOATS).isRequired,\n\n  /** A rail can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n}\n\nexport default Rail\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Reveal/index.js":"export default from './Reveal'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Reveal/RevealContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A content sub-component for the Reveal.\n */\nfunction RevealContent(props) {\n  const {\n    children,\n    className,\n    hidden,\n    visible,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(visible, 'visible'),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(RevealContent, props)\n  const ElementType = getElementType(RevealContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: META.TYPES.ELEMENT,\n}\n\nRevealContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: PropTypes.bool,\n\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: PropTypes.bool,\n}\n\nexport default RevealContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Reveal/Reveal.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport RevealContent from './RevealContent'\n\n/**\n * A reveal displays additional content in place of previous content when activated.\n */\nfunction Reveal(props) {\n  const {\n    active,\n    animated,\n    children,\n    className,\n    disabled,\n    instant,\n  } = props\n\n  const classes = cx(\n    'ui',\n    animated,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(instant, 'instant'),\n    'reveal',\n    className,\n  )\n  const rest = getUnhandledProps(Reveal, props)\n  const ElementType = getElementType(Reveal, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nReveal._meta = {\n  name: 'Reveal',\n  type: META.TYPES.ELEMENT,\n}\n\nReveal.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An active reveal displays its hidden content. */\n  active: PropTypes.bool,\n\n  /** An animation name that will be applied to Reveal. */\n  animated: PropTypes.oneOf([\n    'fade', 'small fade',\n    'move', 'move right', 'move up', 'move down',\n    'rotate', 'rotate left',\n  ]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A disabled reveal will not animate when hovered. */\n  disabled: PropTypes.bool,\n\n  /** An element can show its content without delay. */\n  instant: PropTypes.bool,\n}\n\nReveal.Content = RevealContent\n\nexport default Reveal\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Segment/index.js":"export default from './Segment'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Segment/SegmentGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A group of segments can be formatted to appear together.\n */\nfunction SegmentGroup(props) {\n  const {\n    children,\n    className,\n    compact,\n    horizontal,\n    piled,\n    raised,\n    size,\n    stacked,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(stacked, 'stacked'),\n    'segments',\n    className,\n  )\n  const rest = getUnhandledProps(SegmentGroup, props)\n  const ElementType = getElementType(SegmentGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nSegmentGroup._meta = {\n  name: 'SegmentGroup',\n  parent: 'Segment',\n  type: META.TYPES.ELEMENT,\n}\n\nSegmentGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n}\n\nexport default SegmentGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Segment/Segment.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n  useTextAlignProp,\n  useValueAndKey,\n} from '../../lib'\nimport SegmentGroup from './SegmentGroup'\n\n/**\n * A segment is used to create a grouping of related content.\n */\nfunction Segment(props) {\n  const {\n    attached,\n    basic,\n    children,\n    circular,\n    className,\n    clearing,\n    color,\n    compact,\n    disabled,\n    floated,\n    inverted,\n    loading,\n    padded,\n    piled,\n    raised,\n    secondary,\n    size,\n    stacked,\n    tertiary,\n    textAlign,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(loading, 'loading'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(stacked, 'stacked'),\n    useKeyOnly(tertiary, 'tertiary'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    'segment',\n    className,\n  )\n  const rest = getUnhandledProps(Segment, props)\n  const ElementType = getElementType(Segment, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nSegment.Group = SegmentGroup\n\nSegment._meta = {\n  name: 'Segment',\n  type: META.TYPES.ELEMENT,\n}\n\nSegment.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['top', 'bottom']),\n  ]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_.without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool,\n}\n\nexport default Segment\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/index.js":"export default from './Step'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/StepContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport StepDescription from './StepDescription'\nimport StepTitle from './StepTitle'\n\n/**\n * A step can contain a content.\n */\nfunction StepContent(props) {\n  const { children, className, description, title } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(StepContent, props)\n  const ElementType = getElementType(StepContent, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(StepTitle, val => ({ title: val }), title)}\n      {createShorthand(StepDescription, val => ({ description: val }), description)}\n    </ElementType>\n  )\n}\n\nStepContent._meta = {\n  name: 'StepContent',\n  parent: 'Step',\n  type: META.TYPES.ELEMENT,\n}\n\nStepContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Shorthand for StepDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for StepTitle. */\n  title: customPropTypes.itemShorthand,\n}\n\nexport default StepContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/StepDescription.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\nfunction StepDescription(props) {\n  const { children, className, description } = props\n  const classes = cx('description', className)\n  const rest = getUnhandledProps(StepDescription, props)\n  const ElementType = getElementType(StepDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? description : children}\n    </ElementType>\n  )\n}\n\nStepDescription._meta = {\n  name: 'StepDescription',\n  parent: 'Step',\n  type: META.TYPES.ELEMENT,\n}\n\nStepDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Shorthand for primary content. */\n  description: customPropTypes.contentShorthand,\n}\n\nexport default StepDescription\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/StepGroup.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useValueAndKey,\n  useKeyOnly,\n} from '../../lib'\nimport Step from './Step'\n\n/**\n * A set of steps.\n */\nfunction StepGroup(props) {\n  const {\n    children,\n    className,\n    fluid,\n    items,\n    ordered,\n    size,\n    stackable,\n    vertical,\n  } = props\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(ordered, 'ordered'),\n    useKeyOnly(vertical, 'vertical'),\n    useValueAndKey(stackable, 'stackable'),\n    'steps',\n    className,\n  )\n  const rest = getUnhandledProps(StepGroup, props)\n  const ElementType = getElementType(StepGroup, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const content = _.map(items, item => {\n    const key = item.key || [item.title, item.description].join('-')\n    return <Step key={key} {...item} />\n  })\n\n  return <ElementType {...rest} className={classes}>{content}</ElementType>\n}\n\nStepGroup._meta = {\n  name: 'StepGroup',\n  parent: 'Step',\n  type: META.TYPES.ELEMENT,\n}\n\nStepGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A fluid step takes up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand array of props for Step. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A step can show a ordered sequence of steps. */\n  ordered: PropTypes.bool,\n\n  /** Steps can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n  /** A step can stack vertically only on smaller screens. */\n  stackable: PropTypes.oneOf(['tablet']),\n\n  /** A step can be displayed stacked vertically. */\n  vertical: PropTypes.bool,\n}\n\nexport default StepGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/Step.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\nimport StepContent from './StepContent'\nimport StepDescription from './StepDescription'\nimport StepGroup from './StepGroup'\nimport StepTitle from './StepTitle'\n\n/**\n * A step shows the completion status of an activity in a series of activities.\n */\nexport default class Step extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A step can be highlighted as active. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A step can show that a user has completed it. */\n    completed: PropTypes.bool,\n\n    /** Shorthand for StepDescription. */\n    description: customPropTypes.itemShorthand,\n\n    /** Show that the Loader is inactive. */\n    disabled: PropTypes.bool,\n\n    /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n    href: PropTypes.string,\n\n    /** Shorthand for Icon. */\n    icon: customPropTypes.itemShorthand,\n\n    /** A step can be link. */\n    link: PropTypes.bool,\n\n    /**\n     * Called on click. When passed, the component will render as an `a`\n     * tag by default instead of a `div`.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /** A step can show a ordered sequence of steps. Passed from StepGroup. */\n    ordered: PropTypes.bool,\n\n    /** Shorthand for StepTitle. */\n    title: customPropTypes.itemShorthand,\n  }\n\n  static _meta = {\n    name: 'Step',\n    type: META.TYPES.ELEMENT,\n  }\n\n  static Content = StepContent\n  static Description = StepDescription\n  static Group = StepGroup\n  static Title = StepTitle\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      completed,\n      description,\n      disabled,\n      href,\n      icon,\n      link,\n      onClick,\n      title,\n    } = this.props\n\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      useKeyOnly(completed, 'completed'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(link, 'link'),\n      'step',\n      className,\n    )\n    const rest = getUnhandledProps(Step, this.props)\n    const ElementType = getElementType(Step, this.props, () => {\n      if (onClick) return 'a'\n    })\n\n    if (!_.isNil(children)) {\n      return <ElementType {...rest} className={classes} href={href} onClick={this.handleClick}>{children}</ElementType>\n    }\n\n    return (\n      <ElementType {...rest} className={classes} href={href} onClick={this.handleClick}>\n        {Icon.create(icon)}\n        <StepContent description={description} title={title} />\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/elements/Step/StepTitle.js":"import _ from 'lodash'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A step can contain a title.\n */\nfunction StepTitle(props) {\n  const { children, className, title } = props\n  const classes = cx('title', className)\n  const rest = getUnhandledProps(StepTitle, props)\n  const ElementType = getElementType(StepTitle, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? title : children}\n    </ElementType>\n  )\n}\n\nStepTitle._meta = {\n  name: 'StepTitle',\n  parent: 'Step',\n  type: META.TYPES.ELEMENT,\n}\n\nStepTitle.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Shorthand for primary content. */\n  title: customPropTypes.contentShorthand,\n}\n\nexport default StepTitle\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Accordion/AccordionContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n  createShorthandFactory,\n} from '../../lib'\n\n/**\n * A content sub-component for Accordion component.\n */\nfunction AccordionContent(props) {\n  const { active, children, className, content } = props\n  const classes = cx(\n    'content',\n    useKeyOnly(active, 'active'),\n    className\n  )\n  const rest = getUnhandledProps(AccordionContent, props)\n  const ElementType = getElementType(AccordionContent, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nAccordionContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Whether or not the content is visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nAccordionContent._meta = {\n  name: 'AccordionContent',\n  type: META.TYPES.MODULE,\n  parent: 'Accordion',\n}\n\nAccordionContent.create = createShorthandFactory(AccordionContent, content => ({ content }))\n\nexport default AccordionContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Accordion/Accordion.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Children, cloneElement } from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\nimport AccordionContent from './AccordionContent'\nimport AccordionTitle from './AccordionTitle'\n\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\nexport default class Accordion extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Index of the currently active panel. */\n    activeIndex: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.number),\n      PropTypes.number,\n    ]),\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Initial activeIndex value. */\n    defaultActiveIndex: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.number),\n      PropTypes.number,\n    ]),\n\n    /** Only allow one panel open at a time. */\n    exclusive: PropTypes.bool,\n\n    /** Format to take up the width of it's container. */\n    fluid: PropTypes.bool,\n\n    /** Format for dark backgrounds. */\n    inverted: PropTypes.bool,\n\n    /**\n     * Called when a panel title is clicked.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {number} index - The index of the clicked panel.\n     */\n    onTitleClick: PropTypes.func,\n\n    /**\n     * Create simple accordion panels from an array of { text: <string>, content: <custom> } objects.\n     * Object can optionally define an `active` key to open/close the panel.\n     * Object can opitonally define a `key` key used for title and content nodes' keys.\n     * Mutually exclusive with children.\n     * TODO: AccordionPanel should be a sub-component\n     */\n    panels: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        active: PropTypes.bool,\n        title: customPropTypes.contentShorthand,\n        content: customPropTypes.contentShorthand,\n        onClick: PropTypes.func,\n      })),\n    ]),\n\n    /** Adds some basic styling to accordion panels. */\n    styled: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    exclusive: true,\n  }\n\n  static autoControlledProps = [\n    'activeIndex',\n  ]\n\n  static _meta = {\n    name: 'Accordion',\n    type: META.TYPES.MODULE,\n  }\n\n  static Content = AccordionContent\n  static Title = AccordionTitle\n\n  state = {}\n\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      activeIndex: this.props.exclusive ? -1 : [-1],\n    }\n  }\n\n  handleTitleClick = (e, index) => {\n    const { onTitleClick, exclusive } = this.props\n    const { activeIndex } = this.state\n\n    let newIndex\n    if (exclusive) {\n      newIndex = index === activeIndex ? -1 : index\n    } else {\n      // check to see if index is in array, and remove it, if not then add it\n      newIndex = _.includes(activeIndex, index) ? _.without(activeIndex, index) : [...activeIndex, index]\n    }\n    this.trySetState({ activeIndex: newIndex })\n    if (onTitleClick) onTitleClick(e, index)\n  }\n\n  isIndexActive = (index) => {\n    const { exclusive } = this.props\n    const { activeIndex } = this.state\n    return exclusive ? activeIndex === index : _.includes(activeIndex, index)\n  }\n\n  renderChildren = () => {\n    const { children } = this.props\n    let titleIndex = 0\n    let contentIndex = 0\n\n    return Children.map(children, (child) => {\n      const isTitle = child.type === AccordionTitle\n      const isContent = child.type === AccordionContent\n\n      if (isTitle) {\n        const currentIndex = titleIndex\n        const isActive = _.has(child, 'props.active') ? child.props.active : this.isIndexActive(titleIndex)\n        const onClick = (e) => {\n          this.handleTitleClick(e, currentIndex)\n          if (child.props.onClick) child.props.onClick(e, currentIndex)\n        }\n        titleIndex++\n        return cloneElement(child, { ...child.props, active: isActive, onClick })\n      }\n\n      if (isContent) {\n        const isActive = _.has(child, 'props.active') ? child.props.active : this.isIndexActive(contentIndex)\n        contentIndex++\n        return cloneElement(child, { ...child.props, active: isActive })\n      }\n\n      return child\n    })\n  }\n\n  renderPanels = () => {\n    const { panels } = this.props\n    const children = []\n\n    _.each(panels, (panel, i) => {\n      const isActive = _.has(panel, 'active') ? panel.active : this.isIndexActive(i)\n      const onClick = (e) => {\n        this.handleTitleClick(e, i)\n        if (panel.onClick) panel.onClick(e, i)\n      }\n\n      // implement all methods of creating a key that are supported in factories\n      const key = panel.key\n        || _.isFunction(panel.childKey) && panel.childKey(panel)\n        || panel.childKey && panel.childKey\n        || panel.title\n\n      children.push(AccordionTitle.create({ active: isActive, onClick, key: `${key}-title`, content: panel.title }))\n      children.push(AccordionContent.create({ active: isActive, key: `${key}-content`, content: panel.content }))\n    })\n\n    return children\n  }\n\n  render() {\n    const {\n      className,\n      fluid,\n      inverted,\n      panels,\n      styled,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(styled, 'styled'),\n      'accordion',\n      className,\n    )\n    const rest = _.omit(this.props, _.keys(Accordion.propTypes))\n    const ElementType = getElementType(Accordion, this.props)\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {panels ? this.renderPanels() : this.renderChildren()}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Accordion/AccordionTitle.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n  createShorthandFactory,\n} from '../../lib'\n\nimport Icon from '../../elements/Icon'\n\n/**\n * A title sub-component for Accordion component.\n */\nexport default class AccordionTitle extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Whether or not the title is in the open state. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n  }\n\n  static _meta = {\n    name: 'AccordionTitle',\n    type: META.TYPES.MODULE,\n    parent: 'Accordion',\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      content,\n    } = this.props\n\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      'title',\n      className\n    )\n    const rest = getUnhandledProps(AccordionTitle, this.props)\n    const ElementType = getElementType(AccordionTitle, this.props)\n\n    if (_.isNil(content)) {\n      return (\n        <ElementType {...rest} className={classes} onClick={this.handleClick}>\n          {children}\n        </ElementType>\n      )\n    }\n\n    return (\n      <ElementType {...rest} className={classes} onClick={this.handleClick}>\n        <Icon name='dropdown' />\n        {content}\n      </ElementType>\n    )\n  }\n}\n\nAccordionTitle.create = createShorthandFactory(AccordionTitle, content => ({ content }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Accordion/index.js":"export default from './Accordion'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Checkbox/Checkbox.js":"import cx from 'classnames'\nimport _ from 'lodash/fp'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  createHTMLLabel,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  makeDebugger,\n  META,\n  useKeyOnly,\n} from '../../lib'\nconst debug = makeDebugger('checkbox')\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nexport default class Checkbox extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Whether or not checkbox is checked. */\n    checked: PropTypes.bool,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** The initial value of checked. */\n    defaultChecked: PropTypes.bool,\n\n    /** Whether or not checkbox is indeterminate. */\n    defaultIndeterminate: PropTypes.bool,\n\n    /** A checkbox can appear disabled and be unable to change states */\n    disabled: PropTypes.bool,\n\n    /** Removes padding for a label. Auto applied when there is no label. */\n    fitted: PropTypes.bool,\n\n    /** Whether or not checkbox is indeterminate. */\n    indeterminate: PropTypes.bool,\n\n    /** The text of the associated label element. */\n    label: customPropTypes.itemShorthand,\n\n    /** The HTML input name. */\n    name: PropTypes.string,\n\n    /**\n     * Called when the user attempts to change the checked state.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and proposed checked/indeterminate state.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * Called when the checkbox or label is clicked.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and current checked/indeterminate state.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Called when the user presses down on the mouse.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and current checked/indeterminate state.\n     */\n    onMouseDown: PropTypes.func,\n\n    /** Format as a radio element. This means it is an exclusive option. */\n    radio: customPropTypes.every([\n      PropTypes.bool,\n      customPropTypes.disallow(['slider', 'toggle']),\n    ]),\n\n    /** A checkbox can be read-only and unable to change states. */\n    readOnly: PropTypes.bool,\n\n    /** Format to emphasize the current selection state. */\n    slider: customPropTypes.every([\n      PropTypes.bool,\n      customPropTypes.disallow(['radio', 'toggle']),\n    ]),\n\n    /** Format to show an on or off choice. */\n    toggle: customPropTypes.every([\n      PropTypes.bool,\n      customPropTypes.disallow(['radio', 'slider']),\n    ]),\n\n    /** HTML input type, either checkbox or radio. */\n    type: PropTypes.oneOf(['checkbox', 'radio']),\n\n    /** The HTML input value. */\n    value: PropTypes.string,\n\n    /** A checkbox can receive focus. */\n    tabIndex: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }\n\n  static defaultProps = {\n    type: 'checkbox',\n  }\n\n  static autoControlledProps = [\n    'checked',\n    'indeterminate',\n  ]\n\n  static _meta = {\n    name: 'Checkbox',\n    type: META.TYPES.MODULE,\n  }\n\n  state = {}\n\n  componentDidMount() {\n    this.setIndeterminate()\n  }\n\n  componentDidUpdate() {\n    this.setIndeterminate()\n  }\n\n  canToggle = () => {\n    const { disabled, radio, readOnly } = this.props\n    const { checked } = this.state\n\n    return !disabled && !readOnly && !(radio && checked)\n  }\n\n  computeTabIndex = () => {\n    const { disabled, tabIndex } = this.props\n\n    if (!_.isNil(tabIndex)) return tabIndex\n    return disabled ? -1 : 0\n  }\n\n  handleInputRef = c => (this.inputRef = c)\n\n  handleClick = e => {\n    debug('handleClick()')\n\n    const { onChange, onClick } = this.props\n    const { checked, indeterminate } = this.state\n\n    if (this.canToggle()) {\n      if (onClick) onClick(e, { ...this.props, checked: !!checked, indeterminate: !!indeterminate })\n      if (onChange) onChange(e, { ...this.props, checked: !checked, indeterminate: false })\n\n      this.trySetState({ checked: !checked, indeterminate: false })\n    }\n  }\n\n  handleMouseDown = e => {\n    debug('handleMouseDown()')\n\n    const { onMouseDown } = this.props\n    const { checked, indeterminate } = this.state\n\n    _.invoke('focus', this.inputRef)\n    if (onMouseDown) onMouseDown(e, { ...this.props, checked: !!checked, indeterminate: !!indeterminate })\n  }\n\n  // Note: You can't directly set the indeterminate prop on the input, so we\n  // need to maintain a ref to the input and set it manually whenever the\n  // component updates.\n  setIndeterminate = () => {\n    const { indeterminate } = this.state\n\n    if (this.inputRef) this.inputRef.indeterminate = !!indeterminate\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      label,\n      name,\n      radio,\n      readOnly,\n      slider,\n      toggle,\n      type,\n      value,\n    } = this.props\n    const { checked, indeterminate } = this.state\n\n    const classes = cx(\n      'ui',\n      useKeyOnly(checked, 'checked'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(indeterminate, 'indeterminate'),\n      // auto apply fitted class to compact white space when there is no label\n      // https://semantic-ui.com/modules/checkbox.html#fitted\n      useKeyOnly(!label, 'fitted'),\n      useKeyOnly(radio, 'radio'),\n      useKeyOnly(readOnly, 'read-only'),\n      useKeyOnly(slider, 'slider'),\n      useKeyOnly(toggle, 'toggle'),\n      'checkbox',\n      className\n    )\n    const rest = getUnhandledProps(Checkbox, this.props)\n    const ElementType = getElementType(Checkbox, this.props)\n\n    return (\n      <ElementType\n        {...rest}\n        className={classes}\n        onChange={this.handleClick}\n        onClick={this.handleClick}\n        onMouseDown={this.handleMouseDown}\n      >\n        <input\n          checked={checked}\n          className='hidden'\n          name={name}\n          readOnly\n          ref={this.handleInputRef}\n          tabIndex={this.computeTabIndex()}\n          type={type}\n          value={value}\n        />\n        {/*\n         Heads Up!\n         Do not remove empty labels, they are required by SUI CSS\n         */}\n        {createHTMLLabel(label) || <label />}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Checkbox/index.js":"export default from './Checkbox'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dimmer/DimmerDimmable.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A dimmable sub-component for Dimmer.\n */\nfunction DimmerDimmable(props) {\n  const {\n    blurring,\n    className,\n    children,\n    dimmed,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(blurring, 'blurring'),\n    useKeyOnly(dimmed, 'dimmed'),\n    'dimmable',\n    className,\n  )\n  const rest = getUnhandledProps(DimmerDimmable, props)\n  const ElementType = getElementType(DimmerDimmable, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nDimmerDimmable._meta = {\n  name: 'DimmerDimmable',\n  type: META.TYPES.MODULE,\n  parent: 'Dimmer',\n}\n\nDimmerDimmable.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A dimmable element can blur its contents. */\n  blurring: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Controls whether or not the dim is displayed. */\n  dimmed: PropTypes.bool,\n}\n\nexport default DimmerDimmable\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dimmer/Dimmer.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  isBrowser,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport Portal from '../../addons/Portal'\nimport DimmerDimmable from './DimmerDimmable'\n\n/**\n * A dimmer hides distractions to focus attention on particular content.\n */\nexport default class Dimmer extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** An active dimmer will dim its parent container. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** A disabled dimmer cannot be activated */\n    disabled: PropTypes.bool,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Handles click outside Dimmer's content, but inside Dimmer area.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClickOutside: PropTypes.func,\n\n    /** A dimmer can be formatted to have its colors inverted. */\n    inverted: PropTypes.bool,\n\n    /** A dimmer can be formatted to be fixed to the page. */\n    page: PropTypes.bool,\n\n    /** A dimmer can be controlled with simple prop. */\n    simple: PropTypes.bool,\n  }\n\n  static _meta = {\n    name: 'Dimmer',\n    type: META.TYPES.MODULE,\n  }\n\n  static Dimmable = DimmerDimmable\n\n  handlePortalMount = () => {\n    if (isBrowser) document.body.classList.add('dimmed', 'dimmable')\n  }\n\n  handlePortalUnmount = () => {\n    if (isBrowser) document.body.classList.remove('dimmed', 'dimmable')\n  }\n\n  handleClick = (e) => {\n    const { onClick, onClickOutside } = this.props\n\n    if (onClick) onClick(e, this.props)\n    if (this.centerRef && (this.centerRef !== e.target && this.centerRef.contains(e.target))) return\n    if (onClickOutside) onClickOutside(e, this.props)\n  }\n\n  handleCenterRef = c => (this.centerRef = c)\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      content,\n      disabled,\n      inverted,\n      page,\n      simple,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      useKeyOnly(active, 'active transition visible'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(page, 'page'),\n      useKeyOnly(simple, 'simple'),\n      'dimmer',\n      className,\n    )\n    const rest = getUnhandledProps(Dimmer, this.props)\n    const ElementType = getElementType(Dimmer, this.props)\n\n    const childrenContent = _.isNil(children) ? content : children\n\n    const dimmerElement = (\n      <ElementType{...rest} className={classes} onClick={this.handleClick}>\n        {childrenContent && (\n          <div className='content'>\n            <div className='center' ref={this.handleCenterRef}>\n              {childrenContent}\n            </div>\n          </div>\n        )}\n      </ElementType>\n    )\n\n    if (page) {\n      return (\n        <Portal\n          closeOnEscape={false}\n          closeOnDocumentClick={false}\n          onMount={this.handlePortalMount}\n          onUnmount={this.handlePortalUnmount}\n          open={active}\n          openOnTriggerClick={false}\n        >\n          {dimmerElement}\n        </Portal>\n      )\n    }\n\n    return dimmerElement\n  }\n}\n\nDimmer.create = createShorthandFactory(Dimmer, value => ({ content: value }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dimmer/index.js":"export default from './Dimmer'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/DropdownDivider.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A dropdown menu can contain dividers to separate related content.\n */\nfunction DropdownDivider(props) {\n  const { className } = props\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(DropdownDivider, props)\n  const ElementType = getElementType(DropdownDivider, props)\n\n  return <ElementType {...rest} className={classes} />\n}\n\nDropdownDivider._meta = {\n  name: 'DropdownDivider',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE,\n}\n\nDropdownDivider.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default DropdownDivider\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/DropdownHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * A dropdown menu can contain a header.\n */\nfunction DropdownHeader(props) {\n  const {\n    children,\n    className,\n    content,\n    icon,\n  } = props\n\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(DropdownHeader, props)\n  const ElementType = getElementType(DropdownHeader, props)\n\n  if (!_.isNil(children)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon)}\n      {content}\n    </ElementType>\n  )\n}\n\nDropdownHeader._meta = {\n  name: 'DropdownHeader',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE,\n}\n\nDropdownHeader.propTypes = {\n  /** An element type to render as (string or function) */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand,\n}\n\nDropdownHeader.create = createShorthandFactory(DropdownHeader, content => ({ content }))\n\nexport default DropdownHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/DropdownItem.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  childrenUtils,\n  createShorthand,\n  customPropTypes,\n  META,\n  getElementType,\n  getUnhandledProps,\n  useKeyOnly,\n} from '../../lib'\nimport Flag from '../../elements/Flag'\nimport Icon from '../../elements/Icon'\nimport Image from '../../elements/Image'\nimport Label from '../../elements/Label'\n\n/**\n * An item sub-component for Dropdown component.\n */\nexport default class DropdownItem extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Style as the currently chosen item. */\n    active: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Shorthand for primary content. */\n    content: customPropTypes.contentShorthand,\n\n    /** Additional text with less emphasis. */\n    description: customPropTypes.itemShorthand,\n\n    /** A dropdown item can be disabled. */\n    disabled: PropTypes.bool,\n\n    /** Shorthand for Flag. */\n    flag: customPropTypes.itemShorthand,\n\n    /** Shorthand for Icon. */\n    icon: customPropTypes.itemShorthand,\n\n    /** Shorthand for Image. */\n    image: customPropTypes.itemShorthand,\n\n    /** Shorthand for Label. */\n    label: customPropTypes.itemShorthand,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * The item currently selected by keyboard shortcut.\n     * This is not the active item.\n     */\n    selected: PropTypes.bool,\n\n    /** Display text. */\n    text: customPropTypes.contentShorthand,\n\n    /** Stored value. */\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }\n\n  static _meta = {\n    name: 'DropdownItem',\n    parent: 'Dropdown',\n    type: META.TYPES.MODULE,\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      active,\n      children,\n      className,\n      content,\n      disabled,\n      description,\n      flag,\n      icon,\n      image,\n      label,\n      selected,\n      text,\n    } = this.props\n\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(selected, 'selected'),\n      'item',\n      className,\n    )\n    // add default dropdown icon if item contains another menu\n    const iconName = _.isNil(icon) ? childrenUtils.someByType(children, 'DropdownMenu') && 'dropdown' : icon\n    const rest = getUnhandledProps(DropdownItem, this.props)\n    const ElementType = getElementType(DropdownItem, this.props)\n    const ariaOptions = {\n      role: 'option',\n      'aria-disabled': disabled,\n      'aria-checked': active,\n      'aria-selected': selected,\n    }\n\n    if (!_.isNil(children)) {\n      return (\n        <ElementType {...rest} {...ariaOptions} className={classes} onClick={this.handleClick}>\n          {children}\n        </ElementType>\n      )\n    }\n\n    const flagElement = Flag.create(flag)\n    const iconElement = Icon.create(iconName)\n    const imageElement = Image.create(image)\n    const labelElement = Label.create(label)\n    const descriptionElement = createShorthand(\n      'span',\n      val => ({ children: val }),\n      description,\n      { defaultProps: { className: 'description' } }\n    )\n    const textElement = createShorthand(\n      'span',\n      val => ({ children: val }),\n      content || text,\n      { defaultProps: { className: 'text' } }\n    )\n\n    return (\n      <ElementType {...rest} {...ariaOptions} className={classes} onClick={this.handleClick}>\n        {imageElement}\n        {iconElement}\n        {flagElement}\n        {labelElement}\n        {descriptionElement}\n        {textElement}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/Dropdown.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Children, cloneElement } from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  isBrowser,\n  keyboardKey,\n  makeDebugger,\n  META,\n  objectDiff,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\nimport Label from '../../elements/Label'\nimport DropdownDivider from './DropdownDivider'\nimport DropdownItem from './DropdownItem'\nimport DropdownHeader from './DropdownHeader'\nimport DropdownMenu from './DropdownMenu'\n\nconst debug = makeDebugger('dropdown')\n\n/**\n * A dropdown allows a user to select a value from a series of options.\n * @see Form\n * @see Select\n * @see Menu\n */\nexport default class Dropdown extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Label prefixed to an option added by a user. */\n    additionLabel: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.string,\n    ]),\n\n    /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */\n    additionPosition: PropTypes.oneOf(['top', 'bottom']),\n\n    /**\n     * Allow user additions to the list of options (boolean).\n     * Requires the use of `selection`, `options` and `search`.\n     */\n    allowAdditions: customPropTypes.every([\n      customPropTypes.demand(['options', 'selection', 'search']),\n      PropTypes.bool,\n    ]),\n\n    /** A Dropdown can reduce its complexity. */\n    basic: PropTypes.bool,\n\n    /** Format the Dropdown to appear as a button. */\n    button: PropTypes.bool,\n\n    /** Primary content. */\n    children: customPropTypes.every([\n      customPropTypes.disallow(['options', 'selection']),\n      customPropTypes.givenProps(\n        { children: PropTypes.any.isRequired },\n        React.PropTypes.element.isRequired,\n      ),\n    ]),\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Whether or not the menu should close when the dropdown is blurred. */\n    closeOnBlur: PropTypes.bool,\n\n    /**\n     * Whether or not the menu should close when a value is selected from the dropdown.\n     * By default, multiple selection dropdowns will remain open on change, while single\n     * selection dropdowns will close on change.\n     */\n    closeOnChange: PropTypes.bool,\n\n    /** A compact dropdown has no minimum width. */\n    compact: PropTypes.bool,\n\n    /** Initial value of open. */\n    defaultOpen: PropTypes.bool,\n\n    /** Currently selected label in multi-select. */\n    defaultSelectedLabel: customPropTypes.every([\n      customPropTypes.demand(['multiple']),\n      PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    ]),\n\n    /** Initial value or value array if multiple. */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ])),\n    ]),\n\n    /** A disabled dropdown menu or item does not allow user interaction. */\n    disabled: PropTypes.bool,\n\n    /** An errored dropdown can alert a user to a problem. */\n    error: PropTypes.bool,\n\n    /** A dropdown menu can contain floated content. */\n    floating: PropTypes.bool,\n\n    /** A dropdown can take the full width of its parent */\n    fluid: PropTypes.bool,\n\n    /** A dropdown menu can contain a header. */\n    header: PropTypes.node,\n\n    /** Shorthand for Icon. */\n    icon: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.object,\n    ]),\n\n    /** A dropdown can be formatted to appear inline in other content. */\n    inline: PropTypes.bool,\n\n    /** A dropdown can be formatted as a Menu item. */\n    item: PropTypes.bool,\n\n    /** A dropdown can be labeled. */\n    labeled: PropTypes.bool,\n\n    /** A dropdown can show that it is currently loading data. */\n    loading: PropTypes.bool,\n\n    /** A selection dropdown can allow multiple selections. */\n    multiple: PropTypes.bool,\n\n    /** Name of the hidden input which holds the value. */\n    name: PropTypes.string,\n\n    /** Message to display when there are no results. */\n    noResultsMessage: PropTypes.string,\n\n    /**\n     * Called when a user adds a new item. Use this to update the options list.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and the new item's value.\n     */\n    onAddItem: PropTypes.func,\n\n    /**\n     * Called on blur.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Called when the user attempts to change the value.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and proposed value.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Called when a close event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * Called on focus.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Called when a multi-select label is clicked.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All label props.\n     */\n    onLabelClick: PropTypes.func,\n\n    /**\n     * Called on mousedown.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * Called when an open event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * Called on search input change.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {string} value - Current value of search input.\n     */\n    onSearchChange: PropTypes.func,\n\n    /** Controls whether or not the dropdown menu is displayed. */\n    open: PropTypes.bool,\n\n    /** Whether or not the menu should open when the dropdown is focused. */\n    openOnFocus: PropTypes.bool,\n\n    /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n    options: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      PropTypes.arrayOf(PropTypes.shape(DropdownItem.propTypes)),\n    ]),\n\n    /** Placeholder text. */\n    placeholder: PropTypes.string,\n\n    /** A dropdown can be formatted so that its menu is pointing. */\n    pointing: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right']),\n    ]),\n\n    /**\n     * Mapped over the active items and returns shorthand for the active item Labels.\n     * Only applies to `multiple` Dropdowns.\n     *\n     * @param {object} item - A currently active dropdown item.\n     * @param {number} index - The current index.\n     * @param {object} defaultLabelProps - The default props for an active item Label.\n     * @returns {*} Shorthand for a Label.\n     */\n    renderLabel: PropTypes.func,\n\n    /** A dropdown can have its menu scroll. */\n    scrolling: PropTypes.bool,\n\n    /**\n     * A selection dropdown can allow a user to search through a large list of choices.\n     * Pass a function here to replace the default search.\n     */\n    search: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.func,\n    ]),\n\n    // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?\n\n    /** Define whether the highlighted item should be selected on blur. */\n    selectOnBlur: PropTypes.bool,\n\n    /** Currently selected label in multi-select. */\n    selectedLabel: customPropTypes.every([\n      customPropTypes.demand(['multiple']),\n      PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    ]),\n\n    /** A dropdown can be used to select between choices in a form. */\n    selection: customPropTypes.every([\n      customPropTypes.disallow(['children']),\n      customPropTypes.demand(['options']),\n      PropTypes.bool,\n    ]),\n\n    /** A simple dropdown can open without Javascript. */\n    simple: PropTypes.bool,\n\n    /** A dropdown can receive focus. */\n    tabIndex: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /** The text displayed in the dropdown, usually for the active item. */\n    text: PropTypes.string,\n\n    /** Custom element to trigger the menu to become visible. Takes place of 'text'. */\n    trigger: customPropTypes.every([\n      customPropTypes.disallow(['selection', 'text']),\n      PropTypes.node,\n    ]),\n\n    /** Current value or value array if multiple. Creates a controlled component. */\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ])),\n    ]),\n  }\n\n  static defaultProps = {\n    additionLabel: 'Add ',\n    additionPosition: 'top',\n    icon: 'dropdown',\n    noResultsMessage: 'No results found.',\n    renderLabel: ({ text }) => text,\n    selectOnBlur: true,\n    openOnFocus: true,\n    closeOnBlur: true,\n  }\n\n  static autoControlledProps = [\n    'open',\n    'value',\n    'selectedLabel',\n  ]\n\n  static _meta = {\n    name: 'Dropdown',\n    type: META.TYPES.MODULE,\n  }\n\n  static Divider = DropdownDivider\n  static Header = DropdownHeader\n  static Item = DropdownItem\n  static Menu = DropdownMenu\n\n  componentWillMount() {\n    if (super.componentWillMount) super.componentWillMount()\n    debug('componentWillMount()')\n    const { open, value } = this.state\n\n    this.setValue(value)\n    if (open) this.open()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(nextProps, this.props) || !_.isEqual(nextState, this.state)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    super.componentWillReceiveProps(nextProps)\n    debug('componentWillReceiveProps()')\n    // TODO objectDiff still runs in prod, stop it\n    debug('to props:', objectDiff(this.props, nextProps))\n\n    /* eslint-disable no-console */\n    if (process.env.NODE_ENV !== 'production') {\n      // in development, validate value type matches dropdown type\n      const isNextValueArray = Array.isArray(nextProps.value)\n      const hasValue = _.has(nextProps, 'value')\n\n      if (hasValue && nextProps.multiple && !isNextValueArray) {\n        console.error(\n          'Dropdown `value` must be an array when `multiple` is set.' +\n          ` Received type: \\`${Object.prototype.toString.call(nextProps.value)}\\`.`,\n        )\n      } else if (hasValue && !nextProps.multiple && isNextValueArray) {\n        console.error(\n          'Dropdown `value` must not be an array when `multiple` is not set.' +\n          ' Either set `multiple={true}` or use a string or number value.'\n        )\n      }\n    }\n    /* eslint-enable no-console */\n\n    if (!_.isEqual(nextProps.value, this.props.value)) {\n      debug('value changed, setting', nextProps.value)\n      this.setValue(nextProps.value)\n    }\n\n    if (!_.isEqual(nextProps.options, this.props.options)) {\n      this.setSelectedIndex(undefined, nextProps.options)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line complexity\n    debug('componentDidUpdate()')\n    // TODO objectDiff still runs in prod, stop it\n    debug('to state:', objectDiff(prevState, this.state))\n\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n\n    // focused / blurred\n    if (!prevState.focus && this.state.focus) {\n      debug('dropdown focused')\n      if (!this.isMouseDown) {\n        const { openOnFocus } = this.props\n        debug('mouse is not down, opening')\n        if (openOnFocus) this.open()\n      }\n      if (!this.state.open) {\n        document.addEventListener('keydown', this.openOnArrow)\n        document.addEventListener('keydown', this.openOnSpace)\n      } else {\n        document.addEventListener('keydown', this.moveSelectionOnKeyDown)\n        document.addEventListener('keydown', this.selectItemOnEnter)\n      }\n      document.addEventListener('keydown', this.removeItemOnBackspace)\n    } else if (prevState.focus && !this.state.focus) {\n      debug('dropdown blurred')\n      const { closeOnBlur } = this.props\n      if (!this.isMouseDown && closeOnBlur) {\n        debug('mouse is not down and closeOnBlur=true, closing')\n        this.close()\n      }\n      document.removeEventListener('keydown', this.openOnArrow)\n      document.removeEventListener('keydown', this.openOnSpace)\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.removeEventListener('keydown', this.selectItemOnEnter)\n      document.removeEventListener('keydown', this.removeItemOnBackspace)\n    }\n\n    // opened / closed\n    if (!prevState.open && this.state.open) {\n      debug('dropdown opened')\n      document.addEventListener('keydown', this.closeOnEscape)\n      document.addEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.addEventListener('keydown', this.selectItemOnEnter)\n      document.addEventListener('keydown', this.removeItemOnBackspace)\n      document.addEventListener('click', this.closeOnDocumentClick)\n      document.removeEventListener('keydown', this.openOnArrow)\n      document.removeEventListener('keydown', this.openOnSpace)\n      this.scrollSelectedItemIntoView()\n    } else if (prevState.open && !this.state.open) {\n      debug('dropdown closed')\n      this.handleClose()\n      document.removeEventListener('keydown', this.closeOnEscape)\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.removeEventListener('keydown', this.selectItemOnEnter)\n      document.removeEventListener('click', this.closeOnDocumentClick)\n      if (!this.state.focus) {\n        document.removeEventListener('keydown', this.removeItemOnBackspace)\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    debug('componentWillUnmount()')\n\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n\n    document.removeEventListener('keydown', this.openOnArrow)\n    document.removeEventListener('keydown', this.openOnSpace)\n    document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n    document.removeEventListener('keydown', this.selectItemOnEnter)\n    document.removeEventListener('keydown', this.removeItemOnBackspace)\n    document.removeEventListener('keydown', this.closeOnEscape)\n    document.removeEventListener('click', this.closeOnDocumentClick)\n  }\n\n  // ----------------------------------------\n  // Document Event Handlers\n  // ----------------------------------------\n\n  // onChange needs to receive a value\n  // can't rely on props.value if we are controlled\n  handleChange = (e, value) => {\n    debug('handleChange()')\n    debug(value)\n    const { onChange } = this.props\n    if (onChange) onChange(e, { ...this.props, value })\n  }\n\n  closeOnChange = (e) => {\n    const { closeOnChange, multiple } = this.props\n    const shouldClose = _.isUndefined(closeOnChange)\n      ? !multiple\n      : closeOnChange\n\n    if (shouldClose) this.close(e)\n  }\n\n  closeOnEscape = (e) => {\n    if (keyboardKey.getCode(e) !== keyboardKey.Escape) return\n    e.preventDefault()\n    this.close()\n  }\n\n  moveSelectionOnKeyDown = (e) => {\n    debug('moveSelectionOnKeyDown()')\n    debug(keyboardKey.getName(e))\n    switch (keyboardKey.getCode(e)) {\n      case keyboardKey.ArrowDown:\n        e.preventDefault()\n        this.moveSelectionBy(1)\n        break\n      case keyboardKey.ArrowUp:\n        e.preventDefault()\n        this.moveSelectionBy(-1)\n        break\n      default:\n        break\n    }\n  }\n\n  openOnSpace = (e) => {\n    debug('openOnSpace()')\n\n    if (keyboardKey.getCode(e) !== keyboardKey.Spacebar) return\n    if (this.state.open) return\n\n    e.preventDefault()\n\n    this.open(e)\n  }\n\n  openOnArrow = (e) => {\n    debug('openOnArrow()')\n\n    const code = keyboardKey.getCode(e)\n    if (!_.includes([keyboardKey.ArrowDown, keyboardKey.ArrowUp], code)) return\n    if (this.state.open) return\n\n    e.preventDefault()\n\n    this.open(e)\n  }\n\n  makeSelectedItemActive = (e) => {\n    const { open } = this.state\n    const { multiple, onAddItem } = this.props\n    const item = this.getSelectedItem()\n    const value = _.get(item, 'value')\n\n    // prevent selecting null if there was no selected item value\n    // prevent selecting duplicate items when the dropdown is closed\n    if (!value || !open) return\n\n    // notify the onAddItem prop if this is a new value\n    if (onAddItem && item['data-additional']) {\n      onAddItem(e, { ...this.props, value })\n    }\n    // notify the onChange prop that the user is trying to change value\n    if (multiple) {\n      // state value may be undefined\n      const newValue = _.union(this.state.value, [value])\n      this.setValue(newValue)\n      this.handleChange(e, newValue)\n    } else {\n      this.setValue(value)\n      this.handleChange(e, value)\n    }\n  }\n\n  selectItemOnEnter = (e) => {\n    debug('selectItemOnEnter()')\n    debug(keyboardKey.getName(e))\n    if (keyboardKey.getCode(e) !== keyboardKey.Enter) return\n    e.preventDefault()\n\n    this.makeSelectedItemActive(e)\n    this.closeOnChange(e)\n  }\n\n  removeItemOnBackspace = (e) => {\n    debug('removeItemOnBackspace()')\n    debug(keyboardKey.getName(e))\n    if (keyboardKey.getCode(e) !== keyboardKey.Backspace) return\n\n    const { multiple, search } = this.props\n    const { searchQuery, value } = this.state\n\n    if (searchQuery || !search || !multiple || _.isEmpty(value)) return\n\n    e.preventDefault()\n\n    // remove most recent value\n    const newValue = _.dropRight(value)\n\n    this.setValue(newValue)\n    this.handleChange(e, newValue)\n  }\n\n  closeOnDocumentClick = (e) => {\n    debug('closeOnDocumentClick()')\n    debug(e)\n\n    // If event happened in the dropdown, ignore it\n    if (this.ref && _.isFunction(this.ref.contains) && this.ref.contains(e.target)) return\n\n    this.close()\n  }\n\n  // ----------------------------------------\n  // Component Event Handlers\n  // ----------------------------------------\n\n  handleMouseDown = (e) => {\n    debug('handleMouseDown()')\n    const { onMouseDown } = this.props\n    if (onMouseDown) onMouseDown(e, this.props)\n    this.isMouseDown = true\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleDocumentMouseUp = () => {\n    debug('handleDocumentMouseUp()')\n    this.isMouseDown = false\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleClick = (e) => {\n    debug('handleClick()', e)\n    const { onClick } = this.props\n    if (onClick) onClick(e, this.props)\n    // prevent closeOnDocumentClick()\n    e.stopPropagation()\n    this.toggle(e)\n  }\n\n  handleItemClick = (e, item) => {\n    debug('handleItemClick()')\n    debug(item)\n    const { multiple, onAddItem } = this.props\n    const { value } = item\n\n    // prevent toggle() in handleClick()\n    e.stopPropagation()\n    // prevent closeOnDocumentClick() if multiple or item is disabled\n    if (multiple || item.disabled) {\n      e.nativeEvent.stopImmediatePropagation()\n    }\n\n    if (item.disabled) return\n\n    // notify the onAddItem prop if this is a new value\n    if (onAddItem && item['data-additional']) {\n      onAddItem(e, { ...this.props, value })\n    }\n\n    // notify the onChange prop that the user is trying to change value\n    if (multiple) {\n      const newValue = _.union(this.state.value, [value])\n      this.setValue(newValue)\n      this.handleChange(e, newValue)\n    } else {\n      this.setValue(value)\n      this.handleChange(e, value)\n    }\n    this.closeOnChange(e)\n  }\n\n  handleFocus = (e) => {\n    debug('handleFocus()')\n    const { onFocus } = this.props\n    const { focus } = this.state\n    if (focus) return\n    if (onFocus) onFocus(e, this.props)\n    this.setState({ focus: true })\n  }\n\n  handleBlur = (e) => {\n    debug('handleBlur()')\n    const { closeOnBlur, multiple, onBlur, selectOnBlur } = this.props\n    // do not \"blur\" when the mouse is down inside of the Dropdown\n    if (this.isMouseDown) return\n    if (onBlur) onBlur(e, this.props)\n    if (selectOnBlur && !multiple) {\n      this.makeSelectedItemActive(e)\n      if (closeOnBlur) this.close()\n    }\n    this.setState({ focus: false, searchQuery: '' })\n  }\n\n  handleSearchChange = (e) => {\n    debug('handleSearchChange()')\n    debug(e.target.value)\n    // prevent propagating to this.props.onChange()\n    e.stopPropagation()\n    const { search, onSearchChange } = this.props\n    const { open } = this.state\n    const newQuery = e.target.value\n\n    if (onSearchChange) onSearchChange(e, newQuery)\n\n    // open search dropdown on search query\n    if (search && newQuery && !open) this.open()\n\n    this.setState({\n      selectedIndex: 0,\n      searchQuery: newQuery,\n    })\n  }\n\n  // ----------------------------------------\n  // Getters\n  // ----------------------------------------\n\n  // There are times when we need to calculate the options based on a value\n  // that hasn't yet been persisted to state.\n  getMenuOptions = (value = this.state.value, options = this.props.options) => {\n    const { multiple, search, allowAdditions, additionPosition, additionLabel } = this.props\n    const { searchQuery } = this.state\n\n    let filteredOptions = options\n\n    // filter out active options\n    if (multiple) {\n      filteredOptions = _.filter(filteredOptions, opt => !_.includes(value, opt.value))\n    }\n\n    // filter by search query\n    if (search && searchQuery) {\n      if (_.isFunction(search)) {\n        filteredOptions = search(filteredOptions, searchQuery)\n      } else {\n        const re = new RegExp(_.escapeRegExp(searchQuery), 'i')\n        filteredOptions = _.filter(filteredOptions, (opt) => re.test(opt.text))\n      }\n    }\n\n    // insert the \"add\" item\n    if (allowAdditions && search && searchQuery && !_.some(filteredOptions, { text: searchQuery })) {\n      const additionLabelElement = React.isValidElement(additionLabel)\n        ? React.cloneElement(additionLabel, { key: 'label' })\n        : additionLabel || ''\n\n      const addItem = {\n        // by using an array, we can pass multiple elements, but when doing so\n        // we must specify a `key` for React to know which one is which\n        text: [\n          additionLabelElement,\n          <b key='addition'>{searchQuery}</b>,\n        ],\n        value: searchQuery,\n        className: 'addition',\n        'data-additional': true,\n      }\n      if (additionPosition === 'top') filteredOptions.unshift(addItem)\n      else filteredOptions.push(addItem)\n    }\n\n    return filteredOptions\n  }\n\n  getSelectedItem = () => {\n    const { selectedIndex } = this.state\n    const options = this.getMenuOptions()\n\n    return _.get(options, `[${selectedIndex}]`)\n  }\n\n  getEnabledIndices = (givenOptions) => {\n    const options = givenOptions || this.getMenuOptions()\n\n    return _.reduce(options, (memo, item, index) => {\n      if (!item.disabled) memo.push(index)\n      return memo\n    }, [])\n  }\n\n  getItemByValue = (value) => {\n    const { options } = this.props\n\n    return _.find(options, { value })\n  }\n\n  getMenuItemIndexByValue = (value, givenOptions) => {\n    const options = givenOptions || this.getMenuOptions()\n\n    return _.findIndex(options, ['value', value])\n  }\n\n  getDropdownAriaOptions = (ElementType) => {\n    const { loading, disabled, search, multiple } = this.props\n    const { open } = this.state\n    const ariaOptions = {\n      role: search ? 'combobox' : 'listbox',\n      'aria-busy': loading,\n      'aria-disabled': disabled,\n      'aria-expanded': !!open,\n    }\n    if (ariaOptions.role === 'listbox') {\n      ariaOptions['aria-multiselectable'] = multiple\n    }\n    return ariaOptions\n  }\n\n  getDropdownMenuAriaOptions() {\n    const { search, multiple } = this.props\n    const ariaOptions = {}\n\n    if (search) {\n      ariaOptions['aria-multiselectable'] = multiple\n      ariaOptions.role = 'listbox'\n    }\n    return ariaOptions\n  }\n\n  // ----------------------------------------\n  // Setters\n  // ----------------------------------------\n\n  setValue = (value) => {\n    debug('setValue()')\n    debug('value', value)\n    const newState = {\n      searchQuery: '',\n    }\n\n    const { multiple, search } = this.props\n    if (multiple && search && this.searchRef) this.searchRef.focus()\n\n    this.trySetState({ value }, newState)\n    this.setSelectedIndex(value)\n  }\n\n  setSelectedIndex = (value = this.state.value, optionsProps = this.props.options) => {\n    const { multiple } = this.props\n    const { selectedIndex } = this.state\n    const options = this.getMenuOptions(value, optionsProps)\n    const enabledIndicies = this.getEnabledIndices(options)\n\n    let newSelectedIndex\n\n    // update the selected index\n    if (!selectedIndex || selectedIndex < 0) {\n      const firstIndex = enabledIndicies[0]\n\n      // Select the currently active item, if none, use the first item.\n      // Multiple selects remove active items from the list,\n      // their initial selected index should be 0.\n      newSelectedIndex = multiple\n        ? firstIndex\n        : this.getMenuItemIndexByValue(value, options) || enabledIndicies[0]\n    } else if (multiple) {\n      // multiple selects remove options from the menu as they are made active\n      // keep the selected index within range of the remaining items\n      if (selectedIndex >= options.length - 1) {\n        newSelectedIndex = enabledIndicies[enabledIndicies.length - 1]\n      }\n    } else {\n      const activeIndex = this.getMenuItemIndexByValue(value, options)\n\n      // regular selects can only have one active item\n      // set the selected index to the currently active item\n      newSelectedIndex = _.includes(enabledIndicies, activeIndex) ? activeIndex : undefined\n    }\n\n    if (!newSelectedIndex || newSelectedIndex < 0) {\n      newSelectedIndex = enabledIndicies[0]\n    }\n\n    this.setState({ selectedIndex: newSelectedIndex })\n  }\n\n  handleLabelClick = (e, labelProps) => {\n    debug('handleLabelClick()')\n    // prevent focusing search input on click\n    e.stopPropagation()\n\n    this.setState({ selectedLabel: labelProps.value })\n\n    const { onLabelClick } = this.props\n    if (onLabelClick) onLabelClick(e, labelProps)\n  }\n\n  handleLabelRemove = (e, labelProps) => {\n    debug('handleLabelRemove()')\n    // prevent focusing search input on click\n    e.stopPropagation()\n    const { value } = this.state\n    const newValue = _.without(value, labelProps.value)\n    debug('label props:', labelProps)\n    debug('current value:', value)\n    debug('remove value:', labelProps.value)\n    debug('new value:', newValue)\n\n    this.setValue(newValue)\n    this.handleChange(e, newValue)\n  }\n\n  moveSelectionBy = (offset, startIndex = this.state.selectedIndex) => {\n    debug('moveSelectionBy()')\n    debug(`offset: ${offset}`)\n\n    const options = this.getMenuOptions()\n    const lastIndex = options.length - 1\n\n    // Prevent infinite loop\n    if (_.every(options, 'disabled')) return\n\n    // next is after last, wrap to beginning\n    // next is before first, wrap to end\n    let nextIndex = startIndex + offset\n    if (nextIndex > lastIndex) nextIndex = 0\n    else if (nextIndex < 0) nextIndex = lastIndex\n\n    if (options[nextIndex].disabled) return this.moveSelectionBy(offset, nextIndex)\n\n    this.setState({ selectedIndex: nextIndex })\n    this.scrollSelectedItemIntoView()\n  }\n\n  // ----------------------------------------\n  // Refs\n  // ----------------------------------------\n\n  handleSearchRef = c => (this.searchRef = c)\n\n  handleSizerRef = c => (this.sizerRef = c)\n\n  handleRef = c => (this.ref = c)\n\n  // ----------------------------------------\n  // Behavior\n  // ----------------------------------------\n\n  scrollSelectedItemIntoView = () => {\n    debug('scrollSelectedItemIntoView()')\n    if (!this.ref) return\n    const menu = this.ref.querySelector('.menu.visible')\n    if (!menu) return\n    const item = menu.querySelector('.item.selected')\n    if (!item) return\n    debug(`menu: ${menu}`)\n    debug(`item: ${item}`)\n    const isOutOfUpperView = item.offsetTop < menu.scrollTop\n    const isOutOfLowerView = (item.offsetTop + item.clientHeight) > menu.scrollTop + menu.clientHeight\n\n    if (isOutOfUpperView) {\n      menu.scrollTop = item.offsetTop\n    } else if (isOutOfLowerView) {\n      menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight\n    }\n  }\n\n  open = (e) => {\n    debug('open()')\n\n    const { disabled, onOpen, search } = this.props\n    if (disabled) return\n    if (search && this.searchRef) this.searchRef.focus()\n    if (onOpen) onOpen(e, this.props)\n\n    this.trySetState({ open: true })\n    this.scrollSelectedItemIntoView()\n  }\n\n  close = (e) => {\n    debug('close()')\n\n    const { onClose } = this.props\n    if (onClose) onClose(e, this.props)\n\n    this.trySetState({ open: false })\n  }\n\n  handleClose = () => {\n    debug('handleClose()')\n    const hasSearchFocus = document.activeElement === this.searchRef\n    const hasDropdownFocus = document.activeElement === this.ref\n    const hasFocus = hasSearchFocus || hasDropdownFocus\n    // https://github.com/Semantic-Org/Semantic-UI-React/issues/627\n    // Blur the Dropdown on close so it is blurred after selecting an item.\n    // This is to prevent it from re-opening when switching tabs after selecting an item.\n    if (!hasSearchFocus) {\n      this.ref.blur()\n    }\n\n    // We need to keep the virtual model in sync with the browser focus change\n    // https://github.com/Semantic-Org/Semantic-UI-React/issues/692\n    this.setState({ focus: hasFocus })\n  }\n\n  toggle = (e) => {\n    if (!this.state.open) {\n      this.open(e)\n      return\n    }\n\n    const { search } = this.props\n    const options = this.getMenuOptions()\n\n    if (search && _.isEmpty(options)) {\n      e.preventDefault()\n      return\n    }\n\n    this.close(e)\n  }\n\n  // ----------------------------------------\n  // Render\n  // ----------------------------------------\n\n  renderText = () => {\n    const { multiple, placeholder, search, text } = this.props\n    const { searchQuery, value, open } = this.state\n    const hasValue = multiple\n      ? !_.isEmpty(value)\n      : !_.isNil(value) && value !== ''\n\n    const classes = cx(\n      placeholder && !hasValue && 'default',\n      'text',\n      search && searchQuery && 'filtered'\n    )\n    let _text = placeholder\n    if (searchQuery) {\n      _text = null\n    } else if (text) {\n      _text = text\n    } else if (open && !multiple) {\n      _text = _.get(this.getSelectedItem(), 'text')\n    } else if (hasValue) {\n      _text = _.get(this.getItemByValue(value), 'text')\n    }\n\n    return <div className={classes}>{_text}</div>\n  }\n\n  renderHiddenInput = () => {\n    debug('renderHiddenInput()')\n    const { value } = this.state\n    const { multiple, name, options, selection } = this.props\n    debug(`name:      ${name}`)\n    debug(`selection: ${selection}`)\n    debug(`value:     ${value}`)\n    if (!selection) return null\n\n    // a dropdown without an active item will have an empty string value\n    return (\n      <select type='hidden' aria-hidden='true' name={name} value={value} multiple={multiple}>\n        <option value='' />\n        {_.map(options, option => (\n          <option key={option.value} value={option.value}>{option.text}</option>\n        ))}\n      </select>\n    )\n  }\n\n  renderSearchInput = () => {\n    const { disabled, search, name, tabIndex } = this.props\n    const { searchQuery } = this.state\n\n    if (!search) return null\n\n    // tabIndex\n    let computedTabIndex\n    if (!_.isNil(tabIndex)) computedTabIndex = tabIndex\n    else computedTabIndex = disabled ? -1 : 0\n\n    // resize the search input, temporarily show the sizer so we can measure it\n    let searchWidth\n    if (this.sizerRef && searchQuery) {\n      this.sizerRef.style.display = 'inline'\n      this.sizerRef.textContent = searchQuery\n      searchWidth = Math.ceil(this.sizerRef.getBoundingClientRect().width)\n      this.sizerRef.style.removeProperty('display')\n    }\n\n    return (\n      <input\n        value={searchQuery}\n        type='text'\n        aria-autocomplete='list'\n        onChange={this.handleSearchChange}\n        className='search'\n        name={[name, 'search'].join('-')}\n        autoComplete='off'\n        tabIndex={computedTabIndex}\n        style={{ width: searchWidth }}\n        ref={this.handleSearchRef}\n      />\n    )\n  }\n\n  renderSearchSizer = () => {\n    const { search, multiple } = this.props\n\n    if (!(search && multiple)) return null\n    return <span className='sizer' ref={this.handleSizerRef} />\n  }\n\n  renderLabels = () => {\n    debug('renderLabels()')\n    const { multiple, renderLabel } = this.props\n    const { selectedLabel, value } = this.state\n    if (!multiple || _.isEmpty(value)) {\n      return\n    }\n    const selectedItems = _.map(value, this.getItemByValue)\n    debug('selectedItems', selectedItems)\n\n    // if no item could be found for a given state value the selected item will be undefined\n    // compact the selectedItems so we only have actual objects left\n    return _.map(_.compact(selectedItems), (item, index) => {\n      const defaultProps = {\n        active: item.value === selectedLabel,\n        as: 'a',\n        key: item.value,\n        onClick: this.handleLabelClick,\n        onRemove: this.handleLabelRemove,\n        value: item.value,\n      }\n\n      return Label.create(\n        renderLabel(item, index, defaultProps),\n        { defaultProps }\n      )\n    })\n  }\n\n  renderOptions = () => {\n    const { multiple, search, noResultsMessage } = this.props\n    const { selectedIndex, value } = this.state\n    const options = this.getMenuOptions()\n\n    if (noResultsMessage !== null && search && _.isEmpty(options)) {\n      return <div className='message'>{noResultsMessage}</div>\n    }\n\n    const isActive = multiple\n      ? optValue => _.includes(value, optValue)\n      : optValue => optValue === value\n\n    return _.map(options, (opt, i) => (\n      <DropdownItem\n        key={`${opt.value}-${i}`}\n        active={isActive(opt.value)}\n        onClick={this.handleItemClick}\n        selected={selectedIndex === i}\n        {...opt}\n        // Needed for handling click events on disabled items\n        style={{ ...opt.style, pointerEvents: 'all' }}\n      />\n    ))\n  }\n\n  renderMenu = () => {\n    const { children, header } = this.props\n    const { open } = this.state\n    const menuClasses = open ? 'visible' : ''\n    const ariaOptions = this.getDropdownMenuAriaOptions()\n\n    // single menu child\n    if (!_.isNil(children)) {\n      const menuChild = Children.only(children)\n      const className = cx(menuClasses, menuChild.props.className)\n\n      return cloneElement(menuChild, { className, ...ariaOptions })\n    }\n\n    return (\n      <DropdownMenu {...ariaOptions} className={menuClasses}>\n        {DropdownHeader.create(header)}\n        {this.renderOptions()}\n      </DropdownMenu>\n    )\n  }\n\n  render() {\n    debug('render()')\n    debug('props', this.props)\n    debug('state', this.state)\n    const { open } = this.state\n\n    const {\n      basic,\n      button,\n      className,\n      compact,\n      fluid,\n      floating,\n      icon,\n      inline,\n      item,\n      labeled,\n      multiple,\n      pointing,\n      search,\n      selection,\n      simple,\n      loading,\n      error,\n      disabled,\n      scrolling,\n      tabIndex,\n      trigger,\n    } = this.props\n\n    // Classes\n    const classes = cx(\n      'ui',\n      useKeyOnly(open, 'active visible'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(error, 'error'),\n      useKeyOnly(loading, 'loading'),\n\n      useKeyOnly(basic, 'basic'),\n      useKeyOnly(button, 'button'),\n      useKeyOnly(compact, 'compact'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(floating, 'floating'),\n      useKeyOnly(inline, 'inline'),\n      // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues\n      // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229\n      // TODO: the icon class is only required when a dropdown is a button\n      // useKeyOnly(icon, 'icon'),\n      useKeyOnly(labeled, 'labeled'),\n      useKeyOnly(item, 'item'),\n      useKeyOnly(multiple, 'multiple'),\n      useKeyOnly(search, 'search'),\n      useKeyOnly(selection, 'selection'),\n      useKeyOnly(simple, 'simple'),\n      useKeyOnly(scrolling, 'scrolling'),\n\n      useKeyOrValueAndKey(pointing, 'pointing'),\n      className,\n      'dropdown',\n    )\n    const rest = getUnhandledProps(Dropdown, this.props)\n    const ElementType = getElementType(Dropdown, this.props)\n    const ariaOptions = this.getDropdownAriaOptions(ElementType, this.props)\n\n    let computedTabIndex\n    if (!_.isNil(tabIndex)) {\n      computedTabIndex = tabIndex\n    } else if (!search) {\n      // don't set a root node tabIndex as the search input has its own tabIndex\n      computedTabIndex = disabled ? -1 : 0\n    }\n\n    return (\n      <ElementType\n        {...rest}\n        {...ariaOptions}\n        className={classes}\n        onBlur={this.handleBlur}\n        onClick={this.handleClick}\n        onMouseDown={this.handleMouseDown}\n        onFocus={this.handleFocus}\n        onChange={this.handleChange}\n        tabIndex={computedTabIndex}\n        ref={this.handleRef}\n      >\n        {this.renderHiddenInput()}\n        {this.renderLabels()}\n        {this.renderSearchInput()}\n        {this.renderSearchSizer()}\n        {trigger || this.renderText()}\n        {Icon.create(icon)}\n        {this.renderMenu()}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/DropdownMenu.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A dropdown menu can contain a menu.\n */\nfunction DropdownMenu(props) {\n  const { children, className, scrolling } = props\n  const classes = cx(\n    useKeyOnly(scrolling, 'scrolling'),\n    'menu transition',\n    className,\n  )\n  const rest = getUnhandledProps(DropdownMenu, props)\n  const ElementType = getElementType(DropdownMenu, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nDropdownMenu._meta = {\n  name: 'DropdownMenu',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE,\n}\n\nDropdownMenu.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A dropdown menu can scroll. */\n  scrolling: PropTypes.bool,\n}\n\nexport default DropdownMenu\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Dropdown/index.js":"export default from './Dropdown'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Embed/Embed.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * An embed displays content from other websites like YouTube videos or Google Maps.\n */\nexport default class Embed extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** An embed can be active. */\n    active: PropTypes.bool,\n\n    /** An embed can specify an alternative aspect ratio. */\n    aspectRatio: PropTypes.oneOf(['4:3', '16:9', '21:9']),\n\n     /** Setting to true or false will force autoplay. */\n    autoplay: customPropTypes.every([\n      customPropTypes.demand(['source']),\n      PropTypes.bool,\n    ]),\n\n    /** Whether to show networks branded UI like title cards, or after video calls to action. */\n    brandedUI: customPropTypes.every([\n      customPropTypes.demand(['source']),\n      PropTypes.bool,\n    ]),\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Specifies a default chrome color with Vimeo or YouTube. */\n    color: customPropTypes.every([\n      customPropTypes.demand(['source']),\n      PropTypes.string,\n    ]),\n\n    /** Initial value of active. */\n    defaultActive: PropTypes.bool,\n\n    /** Whether to show networks branded UI like title cards, or after video calls to action. */\n    hd: customPropTypes.every([\n      customPropTypes.demand(['source']),\n      PropTypes.bool,\n    ]),\n\n     /** Specifies an icon to use with placeholder content. */\n    icon: customPropTypes.itemShorthand,\n\n    /** Specifies an id for source. */\n    id: customPropTypes.every([\n      customPropTypes.demand(['source']),\n      PropTypes.string,\n    ]),\n\n    /**\n     * Сalled on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and proposed value.\n     */\n    onClick: PropTypes.func,\n\n    /** A placeholder image for embed. */\n    placeholder: PropTypes.string,\n\n    /** Specifies a source to use. */\n    source: customPropTypes.every([\n      customPropTypes.disallow(['sourceUrl']),\n      PropTypes.oneOf(['youtube', 'vimeo']),\n    ]),\n\n    /** Specifies a url to use for embed. */\n    url: customPropTypes.every([\n      customPropTypes.disallow(['source']),\n      PropTypes.string,\n    ]),\n  }\n\n  static autoControlledProps = [\n    'active',\n  ]\n\n  static defaultProps = {\n    icon: 'video play',\n  }\n\n  static _meta = {\n    name: 'Embed',\n    type: META.TYPES.MODULE,\n  }\n\n  state = {}\n\n  getSrc() {\n    const {\n      autoplay = true,\n      brandedUI = false,\n      color = '#444444',\n      hd = true,\n      id,\n      source,\n      url,\n    } = this.props\n\n    if (source === 'youtube') {\n      return [\n        `//www.youtube.com/embed/${id}`,\n        '?autohide=true',\n        `&amp;autoplay=${autoplay}`,\n        `&amp;color=${encodeURIComponent(color)}`,\n        `&amp;hq=${hd}`,\n        '&amp;jsapi=false',\n        `&amp;modestbranding=${brandedUI}`,\n      ].join('')\n    }\n\n    if (source === 'vimeo') {\n      return [\n        `//player.vimeo.com/video/${id}`,\n        '?api=false',\n        `&amp;autoplay=${autoplay}`,\n        '&amp;byline=false',\n        `&amp;color=${encodeURIComponent(color)}`,\n        '&amp;portrait=false',\n        '&amp;title=false',\n      ].join('')\n    }\n\n    return url\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n    const { active } = this.state\n\n    if (onClick) onClick(e, { ...this.props, active: true })\n    if (!active) this.trySetState({ active: true })\n  }\n\n  render() {\n    const { aspectRatio, className, icon, placeholder } = this.props\n    const { active } = this.state\n\n    const classes = cx(\n      'ui',\n      aspectRatio,\n      useKeyOnly(active, 'active'),\n      'embed',\n      className,\n    )\n    const rest = getUnhandledProps(Embed, this.props)\n    const ElementType = getElementType(Embed, this.props)\n\n    return (\n      <ElementType {...rest} className={classes} onClick={this.handleClick}>\n        {Icon.create(icon)}\n        {placeholder && <img className='placeholder' src={placeholder} />}\n        {this.renderEmbed()}\n      </ElementType>\n    )\n  }\n\n  renderEmbed() {\n    const { children, source } = this.props\n    const { active } = this.state\n\n    if (!active) return null\n    if (!_.isNil(children)) return <div className='embed'>{children}</div>\n\n    return (\n      <div className='embed'>\n        <iframe\n          title={`Embedded content from ${source}.`}\n          allowFullScreen=''\n          frameBorder='0'\n          height='100%'\n          scrolling='no'\n          src={this.getSrc()}\n          width='100%'\n        />\n      </div>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Embed/index.js":"export default from './Embed'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/index.js":"export default from './Modal'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/ModalActions.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A modal can contain a row of actions.\n */\nfunction ModalActions(props) {\n  const { children, className } = props\n  const classes = cx('actions', className)\n  const rest = getUnhandledProps(ModalActions, props)\n  const ElementType = getElementType(ModalActions, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nModalActions._meta = {\n  name: 'ModalActions',\n  type: META.TYPES.MODULE,\n  parent: 'Modal',\n}\n\nModalActions.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default ModalActions\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/ModalContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A modal can contain content.\n */\nfunction ModalContent(props) {\n  const {\n    children,\n    className,\n    content,\n    image,\n  } = props\n\n  const classes = cx(\n    className,\n    useKeyOnly(image, 'image'),\n    'content'\n  )\n  const rest = getUnhandledProps(ModalContent, props)\n  const ElementType = getElementType(ModalContent, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nModalContent._meta = {\n  name: 'ModalContent',\n  type: META.TYPES.MODULE,\n  parent: 'Modal',\n}\n\nModalContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A modal can contain image content. */\n  image: PropTypes.bool,\n}\n\nModalContent.create = createShorthandFactory(ModalContent, content => ({ content }))\n\nexport default ModalContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/ModalDescription.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A modal can have a header.\n */\nfunction ModalDescription(props) {\n  const { children, className } = props\n  const classes = cx('description', className)\n  const rest = getUnhandledProps(ModalDescription, props)\n  const ElementType = getElementType(ModalDescription, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nModalDescription._meta = {\n  name: 'ModalDescription',\n  type: META.TYPES.MODULE,\n  parent: 'Modal',\n}\n\nModalDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default ModalDescription\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/ModalHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A modal can have a header.\n */\nfunction ModalHeader(props) {\n  const { children, className, content } = props\n  const classes = cx(className, 'header')\n  const rest = getUnhandledProps(ModalHeader, props)\n  const ElementType = getElementType(ModalHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nModalHeader._meta = {\n  name: 'ModalHeader',\n  type: META.TYPES.MODULE,\n  parent: 'Modal',\n}\n\nModalHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nModalHeader.create = createShorthandFactory(ModalHeader, content => ({ content }))\n\nexport default ModalHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Modal/Modal.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  isBrowser,\n  makeDebugger,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\nimport Portal from '../../addons/Portal'\nimport ModalHeader from './ModalHeader'\nimport ModalContent from './ModalContent'\nimport ModalActions from './ModalActions'\nimport ModalDescription from './ModalDescription'\n\nconst debug = makeDebugger('modal')\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\nclass Modal extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A modal can reduce its complexity */\n    basic: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Icon. */\n    closeIcon: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.object,\n      PropTypes.bool,\n    ]),\n\n    /** Whether or not the Modal should close when the dimmer is clicked. */\n    closeOnDimmerClick: PropTypes.bool,\n\n    /** Whether or not the Modal should close when the document is clicked. */\n    closeOnDocumentClick: PropTypes.bool,\n\n    /** Initial value of open. */\n    defaultOpen: PropTypes.bool,\n\n    /** A modal can appear in a dimmer. */\n    dimmer: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['inverted', 'blurring']),\n    ]),\n\n    /** The node where the modal should mount. Defaults to document.body. */\n    mountNode: PropTypes.any,\n\n    /**\n     * Called when a close event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * Called when the portal is mounted on the DOM.\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onMount: PropTypes.func,\n\n    /**\n     * Called when an open event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * Called when the portal is unmounted from the DOM.\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onUnmount: PropTypes.func,\n\n    /** Controls whether or not the Modal is displayed. */\n    open: PropTypes.bool,\n\n    /** A modal can vary in size */\n    size: PropTypes.oneOf(['fullscreen', 'large', 'small']),\n\n    /** Custom styles. */\n    style: PropTypes.object,\n\n    /**\n     * NOTE: Any unhandled props that are defined in Portal are passed-through\n     * to the wrapping Portal.\n     */\n  }\n\n  static defaultProps = {\n    dimmer: true,\n    closeOnDimmerClick: true,\n    closeOnDocumentClick: false,\n  }\n\n  static autoControlledProps = [\n    'open',\n  ]\n\n  static _meta = {\n    name: 'Modal',\n    type: META.TYPES.MODULE,\n  }\n\n  static Header = ModalHeader\n  static Content = ModalContent\n  static Description = ModalDescription\n  static Actions = ModalActions\n\n  state = {}\n\n  componentWillUnmount() {\n    debug('componentWillUnmount()')\n    this.handlePortalUnmount()\n  }\n\n  // Do not access document when server side rendering\n  getMountNode = () => isBrowser ? this.props.mountNode || document.body : null\n\n  handleClose = (e) => {\n    debug('close()')\n\n    const { onClose } = this.props\n    if (onClose) onClose(e, this.props)\n\n    this.trySetState({ open: false })\n  }\n\n  handleIconOverrides = predefinedProps => ({\n    onClick: e => {\n      _.invoke(predefinedProps, 'onClick', e)\n      this.handleClose(e)\n    },\n  })\n\n  handleOpen = (e) => {\n    debug('open()')\n\n    const { onOpen } = this.props\n    if (onOpen) onOpen(e, this.props)\n\n    this.trySetState({ open: true })\n  }\n\n  handlePortalMount = (e) => {\n    debug('handlePortalMount()')\n    const { dimmer } = this.props\n    const mountNode = this.getMountNode()\n\n    if (dimmer) {\n      debug('adding dimmer')\n      mountNode.classList.add('dimmable', 'dimmed')\n\n      if (dimmer === 'blurring') {\n        debug('adding blurred dimmer')\n        mountNode.classList.add('blurring')\n      }\n    }\n\n    this.setPosition()\n\n    const { onMount } = this.props\n    if (onMount) onMount(e, this.props)\n  }\n\n  handlePortalUnmount = (e) => {\n    debug('handlePortalUnmount()')\n\n    // Always remove all dimmer classes.\n    // If the dimmer value changes while the modal is open, then removing its\n    // current value could leave cruft classes previously added.\n    const mountNode = this.getMountNode()\n    mountNode.classList.remove('blurring', 'dimmable', 'dimmed', 'scrollable')\n\n    cancelAnimationFrame(this.animationRequestId)\n\n    const { onUnmount } = this.props\n    if (onUnmount) onUnmount(e, this.props)\n  }\n\n  handleRef = c => (this.ref = c)\n\n  setPosition = () => {\n    if (this.ref) {\n      const mountNode = this.getMountNode()\n      const { height } = this.ref.getBoundingClientRect()\n\n      const marginTop = -Math.round(height / 2)\n      const scrolling = height >= window.innerHeight\n\n      const newState = {}\n\n      if (this.state.marginTop !== marginTop) {\n        newState.marginTop = marginTop\n      }\n\n      if (this.state.scrolling !== scrolling) {\n        newState.scrolling = scrolling\n\n        if (scrolling) {\n          mountNode.classList.add('scrolling')\n        } else {\n          mountNode.classList.remove('scrolling')\n        }\n      }\n\n      if (Object.keys(newState).length > 0) this.setState(newState)\n    }\n\n    this.animationRequestId = requestAnimationFrame(this.setPosition)\n  }\n\n  render() {\n    const { open } = this.state\n    const {\n      basic,\n      children,\n      className,\n      closeIcon,\n      closeOnDimmerClick,\n      closeOnDocumentClick,\n      dimmer,\n      size,\n      style,\n    } = this.props\n\n    const mountNode = this.getMountNode()\n\n    // Short circuit when server side rendering\n    if (!isBrowser) return null\n\n    const { marginTop, scrolling } = this.state\n    const classes = cx(\n      'ui',\n      size,\n      useKeyOnly(basic, 'basic'),\n      useKeyOnly(scrolling, 'scrolling'),\n      'modal transition visible active',\n      className,\n    )\n    const unhandled = getUnhandledProps(Modal, this.props)\n    const portalPropNames = Portal.handledProps\n\n    const rest = _.omit(unhandled, portalPropNames)\n    const portalProps = _.pick(unhandled, portalPropNames)\n    const ElementType = getElementType(Modal, this.props)\n\n    const closeIconName = closeIcon === true ? 'close' : closeIcon\n    const modalJSX = (\n      <ElementType {...rest} className={classes} style={{ marginTop, ...style }} ref={this.handleRef}>\n        {Icon.create(closeIconName, { overrideProps: this.handleIconOverrides })}\n        {children}\n      </ElementType>\n    )\n\n    // wrap dimmer modals\n    const dimmerClasses = !dimmer\n      ? null\n      : cx(\n        'ui',\n        dimmer === 'inverted' && 'inverted',\n        'page modals dimmer transition visible active',\n      )\n\n    // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n    return (\n      <Portal\n        closeOnRootNodeClick={closeOnDimmerClick}\n        closeOnDocumentClick={closeOnDocumentClick}\n        {...portalProps}\n        className={dimmerClasses}\n        mountNode={mountNode}\n        onClose={this.handleClose}\n        onMount={this.handlePortalMount}\n        onOpen={this.handleOpen}\n        onUnmount={this.handlePortalUnmount}\n        open={open}\n      >\n        {modalJSX}\n      </Portal>\n    )\n  }\n}\n\nexport default Modal\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Popup/index.js":"export default from './Popup'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Popup/PopupContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A PopupContent displays the content body of a Popover.\n */\nexport default function PopupContent(props) {\n  const { children, className } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(PopupContent, props)\n  const ElementType = getElementType(PopupContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nPopupContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The content of the Popup */\n  children: PropTypes.node,\n\n  /** Classes to add to the Popup content className. */\n  className: PropTypes.string,\n}\n\nPopupContent._meta = {\n  name: 'PopupContent',\n  type: META.TYPES.MODULE,\n  parent: 'Popup',\n}\n\nPopupContent.create = createShorthandFactory(PopupContent, children => ({ children }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Popup/PopupHeader.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A PopupHeader displays a header in a Popover.\n */\nexport default function PopupHeader(props) {\n  const { children, className } = props\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(PopupHeader, props)\n  const ElementType = getElementType(PopupHeader, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nPopupHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nPopupHeader._meta = {\n  name: 'PopupHeader',\n  type: META.TYPES.MODULE,\n  parent: 'Popup',\n}\n\nPopupHeader.create = createShorthandFactory(PopupHeader, children => ({ children }))\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Popup/Popup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  isBrowser,\n  makeDebugger,\n  META,\n  SUI,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\nimport Portal from '../../addons/Portal'\nimport PopupContent from './PopupContent'\nimport PopupHeader from './PopupHeader'\n\nconst debug = makeDebugger('popup')\n\nexport const POSITIONS = [\n  'top left',\n  'top right',\n  'bottom right',\n  'bottom left',\n  'right center',\n  'left center',\n  'top center',\n  'bottom center',\n]\n\n/**\n * A Popup displays additional information on top of a page.\n */\nexport default class Popup extends Component {\n  static propTypes = {\n    /** Display the popup without the pointing arrow. */\n    basic: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Simple text content for the popover. */\n    content: customPropTypes.itemShorthand,\n\n    /** A flowing Popup has no maximum width and continues to flow to fit its content. */\n    flowing: PropTypes.bool,\n\n    /** Takes up the entire width of its offset container. */\n    // TODO: implement the Popup fluid layout\n    // fluid: PropTypes.bool,\n\n    /** Header displayed above the content in bold. */\n    header: customPropTypes.itemShorthand,\n\n    /** Hide the Popup when scrolling the window. */\n    hideOnScroll: PropTypes.bool,\n\n    /** Whether the popup should not close on hover. */\n    hoverable: PropTypes.bool,\n\n    /** Invert the colors of the Popup. */\n    inverted: PropTypes.bool,\n\n    /** Horizontal offset in pixels to be applied to the Popup. */\n    offset: PropTypes.number,\n\n    /** Event triggering the popup. */\n    on: PropTypes.oneOf(['hover', 'click', 'focus']),\n\n    /**\n     * Called when a close event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * Called when the portal is mounted on the DOM.\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onMount: PropTypes.func,\n\n    /**\n     * Called when an open event happens.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * Called when the portal is unmounted from the DOM.\n     *\n     * @param {null}\n     * @param {object} data - All props.\n     */\n    onUnmount: PropTypes.func,\n\n    /** Position for the popover. */\n    position: PropTypes.oneOf(POSITIONS),\n\n    /** Popup size. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium', 'big', 'massive')),\n\n    /** Custom Popup style. */\n    style: PropTypes.object,\n\n    /** Element to be rendered in-place where the popup is defined. */\n    trigger: PropTypes.node,\n\n    /** Popup width. */\n    wide: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['very']),\n    ]),\n  }\n\n  static defaultProps = {\n    position: 'top left',\n    on: 'hover',\n  }\n\n  static _meta = {\n    name: 'Popup',\n    type: META.TYPES.MODULE,\n  }\n\n  static Content = PopupContent\n  static Header = PopupHeader\n\n  state = {}\n\n  computePopupStyle(positions) {\n    const style = { position: 'absolute' }\n\n    // Do not access window/document when server side rendering\n    if (!isBrowser) return style\n\n    const { offset } = this.props\n    const { pageYOffset, pageXOffset } = window\n    const { clientWidth, clientHeight } = document.documentElement\n\n    if (_.includes(positions, 'right')) {\n      style.right = Math.round(clientWidth - (this.coords.right + pageXOffset))\n      style.left = 'auto'\n    } else if (_.includes(positions, 'left')) {\n      style.left = Math.round(this.coords.left + pageXOffset)\n      style.right = 'auto'\n    } else {  // if not left nor right, we are horizontally centering the element\n      const xOffset = (this.coords.width - this.popupCoords.width) / 2\n      style.left = Math.round(this.coords.left + xOffset + pageXOffset)\n      style.right = 'auto'\n    }\n\n    if (_.includes(positions, 'top')) {\n      style.bottom = Math.round(clientHeight - (this.coords.top + pageYOffset))\n      style.top = 'auto'\n    } else if (_.includes(positions, 'bottom')) {\n      style.top = Math.round(this.coords.bottom + pageYOffset)\n      style.bottom = 'auto'\n    } else {  // if not top nor bottom, we are vertically centering the element\n      const yOffset = (this.coords.height + this.popupCoords.height) / 2\n      style.top = Math.round(this.coords.bottom + pageYOffset - yOffset)\n      style.bottom = 'auto'\n\n      const xOffset = this.popupCoords.width + 8\n      if (_.includes(positions, 'right')) {\n        style.right -= xOffset\n      } else {\n        style.left -= xOffset\n      }\n    }\n\n    if (offset) {\n      if (_.isNumber(style.right)) {\n        style.right -= offset\n      } else {\n        style.left -= offset\n      }\n    }\n\n    return style\n  }\n\n  // check if the style would display\n  // the popup outside of the view port\n  isStyleInViewport(style) {\n    const { pageYOffset, pageXOffset } = window\n    const { clientWidth, clientHeight } = document.documentElement\n\n    const element = {\n      top: style.top,\n      left: style.left,\n      width: this.popupCoords.width,\n      height: this.popupCoords.height,\n    }\n    if (_.isNumber(style.right)) {\n      element.left = clientWidth - style.right - element.width\n    }\n    if (_.isNumber(style.bottom)) {\n      element.top = clientHeight - style.bottom - element.height\n    }\n\n    // hidden on top\n    if (element.top < pageYOffset) return false\n    // hidden on the bottom\n    if (element.top + element.height > pageYOffset + clientHeight) return false\n    // hidden the left\n    if (element.left < pageXOffset) return false\n    // hidden on the right\n    if (element.left + element.width > pageXOffset + clientWidth) return false\n\n    return true\n  }\n\n  setPopupStyle() {\n    if (!this.coords || !this.popupCoords) return\n    let position = this.props.position\n    let style = this.computePopupStyle(position)\n\n    // Lets detect if the popup is out of the viewport and adjust\n    // the position accordingly\n    const positions = _.without(POSITIONS, position)\n    for (let i = 0; !this.isStyleInViewport(style) && i < positions.length; i++) {\n      style = this.computePopupStyle(positions[i])\n      position = positions[i]\n    }\n\n    // Append 'px' to every numerical values in the style\n    style = _.mapValues(style, value => _.isNumber(value) ? value + 'px' : value)\n    this.setState({ style, position })\n  }\n\n  getPortalProps() {\n    const portalProps = {}\n\n    const { on, hoverable } = this.props\n\n    if (hoverable) {\n      portalProps.closeOnPortalMouseLeave = true\n      portalProps.mouseLeaveDelay = 300\n    }\n\n    if (on === 'click') {\n      portalProps.openOnTriggerClick = true\n      portalProps.closeOnTriggerClick = true\n      portalProps.closeOnDocumentClick = true\n    } else if (on === 'focus') {\n      portalProps.openOnTriggerFocus = true\n      portalProps.closeOnTriggerBlur = true\n    } else if (on === 'hover') {\n      portalProps.openOnTriggerMouseEnter = true\n      portalProps.closeOnTriggerMouseLeave = true\n      // Taken from SUI: https://git.io/vPmCm\n      portalProps.mouseLeaveDelay = 70\n      portalProps.mouseEnterDelay = 50\n    }\n\n    return portalProps\n  }\n\n  hideOnScroll = (e) => {\n    this.setState({ closed: true })\n    window.removeEventListener('scroll', this.hideOnScroll)\n    setTimeout(() => this.setState({ closed: false }), 50)\n  }\n\n  handleClose = (e) => {\n    debug('handleClose()')\n    const { onClose } = this.props\n    if (onClose) onClose(e, this.props)\n  }\n\n  handleOpen = (e) => {\n    debug('handleOpen()')\n    this.coords = e.currentTarget.getBoundingClientRect()\n\n    const { onOpen } = this.props\n    if (onOpen) onOpen(e, this.props)\n  }\n\n  handlePortalMount = (e) => {\n    debug('handlePortalMount()')\n    if (this.props.hideOnScroll) {\n      window.addEventListener('scroll', this.hideOnScroll)\n    }\n\n    const { onMount } = this.props\n    if (onMount) onMount(e, this.props)\n  }\n\n  handlePortalUnmount = (e) => {\n    debug('handlePortalUnmount()')\n    const { onUnmount } = this.props\n    if (onUnmount) onUnmount(e, this.props)\n  }\n\n  handlePopupRef = (popupRef) => {\n    debug('popupMounted()')\n    this.popupCoords = popupRef ? popupRef.getBoundingClientRect() : null\n    this.setPopupStyle()\n  }\n\n  render() {\n    const {\n      basic,\n      children,\n      className,\n      content,\n      flowing,\n      header,\n      inverted,\n      size,\n      trigger,\n      wide,\n    } = this.props\n\n    const { position, closed } = this.state\n    const style = _.assign({}, this.state.style, this.props.style)\n    const classes = cx(\n      'ui',\n      position,\n      size,\n      useKeyOrValueAndKey(wide, 'wide'),\n      useKeyOnly(basic, 'basic'),\n      useKeyOnly(flowing, 'flowing'),\n      useKeyOnly(inverted, 'inverted'),\n      'popup transition visible',\n      className,\n    )\n\n    if (closed) return trigger\n\n    const unhandled = getUnhandledProps(Popup, this.props)\n    const portalPropNames = Portal.handledProps\n\n    const rest = _.omit(unhandled, portalPropNames)\n    const portalProps = _.pick(unhandled, portalPropNames)\n    const ElementType = getElementType(Popup, this.props)\n\n    const popupJSX = (\n      <ElementType {...rest} className={classes} style={style} ref={this.handlePopupRef}>\n        {children}\n        {_.isNil(children) && PopupHeader.create(header)}\n        {_.isNil(children) && PopupContent.create(content)}\n      </ElementType>\n    )\n\n    const mergedPortalProps = { ...this.getPortalProps(), ...portalProps }\n    debug('portal props:', mergedPortalProps)\n\n    return (\n      <Portal\n        {...mergedPortalProps}\n        trigger={trigger}\n        onClose={this.handleClose}\n        onMount={this.handlePortalMount}\n        onOpen={this.handleOpen}\n        onUnmount={this.handlePortalUnmount}\n      >\n        {popupJSX}\n      </Portal>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Progress/index.js":"export default from './Progress'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Progress/Progress.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createHTMLDivision,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n} from '../../lib'\n\n/**\n * A progress bar shows the progression of a task.\n */\nclass Progress extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A progress bar can show activity. */\n    active: PropTypes.bool,\n\n    /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */\n    attached: PropTypes.oneOf(['top', 'bottom']),\n\n    /** Whether success state should automatically trigger when progress completes. */\n    autoSuccess: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A progress bar can have different colors. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** A progress bar be disabled. */\n    disabled: PropTypes.bool,\n\n    /** A progress bar can show a error state. */\n    error: PropTypes.bool,\n\n    /** An indicating progress bar visually indicates the current level of progress of a task. */\n    indicating: PropTypes.bool,\n\n    /** A progress bar can have its colors inverted. */\n    inverted: PropTypes.bool,\n\n    /** Can be set to either to display progress as percent or ratio. */\n    label: customPropTypes.itemShorthand,\n\n    /** Current percent complete. */\n    percent: customPropTypes.every([\n      customPropTypes.disallow(['total', 'value']),\n      PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    ]),\n\n    /** Decimal point precision for calculated progress. */\n    precision: PropTypes.number,\n\n    /** A progress bar can contain a text value indicating current progress. */\n    progress: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['percent', 'ratio']),\n    ]),\n\n    /** A progress bar can vary in size. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'mini', 'huge', 'massive')),\n\n    /** A progress bar can show a success state. */\n    success: PropTypes.bool,\n\n    /**\n     * For use with value.\n     * Together, these will calculate the percent.\n     * Mutually excludes percent.\n     */\n    total: customPropTypes.every([\n      customPropTypes.demand(['value']),\n      customPropTypes.disallow(['percent']),\n      PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    ]),\n\n    /**\n     * For use with total. Together, these will calculate the percent. Mutually excludes percent.\n     */\n    value: customPropTypes.every([\n      customPropTypes.demand(['total']),\n      customPropTypes.disallow(['percent']),\n      PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    ]),\n\n    /** A progress bar can show a warning state. */\n    warning: PropTypes.bool,\n  }\n\n  static _meta = {\n    name: 'Progress',\n    type: META.TYPES.MODULE,\n  }\n\n  calculatePercent = () => {\n    const { percent, total, value } = this.props\n\n    if (!_.isUndefined(percent)) return percent\n    if (!_.isUndefined(total) && !_.isUndefined(value)) return value / total * 100\n  }\n\n  getPercent = () => {\n    const { precision } = this.props\n    const percent = _.clamp(this.calculatePercent(), 0, 100)\n\n    if (_.isUndefined(precision)) return percent\n    return _.round(percent, precision)\n  }\n\n  isAutoSuccess = () => {\n    const { autoSuccess, percent, total, value } = this.props\n\n    return autoSuccess && (percent >= 100 || value >= total)\n  }\n\n  renderLabel = () => {\n    const { children, label } = this.props\n\n    if (!_.isNil(children)) return <div className='label'>{children}</div>\n    return createHTMLDivision(label, { defaultProps: { className: 'label' } })\n  }\n\n  renderProgress = percent => {\n    const {\n      precision,\n      progress,\n      total,\n      value,\n    } = this.props\n\n    if (!progress && _.isUndefined(precision)) return\n    return (\n      <div className='progress'>\n        { progress !== 'ratio' ? `${percent}%` : `${value}/${total}` }\n      </div>\n    )\n  }\n\n  render() {\n    const {\n      active,\n      attached,\n      className,\n      color,\n      disabled,\n      error,\n      indicating,\n      inverted,\n      size,\n      success,\n      warning,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      color,\n      size,\n      useKeyOnly(active || indicating, 'active'),\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(error, 'error'),\n      useKeyOnly(indicating, 'indicating'),\n      useKeyOnly(inverted, 'inverted'),\n      useKeyOnly(success || this.isAutoSuccess(), 'success'),\n      useKeyOnly(warning, 'warning'),\n      useValueAndKey(attached, 'attached'),\n      'progress',\n      className,\n    )\n    const rest = getUnhandledProps(Progress, this.props)\n    const ElementType = getElementType(Progress, this.props)\n    const percent = this.getPercent()\n\n    return (\n      <ElementType {...rest} className={classes}>\n        <div className='bar' style={{ width: `${percent}%` }}>\n          {this.renderProgress(percent)}\n        </div>\n        {this.renderLabel()}\n      </ElementType>\n    )\n  }\n}\n\nexport default Progress\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Rating/index.js":"export default from './Rating'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Rating/RatingIcon.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n  keyboardKey,\n} from '../../lib'\n\n/**\n * An internal icon sub-component for Rating component\n */\nexport default class RatingIcon extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Indicates activity of an icon. */\n    active: PropTypes.bool,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** An index of icon inside Rating. */\n    index: PropTypes.number,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Called on keyup.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Called on mouseenter.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /** Indicates selection of an icon. */\n    selected: PropTypes.bool,\n  }\n\n  defaultProps = {\n    as: 'i',\n  }\n\n  static _meta = {\n    name: 'RatingIcon',\n    parent: 'Rating',\n    type: META.TYPES.MODULE,\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  handleKeyUp = (e) => {\n    const { onClick, onKeyUp } = this.props\n\n    if (onKeyUp) onKeyUp(e, this.props)\n\n    if (onClick) {\n      switch (keyboardKey.getCode(e)) {\n        case keyboardKey.Enter:\n        case keyboardKey.Spacebar:\n          e.preventDefault()\n          onClick(e, this.props)\n          break\n        default:\n          return\n      }\n    }\n  }\n\n  handleMouseEnter = (e) => {\n    const { onMouseEnter } = this.props\n\n    if (onMouseEnter) onMouseEnter(e, this.props)\n  }\n\n  render() {\n    const { active, className, selected } = this.props\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      useKeyOnly(selected, 'selected'),\n      'icon',\n      className,\n    )\n    const rest = getUnhandledProps(RatingIcon, this.props)\n    const ElementType = getElementType(RatingIcon, this.props)\n\n    return (\n      <ElementType\n        {...rest}\n        className={classes}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onMouseEnter={this.handleMouseEnter}\n        tabIndex={0}\n        role='radio'\n      />\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Rating/Rating.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n} from '../../lib'\nimport RatingIcon from './RatingIcon'\n\n/**\n * A rating indicates user interest in content.\n */\nexport default class Rating extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /**\n     * You can clear the rating by clicking on the current start rating.\n     * By default a rating will be only clearable if there is 1 icon.\n     * Setting to `true`/`false` will allow or disallow a user to clear their rating.\n     */\n    clearable: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf(['auto']),\n    ]),\n\n    /** The initial rating value. */\n    defaultRating: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /** You can disable or enable interactive rating.  Makes a read-only rating. */\n    disabled: PropTypes.bool,\n\n    /** A rating can use a set of star or heart icons. */\n    icon: PropTypes.oneOf(['star', 'heart']),\n\n    /** The total number of icons. */\n    maxRating: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Called after user selects a new rating.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props and proposed rating.\n     */\n    onRate: PropTypes.func,\n\n    /** The current number of active icons. */\n    rating: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /** A progress bar can vary in size. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium', 'big')),\n  }\n\n  static autoControlledProps = [\n    'rating',\n  ]\n\n  static defaultProps = {\n    clearable: 'auto',\n    maxRating: 1,\n  }\n\n  static _meta = {\n    name: 'Rating',\n    type: META.TYPES.MODULE,\n  }\n\n  static Icon = RatingIcon\n\n  handleIconClick = (e, { index }) => {\n    const { clearable, disabled, maxRating, onRate } = this.props\n    const { rating } = this.state\n    if (disabled) return\n\n    // default newRating is the clicked icon\n    // allow toggling a binary rating\n    // allow clearing ratings\n    let newRating = index + 1\n    if (clearable === 'auto' && maxRating === 1) {\n      newRating = +!rating\n    } else if (clearable === true && newRating === rating) {\n      newRating = 0\n    }\n\n    // set rating\n    this.trySetState({ rating: newRating }, { isSelecting: false })\n    if (onRate) onRate(e, { ...this.props, rating: newRating })\n  }\n\n  handleIconMouseEnter = (e, { index }) => {\n    if (this.props.disabled) return\n\n    this.setState({ selectedIndex: index, isSelecting: true })\n  }\n\n  handleMouseLeave = (...args) => {\n    _.invoke(this.props, 'onMouseLeave', ...args)\n\n    if (this.props.disabled) return\n\n    this.setState({ selectedIndex: -1, isSelecting: false })\n  }\n\n  render() {\n    const {\n      className,\n      disabled,\n      icon,\n      maxRating,\n      size,\n    } = this.props\n    const { rating, selectedIndex, isSelecting } = this.state\n\n    const classes = cx(\n      'ui',\n      icon,\n      size,\n      useKeyOnly(disabled, 'disabled'),\n      useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'),\n      'rating',\n      className,\n    )\n    const rest = getUnhandledProps(Rating, this.props)\n    const ElementType = getElementType(Rating, this.props)\n\n    return (\n      <ElementType {...rest} className={classes} role='radiogroup' onMouseLeave={this.handleMouseLeave}>\n        {_.times(maxRating, (i) => (\n          <RatingIcon\n            active={rating >= i + 1}\n            aria-checked={rating === i + 1}\n            aria-posinset={i + 1}\n            aria-setsize={maxRating}\n            index={i}\n            key={i}\n            onClick={this.handleIconClick}\n            onMouseEnter={this.handleIconMouseEnter}\n            selected={selectedIndex >= i && isSelecting }\n          />\n        ))}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Search/index.js":"export default from './Search'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Search/SearchCategory.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\nfunction SearchCategory(props) {\n  const { active, children, className, renderer } = props\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    'category',\n    className\n  )\n  const rest = getUnhandledProps(SearchCategory, props)\n  const ElementType = getElementType(SearchCategory, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      <div className='name'>\n        {renderer(props)}\n      </div>\n      {children}\n    </ElementType>\n  )\n}\n\nSearchCategory._meta = {\n  name: 'SearchCategory',\n  parent: 'Search',\n  type: META.TYPES.MODULE,\n}\n\nSearchCategory.defaultProps = {\n  renderer: ({ name }) => name,\n}\n\nSearchCategory.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** The item currently selected by keyboard shortcut. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Display name. */\n  name: PropTypes.string,\n\n  /**\n   * Renders the category contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable category contents.\n   */\n  renderer: PropTypes.func,\n\n  /** Array of Search.Result props. */\n  results: PropTypes.array,\n}\n\nexport default SearchCategory\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Search/Search.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  htmlInputAttrs,\n  isBrowser,\n  keyboardKey,\n  makeDebugger,\n  META,\n  objectDiff,\n  partitionHTMLInputProps,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n} from '../../lib'\nimport Input from '../../elements/Input'\nimport SearchCategory from './SearchCategory'\nimport SearchResult from './SearchResult'\nimport SearchResults from './SearchResults'\n\nconst debug = makeDebugger('search')\n\n/**\n * A search module allows a user to query for results from a selection of data\n */\nexport default class Search extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    // ------------------------------------\n    // Behavior\n    // ------------------------------------\n\n    /** Initial value of open. */\n    defaultOpen: PropTypes.bool,\n\n    /** Initial value. */\n    defaultValue: PropTypes.string,\n\n    /** Shorthand for Icon. */\n    icon: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.object,\n    ]),\n\n    /** Minimum characters to query for results */\n    minCharacters: PropTypes.number,\n\n    /** Additional text for \"No Results\" message with less emphasis. */\n    noResultsDescription: PropTypes.string,\n\n    /** Message to display when there are no results. */\n    noResultsMessage: PropTypes.string,\n\n    /** Controls whether or not the results menu is displayed. */\n    open: PropTypes.bool,\n\n    /**\n     * One of:\n     * - array of Search.Result props e.g. `{ title: '', description: '' }` or\n     * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`\n     */\n    results: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.shape(SearchResult.propTypes)),\n      PropTypes.object,\n    ]),\n\n    /** Whether the search should automatically select the first result after searching. */\n    selectFirstResult: PropTypes.bool,\n\n    /** Whether a \"no results\" message should be shown if no results are found. */\n    showNoResults: PropTypes.bool,\n\n    /** Current value of the search input. Creates a controlled component. */\n    value: PropTypes.string,\n\n    // ------------------------------------\n    // Rendering\n    // ------------------------------------\n\n    /**\n     * Renders the SearchCategory contents.\n     *\n     * @param {object} props - The SearchCategory props object.\n     * @returns {*} - Renderable SearchCategory contents.\n     */\n    categoryRenderer: PropTypes.func,\n\n    /**\n     * Renders the SearchResult contents.\n     *\n     * @param {object} props - The SearchResult props object.\n     * @returns {*} - Renderable SearchResult contents.\n     */\n    resultRenderer: PropTypes.func,\n\n    // ------------------------------------\n    // Callbacks\n    // ------------------------------------\n\n    /**\n     * Called on blur.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Called on focus.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Called on mousedown.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * Called when a result is selected.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onResultSelect: PropTypes.func,\n\n    /**\n     * Called on search input change.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {string} value - Current value of search input.\n     */\n    onSearchChange: PropTypes.func,\n\n    // ------------------------------------\n    // Style\n    // ------------------------------------\n\n    /** A search can have its results aligned to its left or right container edge. */\n    aligned: PropTypes.string,\n\n    /** A search can display results from remote content ordered by categories. */\n    category: PropTypes.bool,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A search can have its results take up the width of its container. */\n    fluid: PropTypes.bool,\n\n    /** A search input can take up the width of its container. */\n    input: customPropTypes.itemShorthand,\n\n    /** A search can show a loading indicator. */\n    loading: PropTypes.bool,\n\n    /** A search can have different sizes. */\n    size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n  }\n\n  static defaultProps = {\n    icon: 'search',\n    input: 'text',\n    minCharacters: 1,\n    noResultsMessage: 'No results found.',\n    showNoResults: true,\n  }\n\n  static autoControlledProps = [\n    'open',\n    'value',\n  ]\n\n  static _meta = {\n    name: 'Search',\n    type: META.TYPES.MODULE,\n  }\n\n  static Category = SearchCategory\n\n  static Result = SearchResult\n\n  static Results = SearchResults\n\n  componentWillMount() {\n    if (super.componentWillMount) super.componentWillMount()\n    debug('componentWillMount()')\n    const { open, value } = this.state\n\n    this.setValue(value)\n    if (open) this.open()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(nextProps, this.props) || !_.isEqual(nextState, this.state)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    super.componentWillReceiveProps(nextProps)\n    debug('componentWillReceiveProps()')\n    // TODO objectDiff still runs in prod, stop it\n    debug('changed props:', objectDiff(nextProps, this.props))\n\n    if (!_.isEqual(nextProps.value, this.props.value)) {\n      debug('value changed, setting', nextProps.value)\n      this.setValue(nextProps.value)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line complexity\n    debug('componentDidUpdate()')\n    // TODO objectDiff still runs in prod, stop it\n    debug('to state:', objectDiff(prevState, this.state))\n\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n\n    // focused / blurred\n    if (!prevState.focus && this.state.focus) {\n      debug('search focused')\n      if (!this.isMouseDown) {\n        debug('mouse is not down, opening')\n        this.tryOpen()\n      }\n      if (this.state.open) {\n        document.addEventListener('keydown', this.moveSelectionOnKeyDown)\n        document.addEventListener('keydown', this.selectItemOnEnter)\n      }\n    } else if (prevState.focus && !this.state.focus) {\n      debug('search blurred')\n      if (!this.isMouseDown) {\n        debug('mouse is not down, closing')\n        this.close()\n      }\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.removeEventListener('keydown', this.selectItemOnEnter)\n    }\n\n    // opened / closed\n    if (!prevState.open && this.state.open) {\n      debug('search opened')\n      this.open()\n      document.addEventListener('keydown', this.closeOnEscape)\n      document.addEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.addEventListener('keydown', this.selectItemOnEnter)\n      document.addEventListener('click', this.closeOnDocumentClick)\n    } else if (prevState.open && !this.state.open) {\n      debug('search closed')\n      this.close()\n      document.removeEventListener('keydown', this.closeOnEscape)\n      document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n      document.removeEventListener('keydown', this.selectItemOnEnter)\n      document.removeEventListener('click', this.closeOnDocumentClick)\n    }\n  }\n\n  componentWillUnmount() {\n    debug('componentWillUnmount()')\n\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n\n    document.removeEventListener('keydown', this.moveSelectionOnKeyDown)\n    document.removeEventListener('keydown', this.selectItemOnEnter)\n    document.removeEventListener('keydown', this.closeOnEscape)\n    document.removeEventListener('click', this.closeOnDocumentClick)\n  }\n\n  // ----------------------------------------\n  // Document Event Handlers\n  // ----------------------------------------\n\n  handleResultSelect = (e, result) => {\n    debug('handleResultSelect()')\n    debug(result)\n    const { onResultSelect } = this.props\n    if (onResultSelect) onResultSelect(e, result)\n  }\n\n  closeOnEscape = (e) => {\n    if (keyboardKey.getCode(e) !== keyboardKey.Escape) return\n    e.preventDefault()\n    this.close()\n  }\n\n  moveSelectionOnKeyDown = (e) => {\n    debug('moveSelectionOnKeyDown()')\n    debug(keyboardKey.getName(e))\n    switch (keyboardKey.getCode(e)) {\n      case keyboardKey.ArrowDown:\n        e.preventDefault()\n        this.moveSelectionBy(1)\n        break\n      case keyboardKey.ArrowUp:\n        e.preventDefault()\n        this.moveSelectionBy(-1)\n        break\n      default:\n        break\n    }\n  }\n\n  selectItemOnEnter = (e) => {\n    debug('selectItemOnEnter()')\n    debug(keyboardKey.getName(e))\n    if (keyboardKey.getCode(e) !== keyboardKey.Enter) return\n    e.preventDefault()\n\n    const result = this.getSelectedResult()\n\n    // prevent selecting null if there was no selected item value\n    if (!result) return\n\n    // notify the onResultSelect prop that the user is trying to change value\n    this.setValue(result.title)\n    this.handleResultSelect(e, result)\n    this.close()\n  }\n\n  closeOnDocumentClick = (e) => {\n    debug('closeOnDocumentClick()')\n    debug(e)\n    this.close()\n  }\n\n  // ----------------------------------------\n  // Component Event Handlers\n  // ----------------------------------------\n\n  handleMouseDown = (e) => {\n    debug('handleMouseDown()')\n    const { onMouseDown } = this.props\n    if (onMouseDown) onMouseDown(e, this.props)\n    this.isMouseDown = true\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n    document.addEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleDocumentMouseUp = () => {\n    debug('handleDocumentMouseUp()')\n    this.isMouseDown = false\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n    document.removeEventListener('mouseup', this.handleDocumentMouseUp)\n  }\n\n  handleInputClick = (e) => {\n    debug('handleInputClick()', e)\n\n    // prevent closeOnDocumentClick()\n    e.nativeEvent.stopImmediatePropagation()\n\n    this.tryOpen()\n  }\n\n  handleItemClick = (e, { id }) => {\n    debug('handleItemClick()')\n    debug(id)\n    const result = this.getSelectedResult(id)\n\n    // prevent closeOnDocumentClick()\n    e.nativeEvent.stopImmediatePropagation()\n\n    // notify the onResultSelect prop that the user is trying to change value\n    this.setValue(result.title)\n    this.handleResultSelect(e, result)\n    this.close()\n  }\n\n  handleFocus = (e) => {\n    debug('handleFocus()')\n    const { onFocus } = this.props\n    if (onFocus) onFocus(e, this.props)\n    this.setState({ focus: true })\n  }\n\n  handleBlur = (e) => {\n    debug('handleBlur()')\n    const { onBlur } = this.props\n    if (onBlur) onBlur(e, this.props)\n    this.setState({ focus: false })\n  }\n\n  handleSearchChange = (e) => {\n    debug('handleSearchChange()')\n    debug(e.target.value)\n    // prevent propagating to this.props.onChange()\n    e.stopPropagation()\n    const { onSearchChange, minCharacters } = this.props\n    const { open } = this.state\n    const newQuery = e.target.value\n\n    if (onSearchChange) onSearchChange(e, newQuery)\n\n    // open search dropdown on search query\n    if (newQuery.length < minCharacters) {\n      this.close()\n    } else if (!open) {\n      this.tryOpen(newQuery)\n    }\n\n    this.setValue(newQuery)\n  }\n\n  // ----------------------------------------\n  // Getters\n  // ----------------------------------------\n\n  getFlattenedResults = () => {\n    const { category, results } = this.props\n\n    return !category ? results : _.reduce(results,\n        (memo, categoryData) => memo.concat(categoryData.results),\n        []\n      )\n  }\n\n  getSelectedResult = (index = this.state.selectedIndex) => {\n    const results = this.getFlattenedResults()\n    return _.get(results, index)\n  }\n\n  // ----------------------------------------\n  // Setters\n  // ----------------------------------------\n\n  setValue = (value) => {\n    debug('setValue()')\n    debug('value', value)\n\n    const { selectFirstResult } = this.props\n\n    this.trySetState(\n      { value },\n      { selectedIndex: selectFirstResult ? 0 : -1 }\n    )\n  }\n\n  moveSelectionBy = (offset) => {\n    debug('moveSelectionBy()')\n    debug(`offset: ${offset}`)\n    const { selectedIndex } = this.state\n\n    const results = this.getFlattenedResults()\n    const lastIndex = results.length - 1\n\n    // next is after last, wrap to beginning\n    // next is before first, wrap to end\n    let nextIndex = selectedIndex + offset\n    if (nextIndex > lastIndex) nextIndex = 0\n    else if (nextIndex < 0) nextIndex = lastIndex\n\n    this.setState({ selectedIndex: nextIndex })\n    this.scrollSelectedItemIntoView()\n  }\n\n  // ----------------------------------------\n  // Behavior\n  // ----------------------------------------\n\n  scrollSelectedItemIntoView = () => {\n    debug('scrollSelectedItemIntoView()')\n    // Do not access document when server side rendering\n    if (!isBrowser) return\n    const menu = document.querySelector('.ui.search.active.visible .results.visible')\n    const item = menu.querySelector('.result.active')\n    debug(`menu (results): ${menu}`)\n    debug(`item (result): ${item}`)\n    const isOutOfUpperView = item.offsetTop < menu.scrollTop\n    const isOutOfLowerView = (item.offsetTop + item.clientHeight) > menu.scrollTop + menu.clientHeight\n\n    if (isOutOfUpperView) {\n      menu.scrollTop = item.offsetTop\n    } else if (isOutOfLowerView) {\n      menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight\n    }\n  }\n\n  // Open if the current value is greater than the minCharacters prop\n  tryOpen = (currentValue = this.state.value) => {\n    debug('open()')\n\n    const { minCharacters } = this.props\n    if (currentValue.length < minCharacters) return\n\n    this.open()\n  }\n\n  open = () => {\n    debug('open()')\n    this.trySetState({ open: true })\n  }\n\n  close = () => {\n    debug('close()')\n    this.trySetState({ open: false })\n  }\n\n  // ----------------------------------------\n  // Render\n  // ----------------------------------------\n\n  renderSearchInput = rest => {\n    const { icon, input } = this.props\n    const { value } = this.state\n\n    return Input.create(input, { defaultProps: {\n      ...rest,\n      icon,\n      input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },\n      onBlur: this.handleBlur,\n      onChange: this.handleSearchChange,\n      onClick: this.handleInputClick,\n      onFocus: this.handleFocus,\n      value,\n    } })\n  }\n\n  renderNoResults = () => {\n    const { noResultsDescription, noResultsMessage } = this.props\n\n    return (\n      <div className='message empty'>\n        <div className='header'>{noResultsMessage}</div>\n        {noResultsDescription && (\n          <div className='description'>{noResultsDescription}</div>\n        )}\n      </div>\n    )\n  }\n\n  /**\n   * Offset is needed for determining the active item for results within a\n   * category. Since the index is reset to 0 for each new category, an offset\n   * must be passed in.\n   */\n  renderResult = ({ childKey, ...result }, index, _array, offset = 0) => {\n    const { resultRenderer } = this.props\n    const { selectedIndex } = this.state\n    const offsetIndex = index + offset\n\n    return (\n      <SearchResult\n        key={childKey || result.title}\n        active={selectedIndex === offsetIndex}\n        onClick={this.handleItemClick}\n        renderer={resultRenderer}\n        {...result}\n        id={offsetIndex} // Used to lookup the result on item click\n      />\n    )\n  }\n\n  renderResults = () => {\n    const { results } = this.props\n\n    return _.map(results, this.renderResult)\n  }\n\n  renderCategories = () => {\n    const { categoryRenderer, results: categories } = this.props\n    const { selectedIndex } = this.state\n\n    let count = 0\n\n    return _.map(categories, ({ childKey, ...category }, name, index) => {\n      const categoryProps = {\n        key: childKey || category.name,\n        active: _.inRange(selectedIndex, count, count + category.results.length),\n        renderer: categoryRenderer,\n        ...category,\n      }\n      const renderFn = _.partialRight(this.renderResult, count)\n\n      count = count + category.results.length\n\n      return (\n        <SearchCategory {...categoryProps}>\n          {category.results.map(renderFn)}\n        </SearchCategory>\n      )\n    })\n  }\n\n  renderMenuContent = () => {\n    const { category, showNoResults, results } = this.props\n\n    if (_.isEmpty(results)) {\n      return showNoResults ? this.renderNoResults() : null\n    }\n\n    return category ? this.renderCategories() : this.renderResults()\n  }\n\n  renderResultsMenu = () => {\n    const { open } = this.state\n    const resultsClasses = open ? 'visible' : ''\n    const menuContent = this.renderMenuContent()\n\n    if (!menuContent) return\n\n    return <SearchResults className={resultsClasses}>{menuContent}</SearchResults>\n  }\n\n  render() {\n    debug('render()')\n    debug('props', this.props)\n    debug('state', this.state)\n    const { searchClasses, focus, open } = this.state\n\n    const {\n      aligned,\n      category,\n      className,\n      fluid,\n      loading,\n      size,\n    } = this.props\n\n    // Classes\n    const classes = cx(\n      'ui',\n      open && 'active visible',\n      size,\n      searchClasses,\n      useKeyOnly(category, 'category'),\n      useKeyOnly(focus, 'focus'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(loading, 'loading'),\n      useValueAndKey(aligned, 'aligned'),\n      'search',\n      className,\n    )\n    const unhandled = getUnhandledProps(Search, this.props)\n    const ElementType = getElementType(Search, this.props)\n    const [htmlInputProps, rest] = partitionHTMLInputProps(unhandled, htmlInputAttrs)\n\n    return (\n      <ElementType\n        {...rest}\n        className={classes}\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        onMouseDown={this.handleMouseDown}\n      >\n        {this.renderSearchInput(htmlInputProps)}\n        {this.renderResultsMenu()}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Search/SearchResult.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  createHTMLImage,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n// Note: You technically only need the 'content' wrapper when there's an\n// image. However, optionally wrapping it makes this function a lot more\n// complicated and harder to read. Since always wrapping it doesn't affect\n// the style in any way let's just do that.\n//\n// Note: To avoid requiring a wrapping div, we return an array here so to\n// prevent rendering issues each node needs a unique key.\nconst defaultRenderer = ({ image, price, title, description }) => [\n  image && <div key='image' className='image'>{createHTMLImage(image)}</div>,\n  <div key='content' className='content'>\n    {price && <div className='price'>{price}</div>}\n    {title && <div className='title'>{title}</div>}\n    {description && <div className='description'>{description}</div>}\n  </div>,\n]\n\nexport default class SearchResult extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** The item currently selected by keyboard shortcut. */\n    active: PropTypes.bool,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Additional text with less emphasis. */\n    description: PropTypes.string,\n\n    /** A unique identifier. */\n    id: PropTypes.number,\n\n    /** Add an image to the item. */\n    image: PropTypes.string,\n\n    /**\n     * Called on click.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /** Customized text for price. */\n    price: PropTypes.string,\n\n    /**\n     * Renders the result contents.\n     *\n     * @param {object} props - The SearchResult props object.\n     * @returns {*} - Renderable result contents.\n     */\n    renderer: PropTypes.func,\n\n    /** Display title. */\n    title: PropTypes.string,\n  }\n\n  static defaultProps = {\n    renderer: defaultRenderer,\n  }\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  static _meta = {\n    name: 'SearchResult',\n    parent: 'Search',\n    type: META.TYPES.MODULE,\n  }\n\n  render() {\n    const {\n      active,\n      className,\n      renderer,\n    } = this.props\n\n    const classes = cx(\n      useKeyOnly(active, 'active'),\n      'result',\n      className,\n    )\n    const rest = getUnhandledProps(SearchResult, this.props)\n    const ElementType = getElementType(SearchResult, this.props)\n\n    // Note: You technically only need the 'content' wrapper when there's an\n    // image. However, optionally wrapping it makes this function a lot more\n    // complicated and harder to read. Since always wrapping it doesn't affect\n    // the style in any way let's just do that.\n    return (\n      <ElementType {...rest} className={classes} onClick={this.handleClick}>\n        {renderer(this.props)}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Search/SearchResults.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\nfunction SearchResults(props) {\n  const { children, className } = props\n  const classes = cx('results transition', className)\n  const rest = getUnhandledProps(SearchResults, props)\n  const ElementType = getElementType(SearchResults, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nSearchResults._meta = {\n  name: 'SearchResults',\n  parent: 'Search',\n  type: META.TYPES.MODULE,\n}\n\nSearchResults.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default SearchResults\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Sidebar/index.js":"export default from './Sidebar'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Sidebar/Sidebar.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  AutoControlledComponent as Component,\n  customPropTypes,\n  getUnhandledProps,\n  getElementType,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport SidebarPushable from './SidebarPushable'\nimport SidebarPusher from './SidebarPusher'\n\n/**\n * A sidebar hides additional content beside a page.\n */\nclass Sidebar extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** Animation style. */\n    animation: PropTypes.oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** Initial value of visible. */\n    defaultVisible: PropTypes.bool,\n\n    /** Direction the sidebar should appear on. */\n    direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /** Controls whether or not the sidebar is visible on the page. */\n    visible: PropTypes.bool,\n\n    /** Sidebar width. */\n    width: PropTypes.oneOf(['very thin', 'thin', 'wide', 'very wide']),\n  }\n\n  static defaultProps = {\n    direction: 'left',\n  }\n\n  static autoControlledProps = [\n    'visible',\n  ]\n\n  static _meta = {\n    name: 'Sidebar',\n    type: META.TYPES.MODULE,\n  }\n\n  static Pushable = SidebarPushable\n\n  static Pusher = SidebarPusher\n\n  state = {}\n\n  startAnimating = (duration = 500) => {\n    clearTimeout(this.stopAnimatingTimer)\n\n    this.setState({ animating: true })\n\n    this.stopAnimatingTimer = setTimeout(() => this.setState({ animating: false }), duration)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.visible !== this.props.visible) {\n      this.startAnimating()\n    }\n  }\n\n  render() {\n    const {\n      animation,\n      className,\n      children,\n      direction,\n      visible,\n      width,\n    } = this.props\n    const { animating } = this.state\n\n    const classes = cx(\n      'ui',\n      animation,\n      direction,\n      width,\n      useKeyOnly(animating, 'animating'),\n      useKeyOnly(visible, 'visible'),\n      'sidebar',\n      className\n    )\n\n    const rest = getUnhandledProps(Sidebar, this.props)\n    const ElementType = getElementType(Sidebar, this.props)\n\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n}\n\nexport default Sidebar\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Sidebar/SidebarPushable.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A pushable sub-component for Sidebar.\n */\nfunction SidebarPushable(props) {\n  const { className, children } = props\n  const classes = cx('pushable', className)\n  const rest = getUnhandledProps(SidebarPushable, props)\n  const ElementType = getElementType(SidebarPushable, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nSidebarPushable._meta = {\n  name: 'SidebarPushable',\n  type: META.TYPES.MODULE,\n  parent: 'Sidebar',\n}\n\nSidebarPushable.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default SidebarPushable\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/modules/Sidebar/SidebarPusher.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A pushable sub-component for Sidebar.\n */\nfunction SidebarPusher(props) {\n  const { className, dimmed, children } = props\n\n  const classes = cx(\n    'pusher',\n    useKeyOnly(dimmed, 'dimmed'),\n    className,\n  )\n  const rest = getUnhandledProps(SidebarPusher, props)\n  const ElementType = getElementType(SidebarPusher, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nSidebarPusher._meta = {\n  name: 'SidebarPusher',\n  type: META.TYPES.MODULE,\n  parent: 'Sidebar',\n}\n\nSidebarPusher.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Controls whether or not the dim is displayed. */\n  dimmed: PropTypes.bool,\n}\n\nexport default SidebarPusher\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Advertisement/Advertisement.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * An ad displays third-party promotional content.\n */\nfunction Advertisement(props) {\n  const {\n    centered,\n    children,\n    className,\n    test,\n    unit,\n  } = props\n\n  const classes = cx(\n    'ui',\n    unit,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(test, 'test'),\n    'ad',\n    className,\n  )\n  const rest = getUnhandledProps(Advertisement, props)\n  const ElementType = getElementType(Advertisement, props)\n\n  return <ElementType {...rest} className={classes} data-text={test}>{children}</ElementType>\n}\n\nAdvertisement._meta = {\n  name: 'Advertisement',\n  type: META.TYPES.VIEW,\n}\n\nAdvertisement.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Center the advertisement. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Text to be displayed on the advertisement. */\n  test: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n\n  /** Varies the size of the advertisement. */\n  unit: PropTypes.oneOf([\n    'medium rectangle', 'large rectangle', 'vertical rectangle', 'small rectangle',\n    'mobile banner', 'banner', 'vertical banner', 'top banner', 'half banner',\n    'button', 'square button', 'small button',\n    'skyscraper', 'wide skyscraper',\n    'leaderboard', 'large leaderboard', 'mobile leaderboard', 'billboard',\n    'panorama',\n    'netboard',\n    'half page',\n    'square', 'small square',\n  ]).isRequired,\n\n}\n\nexport default Advertisement\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Advertisement/index.js":"export default from './Advertisement'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/CardContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport CardDescription from './CardDescription'\nimport CardHeader from './CardHeader'\nimport CardMeta from './CardMeta'\n\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\nfunction CardContent(props) {\n  const {\n    children,\n    className,\n    description,\n    extra,\n    header,\n    meta,\n  } = props\n\n  const classes = cx(\n    className,\n    useKeyOnly(extra, 'extra'),\n    'content',\n  )\n  const rest = getUnhandledProps(CardContent, props)\n  const ElementType = getElementType(CardContent, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(CardHeader, val => ({ content: val }), header)}\n      {createShorthand(CardMeta, val => ({ content: val }), meta)}\n      {createShorthand(CardDescription, val => ({ content: val }), description)}\n    </ElementType>\n  )\n}\n\nCardContent._meta = {\n  name: 'CardContent',\n  parent: 'Card',\n  type: META.TYPES.VIEW,\n}\n\nCardContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n}\n\nexport default CardContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/CardDescription.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A card can contain a description with one or more paragraphs.\n */\nfunction CardDescription(props) {\n  const { children, className, content } = props\n  const classes = cx(className, 'description')\n  const rest = getUnhandledProps(CardDescription, props)\n  const ElementType = getElementType(CardDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nCardDescription._meta = {\n  name: 'CardDescription',\n  parent: 'Card',\n  type: META.TYPES.VIEW,\n}\n\nCardDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default CardDescription\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/CardGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useWidthProp,\n} from '../../lib'\nimport Card from './Card'\n\n/**\n * A group of cards.\n */\nfunction CardGroup(props) {\n  const {\n    children,\n    className,\n    doubling,\n    items,\n    itemsPerRow,\n    stackable,\n  } = props\n\n  const classes = cx('ui',\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(stackable, 'stackable'),\n    useWidthProp(itemsPerRow),\n    className,\n    'cards',\n  )\n  const rest = getUnhandledProps(CardGroup, props)\n  const ElementType = getElementType(CardGroup, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const content = _.map(items, item => {\n    const key = item.key || [item.header, item.description].join('-')\n    return <Card key={key} {...item} />\n  })\n\n  return <ElementType {...rest} className={classes}>{content}</ElementType>\n}\n\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: META.TYPES.VIEW,\n}\n\nCardGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n}\n\nexport default CardGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/CardHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A card can contain a header.\n */\nfunction CardHeader(props) {\n  const { children, className, content } = props\n  const classes = cx(className, 'header')\n  const rest = getUnhandledProps(CardHeader, props)\n  const ElementType = getElementType(CardHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nCardHeader._meta = {\n  name: 'CardHeader',\n  parent: 'Card',\n  type: META.TYPES.VIEW,\n}\n\nCardHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default CardHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/Card.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n} from '../../lib'\nimport Image from '../../elements/Image'\nimport CardContent from './CardContent'\nimport CardDescription from './CardDescription'\nimport CardGroup from './CardGroup'\nimport CardHeader from './CardHeader'\nimport CardMeta from './CardMeta'\n\n/**\n * A card displays site content in a manner similar to a playing card.\n */\nexport default class Card extends Component {\n  static propTypes = {\n    /** An element type to render as (string or function). */\n    as: customPropTypes.as,\n\n    /** A Card can center itself inside its container. */\n    centered: PropTypes.bool,\n\n    /** Primary content. */\n    children: PropTypes.node,\n\n    /** Additional classes. */\n    className: PropTypes.string,\n\n    /** A Card can be formatted to display different colors. */\n    color: PropTypes.oneOf(SUI.COLORS),\n\n    /** Shorthand for CardDescription. */\n    description: customPropTypes.itemShorthand,\n\n    /** Shorthand for primary content of CardContent. */\n    extra: customPropTypes.contentShorthand,\n\n    /** A Card can be formatted to take up the width of its container. */\n    fluid: PropTypes.bool,\n\n    /** Shorthand for CardHeader. */\n    header: customPropTypes.itemShorthand,\n\n    /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n    href: PropTypes.string,\n\n    /** A card can contain an Image component. */\n    image: customPropTypes.itemShorthand,\n\n    /** A card can be formatted to link to other content. */\n    link: PropTypes.bool,\n\n    /** Shorthand for CardMeta. */\n    meta: customPropTypes.itemShorthand,\n\n    /**\n     * Called on click. When passed, the component renders as an `a`\n     * tag by default instead of a `div`.\n     *\n     * @param {SyntheticEvent} event - React's original SyntheticEvent.\n     * @param {object} data - All props.\n     */\n    onClick: PropTypes.func,\n\n    /** A Card can be formatted to raise above the page. */\n    raised: PropTypes.bool,\n  }\n\n  static _meta = {\n    name: 'Card',\n    type: META.TYPES.VIEW,\n  }\n\n  static Content = CardContent\n  static Description = CardDescription\n  static Group = CardGroup\n  static Header = CardHeader\n  static Meta = CardMeta\n\n  handleClick = (e) => {\n    const { onClick } = this.props\n\n    if (onClick) onClick(e, this.props)\n  }\n\n  render() {\n    const {\n      centered,\n      children,\n      className,\n      color,\n      description,\n      extra,\n      fluid,\n      header,\n      href,\n      image,\n      link,\n      meta,\n      onClick,\n      raised,\n    } = this.props\n\n    const classes = cx(\n      'ui',\n      color,\n      useKeyOnly(centered, 'centered'),\n      useKeyOnly(fluid, 'fluid'),\n      useKeyOnly(link, 'link'),\n      useKeyOnly(raised, 'raised'),\n      'card',\n      className,\n    )\n    const rest = getUnhandledProps(Card, this.props)\n    const ElementType = getElementType(Card, this.props, () => {\n      if (onClick) return 'a'\n    })\n\n    if (!_.isNil(children)) {\n      return <ElementType {...rest} className={classes} href={href} onClick={this.handleClick}>{children}</ElementType>\n    }\n\n    return (\n      <ElementType {...rest} className={classes} href={href} onClick={this.handleClick}>\n        {Image.create(image)}\n        {(description || header || meta) && (\n          <CardContent description={description} header={header} meta={meta} />\n        )}\n        {extra && <CardContent extra>{extra}</CardContent>}\n      </ElementType>\n    )\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/CardMeta.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A card can contain content metadata.\n */\nfunction CardMeta(props) {\n  const { children, className, content } = props\n  const classes = cx(className, 'meta')\n  const rest = getUnhandledProps(CardMeta, props)\n  const ElementType = getElementType(CardMeta, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nCardMeta._meta = {\n  name: 'CardMeta',\n  parent: 'Card',\n  type: META.TYPES.VIEW,\n}\n\nCardMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default CardMeta\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Card/index.js":"export default from './Card'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentAction.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A comment can contain an action.\n */\nfunction CommentAction(props) {\n  const { active, className, children } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    className\n  )\n  const rest = getUnhandledProps(CommentAction, props)\n  const ElementType = getElementType(CommentAction, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentAction._meta = {\n  name: 'CommentAction',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentAction.defaultProps = {\n  as: 'a',\n}\n\nCommentAction.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Style as the currently active action. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentAction\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentActions.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain an list of actions a user may perform related to this comment.\n */\nfunction CommentActions(props) {\n  const { className, children } = props\n  const classes = cx('actions', className)\n  const rest = getUnhandledProps(CommentActions, props)\n  const ElementType = getElementType(CommentActions, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentActions._meta = {\n  name: 'CommentActions',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentActions.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentActions\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentAuthor.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain an author.\n */\nfunction CommentAuthor(props) {\n  const { className, children } = props\n  const classes = cx('author', className)\n  const rest = getUnhandledProps(CommentAuthor, props)\n  const ElementType = getElementType(CommentAuthor, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentAuthor._meta = {\n  name: 'CommentAuthor',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentAuthor.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentAuthor\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentAvatar.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createHTMLImage,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain an image or avatar.\n */\nfunction CommentAvatar(props) {\n  const { className, src } = props\n  const classes = cx('avatar', className)\n  const rest = getUnhandledProps(CommentAvatar, props)\n  const ElementType = getElementType(CommentAvatar, props)\n\n  return <ElementType {...rest} className={classes}>{createHTMLImage(src)}</ElementType>\n}\n\nCommentAvatar._meta = {\n  name: 'CommentAvatar',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentAvatar.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies the URL of the image. */\n  src: PropTypes.string,\n}\n\nexport default CommentAvatar\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentContent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain content.\n */\nfunction CommentContent(props) {\n  const { className, children } = props\n  const classes = cx(className, 'content')\n  const rest = getUnhandledProps(CommentContent, props)\n  const ElementType = getElementType(CommentContent, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentContent._meta = {\n  name: 'CommentContent',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * Comments can be grouped.\n */\nfunction CommentGroup(props) {\n  const {\n    className,\n    children,\n    collapsed,\n    minimal,\n    size,\n    threaded,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(collapsed, 'collapsed'),\n    useKeyOnly(minimal, 'minimal'),\n    useKeyOnly(threaded, 'threaded'),\n    'comments',\n    className,\n  )\n  const rest = getUnhandledProps(CommentGroup, props)\n  const ElementType = getElementType(CommentGroup, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentGroup._meta = {\n  name: 'CommentGroup',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comments can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n\n  /** Comments can hide extra information unless a user shows intent to interact with a comment. */\n  minimal: PropTypes.bool,\n\n  /** Comments can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'medium')),\n\n  /** A comment list can be threaded to showing the relationship between conversations. */\n  threaded: PropTypes.bool,\n}\n\nexport default CommentGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/Comment.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\nimport CommentAction from './CommentAction'\nimport CommentActions from './CommentActions'\nimport CommentAuthor from './CommentAuthor'\nimport CommentAvatar from './CommentAvatar'\nimport CommentContent from './CommentContent'\nimport CommentGroup from './CommentGroup'\nimport CommentMetadata from './CommentMetadata'\nimport CommentText from './CommentText'\n\n/**\n * A comment displays user feedback to site content.\n */\nfunction Comment(props) {\n  const { className, children, collapsed } = props\n\n  const classes = cx(\n    useKeyOnly(collapsed, 'collapsed'),\n    'comment',\n    className\n  )\n  const rest = getUnhandledProps(Comment, props)\n  const ElementType = getElementType(Comment, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nComment._meta = {\n  name: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nComment.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Comment can be collapsed, or hidden from view. */\n  collapsed: PropTypes.bool,\n}\n\nComment.Author = CommentAuthor\nComment.Action = CommentAction\nComment.Actions = CommentActions\nComment.Avatar = CommentAvatar\nComment.Content = CommentContent\nComment.Group = CommentGroup\nComment.Metadata = CommentMetadata\nComment.Text = CommentText\n\nexport default Comment\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentMetadata.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.\n */\nfunction CommentMetadata(props) {\n  const { className, children } = props\n  const classes = cx('metadata', className)\n  const rest = getUnhandledProps(CommentMetadata, props)\n  const ElementType = getElementType(CommentMetadata, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentMetadata._meta = {\n  name: 'CommentMetadata',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentMetadata.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentMetadata\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/CommentText.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A comment can contain text.\n */\nfunction CommentText(props) {\n  const { className, children } = props\n  const classes = cx(className, 'text')\n  const rest = getUnhandledProps(CommentText, props)\n  const ElementType = getElementType(CommentText, props)\n\n  return <ElementType {...rest} className={classes}>{children}</ElementType>\n}\n\nCommentText._meta = {\n  name: 'CommentText',\n  parent: 'Comment',\n  type: META.TYPES.VIEW,\n}\n\nCommentText.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n}\n\nexport default CommentText\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Comment/index.js":"export default from './Comment'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport FeedDate from './FeedDate'\nimport FeedExtra from './FeedExtra'\nimport FeedMeta from './FeedMeta'\nimport FeedSummary from './FeedSummary'\n\nfunction FeedContent(props) {\n  const {\n    children,\n    className,\n    content,\n    extraImages,\n    extraText,\n    date,\n    meta,\n    summary,\n  } = props\n\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(FeedContent, props)\n  const ElementType = getElementType(FeedContent, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedDate, val => ({ content: val }), date)}\n      {createShorthand(FeedSummary, val => ({ content: val }), summary)}\n      {content}\n      {createShorthand(FeedExtra, val => ({ text: true, content: val }), extraText)}\n      {createShorthand(FeedExtra, val => ({ images: val }), extraImages)}\n      {createShorthand(FeedMeta, val => ({ content: val }), meta)}\n    </ElementType>\n  )\n}\n\nFeedContent._meta = {\n  name: 'FeedContent',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand,\n}\n\nexport default FeedContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedDate.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * An event or an event summary can contain a date.\n */\nfunction FeedDate(props) {\n  const { children, className, content } = props\n  const classes = cx('date', className)\n  const rest = getUnhandledProps(FeedDate, props)\n  const ElementType = getElementType(FeedDate, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nFeedDate._meta = {\n  name: 'FeedDate',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedDate.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nexport default FeedDate\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedEvent.js":"import cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport FeedContent from './FeedContent'\nimport FeedLabel from './FeedLabel'\n\n/**\n * A feed contains an event.\n */\nfunction FeedEvent(props) {\n  const {\n    content,\n    children,\n    className,\n    date,\n    extraImages,\n    extraText,\n    image,\n    icon,\n    meta,\n    summary,\n  } = props\n\n  const classes = cx('event', className)\n  const rest = getUnhandledProps(FeedEvent, props)\n  const ElementType = getElementType(FeedEvent, props)\n\n  const hasContentProp = content || date || extraImages || extraText || meta || summary\n  const contentProps = { content, date, extraImages, extraText, meta, summary }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLabel, val => ({ icon: val }), icon)}\n      {createShorthand(FeedLabel, val => ({ image: val }), image)}\n      {hasContentProp && <FeedContent {...contentProps} />}\n      {children}\n    </ElementType>\n  )\n}\n\nFeedEvent._meta = {\n  name: 'FeedEvent',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedEvent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for FeedContent. */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with content. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand,\n}\n\nexport default FeedEvent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedExtra.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createHTMLImage,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A feed can contain an extra content.\n */\nfunction FeedExtra(props) {\n  const { children,\n    className,\n    content,\n    images,\n    text,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(images, 'images'),\n    useKeyOnly(content || text, 'text'),\n    'extra',\n    className,\n  )\n  const rest = getUnhandledProps(FeedExtra, props)\n  const ElementType = getElementType(FeedExtra, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n  const imageElements = _.map(images, (image, index) => {\n    const key = [index, image].join('-')\n    return createHTMLImage(image, { key })\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {imageElements}\n    </ElementType>\n  )\n}\n\nFeedExtra._meta = {\n  name: 'FeedExtra',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedExtra.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([\n    customPropTypes.disallow(['text']),\n    PropTypes.oneOfType([\n      PropTypes.bool,\n      customPropTypes.collectionShorthand,\n    ]),\n  ]),\n\n  /** An event can contain additional text information. */\n  text: PropTypes.bool,\n}\n\nexport default FeedExtra\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/Feed.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n} from '../../lib'\nimport FeedContent from './FeedContent'\nimport FeedDate from './FeedDate'\nimport FeedEvent from './FeedEvent'\nimport FeedExtra from './FeedExtra'\nimport FeedLabel from './FeedLabel'\nimport FeedLike from './FeedLike'\nimport FeedMeta from './FeedMeta'\nimport FeedSummary from './FeedSummary'\nimport FeedUser from './FeedUser'\n\n/**\n * A feed presents user activity chronologically.\n */\nfunction Feed(props) {\n  const {\n    children,\n    className,\n    events,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    'feed',\n    className,\n  )\n  const rest = getUnhandledProps(Feed, props)\n  const ElementType = getElementType(Feed, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const eventElements = _.map(events, eventProps => {\n    const { childKey, date, meta, summary, ...eventData } = eventProps\n    const finalKey = childKey || [date, meta, summary].join('-')\n\n    return (\n      <FeedEvent\n        date={date}\n        key={finalKey}\n        meta={meta}\n        summary={summary}\n        {...eventData}\n      />\n    )\n  })\n\n  return <ElementType {...rest} className={classes}>{eventElements}</ElementType>\n}\n\nFeed._meta = {\n  name: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeed.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand array of props for FeedEvent. */\n  events: customPropTypes.collectionShorthand,\n\n  /** A feed can have different sizes. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n}\n\nFeed.Content = FeedContent\nFeed.Date = FeedDate\nFeed.Event = FeedEvent\nFeed.Extra = FeedExtra\nFeed.Label = FeedLabel\nFeed.Like = FeedLike\nFeed.Meta = FeedMeta\nFeed.Summary = FeedSummary\nFeed.User = FeedUser\n\nexport default Feed\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedLabel.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createHTMLImage,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * An event can contain an image or icon label.\n */\nfunction FeedLabel(props) {\n  const {\n    children,\n    className,\n    content,\n    icon,\n    image,\n  } = props\n\n  const classes = cx('label', className)\n  const rest = getUnhandledProps(FeedLabel, props)\n  const ElementType = getElementType(FeedLabel, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {Icon.create(icon)}\n      {createHTMLImage(image)}\n    </ElementType>\n  )\n}\n\nFeedLabel._meta = {\n  name: 'FeedLabel',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedLabel.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand,\n}\n\nexport default FeedLabel\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedLike.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Icon from '../../elements/Icon'\n\n/**\n * A feed can contain a like element.\n */\nfunction FeedLike(props) {\n  const {\n    children,\n    className,\n    content,\n    icon,\n  } = props\n\n  const classes = cx('like', className)\n  const rest = getUnhandledProps(FeedLike, props)\n  const ElementType = getElementType(FeedLike, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon)}\n      {content}\n    </ElementType>\n  )\n}\n\nFeedLike._meta = {\n  name: 'FeedLike',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedLike.defaultProps = {\n  as: 'a',\n}\n\nFeedLike.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for icon. Mutually exclusive with children. */\n  icon: customPropTypes.itemShorthand,\n}\n\nexport default FeedLike\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedMeta.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport FeedLike from './FeedLike'\n\n/**\n * A feed can contain a meta.\n */\nfunction FeedMeta(props) {\n  const {\n    children,\n    className,\n    content,\n    like,\n  } = props\n\n  const classes = cx('meta', className)\n  const rest = getUnhandledProps(FeedMeta, props)\n  const ElementType = getElementType(FeedMeta, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLike, val => ({ content: val }), like)}\n      {content}\n    </ElementType>\n  )\n}\n\nFeedMeta._meta = {\n  name: 'FeedMeta',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand,\n}\n\nexport default FeedMeta\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedSummary.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthand,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport FeedDate from './FeedDate'\nimport FeedUser from './FeedUser'\n\n/**\n * A feed can contain a summary.\n */\nfunction FeedSummary(props) {\n  const {\n    children,\n    className,\n    content,\n    date,\n    user,\n  } = props\n\n  const classes = cx('summary', className)\n  const rest = getUnhandledProps(FeedSummary, props)\n  const ElementType = getElementType(FeedSummary, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedUser, val => ({ content: val }), user)}\n      {content}\n      {createShorthand(FeedDate, val => ({ content: val }), date)}\n    </ElementType>\n  )\n}\n\nFeedSummary._meta = {\n  name: 'FeedSummary',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedSummary.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand,\n}\n\nexport default FeedSummary\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/FeedUser.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A feed can contain a user element.\n */\nfunction FeedUser(props) {\n  const { children, className, content } = props\n  const classes = cx('user', className)\n  const rest = getUnhandledProps(FeedUser, props)\n  const ElementType = getElementType(FeedUser, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nFeedUser._meta = {\n  name: 'FeedUser',\n  parent: 'Feed',\n  type: META.TYPES.VIEW,\n}\n\nFeedUser.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nFeedUser.defaultProps = {\n  as: 'a',\n}\n\nexport default FeedUser\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Feed/index.js":"export default from './Feed'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/index.js":"export default from './Item'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemContent.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useVerticalAlignProp,\n} from '../../lib'\nimport ItemHeader from './ItemHeader'\nimport ItemDescription from './ItemDescription'\nimport ItemExtra from './ItemExtra'\nimport ItemMeta from './ItemMeta'\n\n/**\n * An item can contain content.\n */\nfunction ItemContent(props) {\n  const {\n    children,\n    className,\n    content,\n    description,\n    extra,\n    header,\n    meta,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    useVerticalAlignProp(verticalAlign),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(ItemContent, props)\n  const ElementType = getElementType(ItemContent, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemHeader.create(header)}\n      {ItemMeta.create(meta)}\n      {ItemDescription.create(description)}\n      {ItemExtra.create(extra)}\n      {content}\n    </ElementType>\n  )\n}\n\nItemContent._meta = {\n  name: 'ItemContent',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemContent.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n}\n\nexport default ItemContent\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemDescription.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * An item can contain a description with a single or multiple paragraphs.\n */\nfunction ItemDescription(props) {\n  const { children, className, content } = props\n  const classes = cx('description', className)\n  const rest = getUnhandledProps(ItemDescription, props)\n  const ElementType = getElementType(ItemDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nItemDescription._meta = {\n  name: 'ItemDescription',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemDescription.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nItemDescription.create = createShorthandFactory(ItemDescription, content => ({ content }))\n\nexport default ItemDescription\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemExtra.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * An item can contain extra content meant to be formatted separately from the main content.\n */\nfunction ItemExtra(props) {\n  const { children, className, content } = props\n  const classes = cx('extra', className)\n  const rest = getUnhandledProps(ItemExtra, props)\n  const ElementType = getElementType(ItemExtra, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nItemExtra._meta = {\n  name: 'ItemExtra',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemExtra.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nItemExtra.create = createShorthandFactory(ItemExtra, content => ({ content }))\n\nexport default ItemExtra\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n  useKeyOrValueAndKey,\n} from '../../lib'\nimport Item from './Item'\n\n/**\n * A group of items.\n */\nfunction ItemGroup(props) {\n  const {\n    children,\n    className,\n    divided,\n    items,\n    link,\n    relaxed,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(link, 'link'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    'items',\n    className,\n  )\n  const rest = getUnhandledProps(ItemGroup, props)\n  const ElementType = getElementType(ItemGroup, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  const itemsJSX = _.map(items, item => {\n    const { childKey, ...itemProps } = item\n    const finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-')\n\n    return <Item {...itemProps} key={finalKey} />\n  })\n\n  return <ElementType {...rest} className={classes}>{itemsJSX}</ElementType>\n}\n\nItemGroup._meta = {\n  name: 'ItemGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Item',\n}\n\nItemGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Items can be divided to better distinguish between grouped content. */\n  divided: PropTypes.bool,\n\n  /** Shorthand array of props for Item. */\n  items: customPropTypes.collectionShorthand,\n\n  /** An item can be formatted so that the entire contents link to another page. */\n  link: PropTypes.bool,\n\n  /** A group of items can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['very']),\n  ]),\n}\n\nexport default ItemGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemHeader.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * An item can contain a header.\n */\nfunction ItemHeader(props) {\n  const { children, className, content } = props\n  const classes = cx('header', className)\n  const rest = getUnhandledProps(ItemHeader, props)\n  const ElementType = getElementType(ItemHeader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nItemHeader._meta = {\n  name: 'ItemHeader',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemHeader.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nItemHeader.create = createShorthandFactory(ItemHeader, content => ({ content }))\n\nexport default ItemHeader\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemImage.js":"import React from 'react'\n\nimport {\n  createShorthandFactory,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport Image from '../../elements/Image'\n\n/**\n * An item can contain an image.\n */\nfunction ItemImage(props) {\n  const { size } = props\n  const rest = getUnhandledProps(ItemImage, props)\n\n  return <Image {...rest} size={size} ui={!!size} wrapped />\n}\n\nItemImage._meta = {\n  name: 'ItemImage',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemImage.propTypes = {\n  /** An image may appear at different sizes. */\n  size: Image.propTypes.size,\n}\n\nItemImage.create = createShorthandFactory(ItemImage, src => ({ src }))\n\nexport default ItemImage\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/Item.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\nimport ItemContent from './ItemContent'\nimport ItemDescription from './ItemDescription'\nimport ItemExtra from './ItemExtra'\nimport ItemGroup from './ItemGroup'\nimport ItemHeader from './ItemHeader'\nimport ItemImage from './ItemImage'\nimport ItemMeta from './ItemMeta'\n\n/**\n * An item view presents large collections of site content for display.\n */\nfunction Item(props) {\n  const {\n    children,\n    className,\n    content,\n    description,\n    extra,\n    header,\n    image,\n    meta,\n  } = props\n\n  const classes = cx('item', className)\n  const rest = getUnhandledProps(Item, props)\n  const ElementType = getElementType(Item, props)\n\n  if (!_.isNil(children)) {\n    return <ElementType {...rest} className={classes}>{children}</ElementType>\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemImage.create(image)}\n\n      <ItemContent\n        content={content}\n        description={description}\n        extra={extra}\n        header={header}\n        meta={meta}\n      />\n    </ElementType>\n  )\n}\n\nItem._meta = {\n  name: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItem.Content = ItemContent\nItem.Description = ItemDescription\nItem.Extra = ItemExtra\nItem.Group = ItemGroup\nItem.Header = ItemHeader\nItem.Image = ItemImage\nItem.Meta = ItemMeta\n\nItem.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for ItemContent component. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemImage component. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n}\n\nexport default Item\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Item/ItemMeta.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  createShorthandFactory,\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * An item can contain content metadata.\n */\nfunction ItemMeta(props) {\n  const { children, className, content } = props\n  const classes = cx('meta', className)\n  const rest = getUnhandledProps(ItemMeta, props)\n  const ElementType = getElementType(ItemMeta, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? content : children}\n    </ElementType>\n  )\n}\n\nItemMeta._meta = {\n  name: 'ItemMeta',\n  parent: 'Item',\n  type: META.TYPES.VIEW,\n}\n\nItemMeta.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n}\n\nItemMeta.create = createShorthandFactory(ItemMeta, content => ({ content }))\n\nexport default ItemMeta\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Statistic/index.js":"export default from './Statistic'\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Statistic/StatisticGroup.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useWidthProp,\n} from '../../lib'\nimport Statistic from './Statistic'\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  const {\n    children,\n    className,\n    color,\n    horizontal,\n    inverted,\n    items,\n    size,\n    widths,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useWidthProp(widths),\n    'statistics',\n    className,\n  )\n  const rest = getUnhandledProps(StatisticGroup, props)\n  const ElementType = getElementType(StatisticGroup, props)\n\n  if (!_.isNil(children)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n  const itemsJSX = _.map(items, item => (\n    <Statistic key={item.childKey || [item.label, item.title].join('-')} {...item} />\n  ))\n\n  return <ElementType {...rest} className={classes}>{itemsJSX}</ElementType>\n}\n\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Statistic',\n}\n\nStatisticGroup.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS),\n}\n\nexport default StatisticGroup\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Statistic/Statistic.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  SUI,\n  useKeyOnly,\n  useValueAndKey,\n} from '../../lib'\nimport StatisticGroup from './StatisticGroup'\nimport StatisticLabel from './StatisticLabel'\nimport StatisticValue from './StatisticValue'\n\n/**\n * A statistic emphasizes the current value of an attribute.\n */\nfunction Statistic(props) {\n  const {\n    children,\n    className,\n    color,\n    floated,\n    horizontal,\n    inverted,\n    label,\n    size,\n    text,\n    value,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    'statistic',\n    className,\n  )\n  const rest = getUnhandledProps(Statistic, props)\n  const ElementType = getElementType(Statistic, props)\n\n  if (!_.isNil(children)) return <ElementType {...rest} className={classes}>{children}</ElementType>\n\n  return (\n    <ElementType {...rest} className={classes}>\n      <StatisticValue text={text} value={value} />\n      <StatisticLabel label={label} />\n    </ElementType>\n  )\n}\n\nStatistic._meta = {\n  name: 'Statistic',\n  type: META.TYPES.VIEW,\n}\n\nStatistic.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A statistic can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A statistic can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Label content of the Statistic. */\n  label: customPropTypes.contentShorthand,\n\n  /** A statistic can vary in size. */\n  size: PropTypes.oneOf(_.without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool,\n\n  /** Value content of the Statistic. */\n  value: customPropTypes.contentShorthand,\n}\n\nStatistic.Group = StatisticGroup\nStatistic.Label = StatisticLabel\nStatistic.Value = StatisticValue\n\nexport default Statistic\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Statistic/StatisticLabel.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n} from '../../lib'\n\n/**\n * A statistic can contain a label to help provide context for the presented value.\n */\nfunction StatisticLabel(props) {\n  const { children, className, label } = props\n  const classes = cx('label', className)\n  const rest = getUnhandledProps(StatisticLabel, props)\n  const ElementType = getElementType(StatisticLabel, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? label : children}\n    </ElementType>\n  )\n}\n\nStatisticLabel._meta = {\n  name: 'StatisticLabel',\n  parent: 'Statistic',\n  type: META.TYPES.VIEW,\n}\n\nStatisticLabel.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  label: customPropTypes.contentShorthand,\n}\n\nexport default StatisticLabel\n","/home/travis/build/npmtest/node-npmtest-semantic-ui-react/node_modules/semantic-ui-react/src/views/Statistic/StatisticValue.js":"import cx from 'classnames'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport {\n  customPropTypes,\n  getElementType,\n  getUnhandledProps,\n  META,\n  useKeyOnly,\n} from '../../lib'\n\n/**\n * A statistic can contain a numeric, icon, image, or text value.\n */\nfunction StatisticValue(props) {\n  const {\n    children,\n    className,\n    text,\n    value,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(text, 'text'),\n    'value',\n    className,\n  )\n  const rest = getUnhandledProps(StatisticValue, props)\n  const ElementType = getElementType(StatisticValue, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.isNil(children) ? value : children}\n    </ElementType>\n  )\n}\n\nStatisticValue._meta = {\n  name: 'StatisticValue',\n  parent: 'Statistic',\n  type: META.TYPES.VIEW,\n}\n\nStatisticValue.propTypes = {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Format the value with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool,\n\n  /** Primary content of the StatisticValue. Mutually exclusive with the children prop. */\n  value: customPropTypes.contentShorthand,\n}\n\nexport default StatisticValue\n"}